// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package v1alpha2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Protocol int32

const (
	Protocol_TCP  Protocol = 0
	Protocol_UDP  Protocol = 1
	Protocol_SCTP Protocol = 2
)

var Protocol_name = map[int32]string{
	0: "TCP",
	1: "UDP",
	2: "SCTP",
}
var Protocol_value = map[string]int32{
	"TCP":  0,
	"UDP":  1,
	"SCTP": 2,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{0}
}

type MountPropagation int32

const (
	// No mount propagation ("private" in Linux terminology).
	MountPropagation_PROPAGATION_PRIVATE MountPropagation = 0
	// Mounts get propagated from the host to the container ("rslave" in Linux).
	MountPropagation_PROPAGATION_HOST_TO_CONTAINER MountPropagation = 1
	// Mounts get propagated from the host to the container and from the
	// container to the host ("rshared" in Linux).
	MountPropagation_PROPAGATION_BIDIRECTIONAL MountPropagation = 2
)

var MountPropagation_name = map[int32]string{
	0: "PROPAGATION_PRIVATE",
	1: "PROPAGATION_HOST_TO_CONTAINER",
	2: "PROPAGATION_BIDIRECTIONAL",
}
var MountPropagation_value = map[string]int32{
	"PROPAGATION_PRIVATE":           0,
	"PROPAGATION_HOST_TO_CONTAINER": 1,
	"PROPAGATION_BIDIRECTIONAL":     2,
}

func (x MountPropagation) String() string {
	return proto.EnumName(MountPropagation_name, int32(x))
}
func (MountPropagation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{1}
}

// A NamespaceMode describes the intended namespace configuration for each
// of the namespaces (Network, PID, IPC) in NamespaceOption. Runtimes should
// map these modes as appropriate for the technology underlying the runtime.
type NamespaceMode int32

const (
	// A POD namespace is common to all containers in a pod.
	// For example, a container with a PID namespace of POD expects to view
	// all of the processes in all of the containers in the pod.
	NamespaceMode_POD NamespaceMode = 0
	// A CONTAINER namespace is restricted to a single container.
	// For example, a container with a PID namespace of CONTAINER expects to
	// view only the processes in that container.
	NamespaceMode_CONTAINER NamespaceMode = 1
	// A NODE namespace is the namespace of the Kubernetes node.
	// For example, a container with a PID namespace of NODE expects to view
	// all of the processes on the host running the kubelet.
	NamespaceMode_NODE NamespaceMode = 2
	// TARGET targets the namespace of another container. When this is specified,
	// a target_id must be specified in NamespaceOption and refer to a container
	// previously created with NamespaceMode CONTAINER. This containers namespace
	// will be made to match that of container target_id.
	// For example, a container with a PID namespace of TARGET expects to view
	// all of the processes that container target_id can view.
	NamespaceMode_TARGET NamespaceMode = 3
)

var NamespaceMode_name = map[int32]string{
	0: "POD",
	1: "CONTAINER",
	2: "NODE",
	3: "TARGET",
}
var NamespaceMode_value = map[string]int32{
	"POD":       0,
	"CONTAINER": 1,
	"NODE":      2,
	"TARGET":    3,
}

func (x NamespaceMode) String() string {
	return proto.EnumName(NamespaceMode_name, int32(x))
}
func (NamespaceMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{2}
}

type PodSandboxState int32

const (
	PodSandboxState_SANDBOX_READY    PodSandboxState = 0
	PodSandboxState_SANDBOX_NOTREADY PodSandboxState = 1
)

var PodSandboxState_name = map[int32]string{
	0: "SANDBOX_READY",
	1: "SANDBOX_NOTREADY",
}
var PodSandboxState_value = map[string]int32{
	"SANDBOX_READY":    0,
	"SANDBOX_NOTREADY": 1,
}

func (x PodSandboxState) String() string {
	return proto.EnumName(PodSandboxState_name, int32(x))
}
func (PodSandboxState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{3}
}

type ContainerState int32

const (
	ContainerState_CONTAINER_CREATED ContainerState = 0
	ContainerState_CONTAINER_RUNNING ContainerState = 1
	ContainerState_CONTAINER_EXITED  ContainerState = 2
	ContainerState_CONTAINER_UNKNOWN ContainerState = 3
)

var ContainerState_name = map[int32]string{
	0: "CONTAINER_CREATED",
	1: "CONTAINER_RUNNING",
	2: "CONTAINER_EXITED",
	3: "CONTAINER_UNKNOWN",
}
var ContainerState_value = map[string]int32{
	"CONTAINER_CREATED": 0,
	"CONTAINER_RUNNING": 1,
	"CONTAINER_EXITED":  2,
	"CONTAINER_UNKNOWN": 3,
}

func (x ContainerState) String() string {
	return proto.EnumName(ContainerState_name, int32(x))
}
func (ContainerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{4}
}

type VersionRequest struct {
	// Version of the kubelet runtime API.
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{0}
}
func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (dst *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(dst, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

func (m *VersionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type VersionResponse struct {
	// Version of the kubelet runtime API.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Name of the container runtime.
	RuntimeName string `protobuf:"bytes,2,opt,name=runtime_name,json=runtimeName,proto3" json:"runtime_name,omitempty"`
	// Version of the container runtime. The string must be
	// semver-compatible.
	RuntimeVersion string `protobuf:"bytes,3,opt,name=runtime_version,json=runtimeVersion,proto3" json:"runtime_version,omitempty"`
	// API version of the container runtime. The string must be
	// semver-compatible.
	RuntimeApiVersion    string   `protobuf:"bytes,4,opt,name=runtime_api_version,json=runtimeApiVersion,proto3" json:"runtime_api_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{1}
}
func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (dst *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(dst, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionResponse) GetRuntimeName() string {
	if m != nil {
		return m.RuntimeName
	}
	return ""
}

func (m *VersionResponse) GetRuntimeVersion() string {
	if m != nil {
		return m.RuntimeVersion
	}
	return ""
}

func (m *VersionResponse) GetRuntimeApiVersion() string {
	if m != nil {
		return m.RuntimeApiVersion
	}
	return ""
}

// DNSConfig specifies the DNS servers and search domains of a sandbox.
type DNSConfig struct {
	// List of DNS servers of the cluster.
	Servers []string `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	// List of DNS search domains of the cluster.
	Searches []string `protobuf:"bytes,2,rep,name=searches,proto3" json:"searches,omitempty"`
	// List of DNS options. See https://linux.die.net/man/5/resolv.conf
	// for all available options.
	Options              []string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSConfig) Reset()         { *m = DNSConfig{} }
func (m *DNSConfig) String() string { return proto.CompactTextString(m) }
func (*DNSConfig) ProtoMessage()    {}
func (*DNSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{2}
}
func (m *DNSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSConfig.Unmarshal(m, b)
}
func (m *DNSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSConfig.Marshal(b, m, deterministic)
}
func (dst *DNSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSConfig.Merge(dst, src)
}
func (m *DNSConfig) XXX_Size() int {
	return xxx_messageInfo_DNSConfig.Size(m)
}
func (m *DNSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DNSConfig proto.InternalMessageInfo

func (m *DNSConfig) GetServers() []string {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *DNSConfig) GetSearches() []string {
	if m != nil {
		return m.Searches
	}
	return nil
}

func (m *DNSConfig) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

// PortMapping specifies the port mapping configurations of a sandbox.
type PortMapping struct {
	// Protocol of the port mapping.
	Protocol Protocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=runtime.v1alpha2.Protocol" json:"protocol,omitempty"`
	// Port number within the container. Default: 0 (not specified).
	ContainerPort int32 `protobuf:"varint,2,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
	// Port number on the host. Default: 0 (not specified).
	HostPort int32 `protobuf:"varint,3,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	// Host IP.
	HostIp               string   `protobuf:"bytes,4,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortMapping) Reset()         { *m = PortMapping{} }
func (m *PortMapping) String() string { return proto.CompactTextString(m) }
func (*PortMapping) ProtoMessage()    {}
func (*PortMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{3}
}
func (m *PortMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortMapping.Unmarshal(m, b)
}
func (m *PortMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortMapping.Marshal(b, m, deterministic)
}
func (dst *PortMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortMapping.Merge(dst, src)
}
func (m *PortMapping) XXX_Size() int {
	return xxx_messageInfo_PortMapping.Size(m)
}
func (m *PortMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_PortMapping.DiscardUnknown(m)
}

var xxx_messageInfo_PortMapping proto.InternalMessageInfo

func (m *PortMapping) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_TCP
}

func (m *PortMapping) GetContainerPort() int32 {
	if m != nil {
		return m.ContainerPort
	}
	return 0
}

func (m *PortMapping) GetHostPort() int32 {
	if m != nil {
		return m.HostPort
	}
	return 0
}

func (m *PortMapping) GetHostIp() string {
	if m != nil {
		return m.HostIp
	}
	return ""
}

// Mount specifies a host volume to mount into a container.
type Mount struct {
	// Path of the mount within the container.
	ContainerPath string `protobuf:"bytes,1,opt,name=container_path,json=containerPath,proto3" json:"container_path,omitempty"`
	// Path of the mount on the host. If the hostPath doesn't exist, then runtimes
	// should report error. If the hostpath is a symbolic link, runtimes should
	// follow the symlink and mount the real destination to container.
	HostPath string `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	// If set, the mount is read-only.
	Readonly bool `protobuf:"varint,3,opt,name=readonly,proto3" json:"readonly,omitempty"`
	// If set, the mount needs SELinux relabeling.
	SelinuxRelabel bool `protobuf:"varint,4,opt,name=selinux_relabel,json=selinuxRelabel,proto3" json:"selinux_relabel,omitempty"`
	// Requested propagation mode.
	Propagation          MountPropagation `protobuf:"varint,5,opt,name=propagation,proto3,enum=runtime.v1alpha2.MountPropagation" json:"propagation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Mount) Reset()         { *m = Mount{} }
func (m *Mount) String() string { return proto.CompactTextString(m) }
func (*Mount) ProtoMessage()    {}
func (*Mount) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{4}
}
func (m *Mount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mount.Unmarshal(m, b)
}
func (m *Mount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mount.Marshal(b, m, deterministic)
}
func (dst *Mount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mount.Merge(dst, src)
}
func (m *Mount) XXX_Size() int {
	return xxx_messageInfo_Mount.Size(m)
}
func (m *Mount) XXX_DiscardUnknown() {
	xxx_messageInfo_Mount.DiscardUnknown(m)
}

var xxx_messageInfo_Mount proto.InternalMessageInfo

func (m *Mount) GetContainerPath() string {
	if m != nil {
		return m.ContainerPath
	}
	return ""
}

func (m *Mount) GetHostPath() string {
	if m != nil {
		return m.HostPath
	}
	return ""
}

func (m *Mount) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *Mount) GetSelinuxRelabel() bool {
	if m != nil {
		return m.SelinuxRelabel
	}
	return false
}

func (m *Mount) GetPropagation() MountPropagation {
	if m != nil {
		return m.Propagation
	}
	return MountPropagation_PROPAGATION_PRIVATE
}

// NamespaceOption provides options for Linux namespaces.
type NamespaceOption struct {
	// Network namespace for this container/sandbox.
	// Note: There is currently no way to set CONTAINER scoped network in the Kubernetes API.
	// Namespaces currently set by the kubelet: POD, NODE
	Network NamespaceMode `protobuf:"varint,1,opt,name=network,proto3,enum=runtime.v1alpha2.NamespaceMode" json:"network,omitempty"`
	// PID namespace for this container/sandbox.
	// Note: The CRI default is POD, but the v1.PodSpec default is CONTAINER.
	// The kubelet's runtime manager will set this to CONTAINER explicitly for v1 pods.
	// Namespaces currently set by the kubelet: POD, CONTAINER, NODE, TARGET
	Pid NamespaceMode `protobuf:"varint,2,opt,name=pid,proto3,enum=runtime.v1alpha2.NamespaceMode" json:"pid,omitempty"`
	// IPC namespace for this container/sandbox.
	// Note: There is currently no way to set CONTAINER scoped IPC in the Kubernetes API.
	// Namespaces currently set by the kubelet: POD, NODE
	Ipc NamespaceMode `protobuf:"varint,3,opt,name=ipc,proto3,enum=runtime.v1alpha2.NamespaceMode" json:"ipc,omitempty"`
	// Target Container ID for NamespaceMode of TARGET. This container must have been
	// previously created in the same pod. It is not possible to specify different targets
	// for each namespace.
	TargetId             string   `protobuf:"bytes,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceOption) Reset()         { *m = NamespaceOption{} }
func (m *NamespaceOption) String() string { return proto.CompactTextString(m) }
func (*NamespaceOption) ProtoMessage()    {}
func (*NamespaceOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{5}
}
func (m *NamespaceOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceOption.Unmarshal(m, b)
}
func (m *NamespaceOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceOption.Marshal(b, m, deterministic)
}
func (dst *NamespaceOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceOption.Merge(dst, src)
}
func (m *NamespaceOption) XXX_Size() int {
	return xxx_messageInfo_NamespaceOption.Size(m)
}
func (m *NamespaceOption) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceOption.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceOption proto.InternalMessageInfo

func (m *NamespaceOption) GetNetwork() NamespaceMode {
	if m != nil {
		return m.Network
	}
	return NamespaceMode_POD
}

func (m *NamespaceOption) GetPid() NamespaceMode {
	if m != nil {
		return m.Pid
	}
	return NamespaceMode_POD
}

func (m *NamespaceOption) GetIpc() NamespaceMode {
	if m != nil {
		return m.Ipc
	}
	return NamespaceMode_POD
}

func (m *NamespaceOption) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

// Int64Value is the wrapper of int64.
type Int64Value struct {
	// The value.
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int64Value) Reset()         { *m = Int64Value{} }
func (m *Int64Value) String() string { return proto.CompactTextString(m) }
func (*Int64Value) ProtoMessage()    {}
func (*Int64Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{6}
}
func (m *Int64Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int64Value.Unmarshal(m, b)
}
func (m *Int64Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int64Value.Marshal(b, m, deterministic)
}
func (dst *Int64Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int64Value.Merge(dst, src)
}
func (m *Int64Value) XXX_Size() int {
	return xxx_messageInfo_Int64Value.Size(m)
}
func (m *Int64Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Int64Value.DiscardUnknown(m)
}

var xxx_messageInfo_Int64Value proto.InternalMessageInfo

func (m *Int64Value) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// LinuxSandboxSecurityContext holds linux security configuration that will be
// applied to a sandbox. Note that:
// 1) It does not apply to containers in the pods.
// 2) It may not be applicable to a PodSandbox which does not contain any running
//    process.
type LinuxSandboxSecurityContext struct {
	// Configurations for the sandbox's namespaces.
	// This will be used only if the PodSandbox uses namespace for isolation.
	NamespaceOptions *NamespaceOption `protobuf:"bytes,1,opt,name=namespace_options,json=namespaceOptions,proto3" json:"namespace_options,omitempty"`
	// Optional SELinux context to be applied.
	SelinuxOptions *SELinuxOption `protobuf:"bytes,2,opt,name=selinux_options,json=selinuxOptions,proto3" json:"selinux_options,omitempty"`
	// UID to run sandbox processes as, when applicable.
	RunAsUser *Int64Value `protobuf:"bytes,3,opt,name=run_as_user,json=runAsUser,proto3" json:"run_as_user,omitempty"`
	// GID to run sandbox processes as, when applicable. run_as_group should only
	// be specified when run_as_user is specified; otherwise, the runtime MUST error.
	RunAsGroup *Int64Value `protobuf:"bytes,8,opt,name=run_as_group,json=runAsGroup,proto3" json:"run_as_group,omitempty"`
	// If set, the root filesystem of the sandbox is read-only.
	ReadonlyRootfs bool `protobuf:"varint,4,opt,name=readonly_rootfs,json=readonlyRootfs,proto3" json:"readonly_rootfs,omitempty"`
	// List of groups applied to the first process run in the sandbox, in
	// addition to the sandbox's primary GID.
	SupplementalGroups []int64 `protobuf:"varint,5,rep,packed,name=supplemental_groups,json=supplementalGroups,proto3" json:"supplemental_groups,omitempty"`
	// Indicates whether the sandbox will be asked to run a privileged
	// container. If a privileged container is to be executed within it, this
	// MUST be true.
	// This allows a sandbox to take additional security precautions if no
	// privileged containers are expected to be run.
	Privileged bool `protobuf:"varint,6,opt,name=privileged,proto3" json:"privileged,omitempty"`
	// Seccomp profile for the sandbox, candidate values are:
	// * runtime/default: the default profile for the container runtime
	// * unconfined: unconfined profile, ie, no seccomp sandboxing
	// * localhost/<full-path-to-profile>: the profile installed on the node.
	//   <full-path-to-profile> is the full path of the profile.
	// Default: "", which is identical with unconfined.
	SeccompProfilePath   string   `protobuf:"bytes,7,opt,name=seccomp_profile_path,json=seccompProfilePath,proto3" json:"seccomp_profile_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinuxSandboxSecurityContext) Reset()         { *m = LinuxSandboxSecurityContext{} }
func (m *LinuxSandboxSecurityContext) String() string { return proto.CompactTextString(m) }
func (*LinuxSandboxSecurityContext) ProtoMessage()    {}
func (*LinuxSandboxSecurityContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{7}
}
func (m *LinuxSandboxSecurityContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxSandboxSecurityContext.Unmarshal(m, b)
}
func (m *LinuxSandboxSecurityContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxSandboxSecurityContext.Marshal(b, m, deterministic)
}
func (dst *LinuxSandboxSecurityContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxSandboxSecurityContext.Merge(dst, src)
}
func (m *LinuxSandboxSecurityContext) XXX_Size() int {
	return xxx_messageInfo_LinuxSandboxSecurityContext.Size(m)
}
func (m *LinuxSandboxSecurityContext) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxSandboxSecurityContext.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxSandboxSecurityContext proto.InternalMessageInfo

func (m *LinuxSandboxSecurityContext) GetNamespaceOptions() *NamespaceOption {
	if m != nil {
		return m.NamespaceOptions
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetSelinuxOptions() *SELinuxOption {
	if m != nil {
		return m.SelinuxOptions
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetRunAsUser() *Int64Value {
	if m != nil {
		return m.RunAsUser
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetRunAsGroup() *Int64Value {
	if m != nil {
		return m.RunAsGroup
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetReadonlyRootfs() bool {
	if m != nil {
		return m.ReadonlyRootfs
	}
	return false
}

func (m *LinuxSandboxSecurityContext) GetSupplementalGroups() []int64 {
	if m != nil {
		return m.SupplementalGroups
	}
	return nil
}

func (m *LinuxSandboxSecurityContext) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *LinuxSandboxSecurityContext) GetSeccompProfilePath() string {
	if m != nil {
		return m.SeccompProfilePath
	}
	return ""
}

// LinuxPodSandboxConfig holds platform-specific configurations for Linux
// host platforms and Linux-based containers.
type LinuxPodSandboxConfig struct {
	// Parent cgroup of the PodSandbox.
	// The cgroupfs style syntax will be used, but the container runtime can
	// convert it to systemd semantics if needed.
	CgroupParent string `protobuf:"bytes,1,opt,name=cgroup_parent,json=cgroupParent,proto3" json:"cgroup_parent,omitempty"`
	// LinuxSandboxSecurityContext holds sandbox security attributes.
	SecurityContext *LinuxSandboxSecurityContext `protobuf:"bytes,2,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
	// Sysctls holds linux sysctls config for the sandbox.
	Sysctls              map[string]string `protobuf:"bytes,3,rep,name=sysctls,proto3" json:"sysctls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LinuxPodSandboxConfig) Reset()         { *m = LinuxPodSandboxConfig{} }
func (m *LinuxPodSandboxConfig) String() string { return proto.CompactTextString(m) }
func (*LinuxPodSandboxConfig) ProtoMessage()    {}
func (*LinuxPodSandboxConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{8}
}
func (m *LinuxPodSandboxConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxPodSandboxConfig.Unmarshal(m, b)
}
func (m *LinuxPodSandboxConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxPodSandboxConfig.Marshal(b, m, deterministic)
}
func (dst *LinuxPodSandboxConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxPodSandboxConfig.Merge(dst, src)
}
func (m *LinuxPodSandboxConfig) XXX_Size() int {
	return xxx_messageInfo_LinuxPodSandboxConfig.Size(m)
}
func (m *LinuxPodSandboxConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxPodSandboxConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxPodSandboxConfig proto.InternalMessageInfo

func (m *LinuxPodSandboxConfig) GetCgroupParent() string {
	if m != nil {
		return m.CgroupParent
	}
	return ""
}

func (m *LinuxPodSandboxConfig) GetSecurityContext() *LinuxSandboxSecurityContext {
	if m != nil {
		return m.SecurityContext
	}
	return nil
}

func (m *LinuxPodSandboxConfig) GetSysctls() map[string]string {
	if m != nil {
		return m.Sysctls
	}
	return nil
}

// PodSandboxMetadata holds all necessary information for building the sandbox name.
// The container runtime is encouraged to expose the metadata associated with the
// PodSandbox in its user interface for better user experience. For example,
// the runtime can construct a unique PodSandboxName based on the metadata.
type PodSandboxMetadata struct {
	// Pod name of the sandbox. Same as the pod name in the Pod ObjectMeta.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Pod UID of the sandbox. Same as the pod UID in the Pod ObjectMeta.
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// Pod namespace of the sandbox. Same as the pod namespace in the Pod ObjectMeta.
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Attempt number of creating the sandbox. Default: 0.
	Attempt              uint32   `protobuf:"varint,4,opt,name=attempt,proto3" json:"attempt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodSandboxMetadata) Reset()         { *m = PodSandboxMetadata{} }
func (m *PodSandboxMetadata) String() string { return proto.CompactTextString(m) }
func (*PodSandboxMetadata) ProtoMessage()    {}
func (*PodSandboxMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{9}
}
func (m *PodSandboxMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxMetadata.Unmarshal(m, b)
}
func (m *PodSandboxMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxMetadata.Marshal(b, m, deterministic)
}
func (dst *PodSandboxMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxMetadata.Merge(dst, src)
}
func (m *PodSandboxMetadata) XXX_Size() int {
	return xxx_messageInfo_PodSandboxMetadata.Size(m)
}
func (m *PodSandboxMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxMetadata proto.InternalMessageInfo

func (m *PodSandboxMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PodSandboxMetadata) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PodSandboxMetadata) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PodSandboxMetadata) GetAttempt() uint32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

// PodSandboxConfig holds all the required and optional fields for creating a
// sandbox.
type PodSandboxConfig struct {
	// Metadata of the sandbox. This information will uniquely identify the
	// sandbox, and the runtime should leverage this to ensure correct
	// operation. The runtime may also use this information to improve UX, such
	// as by constructing a readable name.
	Metadata *PodSandboxMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Hostname of the sandbox. Hostname could only be empty when the pod
	// network namespace is NODE.
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Path to the directory on the host in which container log files are
	// stored.
	// By default the log of a container going into the LogDirectory will be
	// hooked up to STDOUT and STDERR. However, the LogDirectory may contain
	// binary log files with structured logging data from the individual
	// containers. For example, the files might be newline separated JSON
	// structured logs, systemd-journald journal files, gRPC trace files, etc.
	// E.g.,
	//     PodSandboxConfig.LogDirectory = `/var/log/pods/<podUID>/`
	//     ContainerConfig.LogPath = `containerName/Instance#.log`
	//
	// WARNING: Log management and how kubelet should interface with the
	// container logs are under active discussion in
	// https://issues.k8s.io/24677. There *may* be future change of direction
	// for logging as the discussion carries on.
	LogDirectory string `protobuf:"bytes,3,opt,name=log_directory,json=logDirectory,proto3" json:"log_directory,omitempty"`
	// DNS config for the sandbox.
	DnsConfig *DNSConfig `protobuf:"bytes,4,opt,name=dns_config,json=dnsConfig,proto3" json:"dns_config,omitempty"`
	// Port mappings for the sandbox.
	PortMappings []*PortMapping `protobuf:"bytes,5,rep,name=port_mappings,json=portMappings,proto3" json:"port_mappings,omitempty"`
	// Key-value pairs that may be used to scope and select individual resources.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Unstructured key-value map that may be set by the kubelet to store and
	// retrieve arbitrary metadata. This will include any annotations set on a
	// pod through the Kubernetes API.
	//
	// Annotations MUST NOT be altered by the runtime; the annotations stored
	// here MUST be returned in the PodSandboxStatus associated with the pod
	// this PodSandboxConfig creates.
	//
	// In general, in order to preserve a well-defined interface between the
	// kubelet and the container runtime, annotations SHOULD NOT influence
	// runtime behaviour.
	//
	// Annotations can also be useful for runtime authors to experiment with
	// new features that are opaque to the Kubernetes APIs (both user-facing
	// and the CRI). Whenever possible, however, runtime authors SHOULD
	// consider proposing new typed fields for any new features instead.
	Annotations map[string]string `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional configurations specific to Linux hosts.
	Linux                *LinuxPodSandboxConfig `protobuf:"bytes,8,opt,name=linux,proto3" json:"linux,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PodSandboxConfig) Reset()         { *m = PodSandboxConfig{} }
func (m *PodSandboxConfig) String() string { return proto.CompactTextString(m) }
func (*PodSandboxConfig) ProtoMessage()    {}
func (*PodSandboxConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{10}
}
func (m *PodSandboxConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxConfig.Unmarshal(m, b)
}
func (m *PodSandboxConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxConfig.Marshal(b, m, deterministic)
}
func (dst *PodSandboxConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxConfig.Merge(dst, src)
}
func (m *PodSandboxConfig) XXX_Size() int {
	return xxx_messageInfo_PodSandboxConfig.Size(m)
}
func (m *PodSandboxConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxConfig proto.InternalMessageInfo

func (m *PodSandboxConfig) GetMetadata() *PodSandboxMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *PodSandboxConfig) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *PodSandboxConfig) GetLogDirectory() string {
	if m != nil {
		return m.LogDirectory
	}
	return ""
}

func (m *PodSandboxConfig) GetDnsConfig() *DNSConfig {
	if m != nil {
		return m.DnsConfig
	}
	return nil
}

func (m *PodSandboxConfig) GetPortMappings() []*PortMapping {
	if m != nil {
		return m.PortMappings
	}
	return nil
}

func (m *PodSandboxConfig) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *PodSandboxConfig) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *PodSandboxConfig) GetLinux() *LinuxPodSandboxConfig {
	if m != nil {
		return m.Linux
	}
	return nil
}

type RunPodSandboxRequest struct {
	// Configuration for creating a PodSandbox.
	Config *PodSandboxConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Named runtime configuration to use for this PodSandbox.
	// If the runtime handler is unknown, this request should be rejected.  An
	// empty string should select the default handler, equivalent to the
	// behavior before this feature was added.
	// See https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
	RuntimeHandler       string   `protobuf:"bytes,2,opt,name=runtime_handler,json=runtimeHandler,proto3" json:"runtime_handler,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunPodSandboxRequest) Reset()         { *m = RunPodSandboxRequest{} }
func (m *RunPodSandboxRequest) String() string { return proto.CompactTextString(m) }
func (*RunPodSandboxRequest) ProtoMessage()    {}
func (*RunPodSandboxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{11}
}
func (m *RunPodSandboxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunPodSandboxRequest.Unmarshal(m, b)
}
func (m *RunPodSandboxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunPodSandboxRequest.Marshal(b, m, deterministic)
}
func (dst *RunPodSandboxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunPodSandboxRequest.Merge(dst, src)
}
func (m *RunPodSandboxRequest) XXX_Size() int {
	return xxx_messageInfo_RunPodSandboxRequest.Size(m)
}
func (m *RunPodSandboxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunPodSandboxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunPodSandboxRequest proto.InternalMessageInfo

func (m *RunPodSandboxRequest) GetConfig() *PodSandboxConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *RunPodSandboxRequest) GetRuntimeHandler() string {
	if m != nil {
		return m.RuntimeHandler
	}
	return ""
}

type RunPodSandboxResponse struct {
	// ID of the PodSandbox to run.
	PodSandboxId         string   `protobuf:"bytes,1,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunPodSandboxResponse) Reset()         { *m = RunPodSandboxResponse{} }
func (m *RunPodSandboxResponse) String() string { return proto.CompactTextString(m) }
func (*RunPodSandboxResponse) ProtoMessage()    {}
func (*RunPodSandboxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{12}
}
func (m *RunPodSandboxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunPodSandboxResponse.Unmarshal(m, b)
}
func (m *RunPodSandboxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunPodSandboxResponse.Marshal(b, m, deterministic)
}
func (dst *RunPodSandboxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunPodSandboxResponse.Merge(dst, src)
}
func (m *RunPodSandboxResponse) XXX_Size() int {
	return xxx_messageInfo_RunPodSandboxResponse.Size(m)
}
func (m *RunPodSandboxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunPodSandboxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunPodSandboxResponse proto.InternalMessageInfo

func (m *RunPodSandboxResponse) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

type StopPodSandboxRequest struct {
	// ID of the PodSandbox to stop.
	PodSandboxId         string   `protobuf:"bytes,1,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopPodSandboxRequest) Reset()         { *m = StopPodSandboxRequest{} }
func (m *StopPodSandboxRequest) String() string { return proto.CompactTextString(m) }
func (*StopPodSandboxRequest) ProtoMessage()    {}
func (*StopPodSandboxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{13}
}
func (m *StopPodSandboxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopPodSandboxRequest.Unmarshal(m, b)
}
func (m *StopPodSandboxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopPodSandboxRequest.Marshal(b, m, deterministic)
}
func (dst *StopPodSandboxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopPodSandboxRequest.Merge(dst, src)
}
func (m *StopPodSandboxRequest) XXX_Size() int {
	return xxx_messageInfo_StopPodSandboxRequest.Size(m)
}
func (m *StopPodSandboxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopPodSandboxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopPodSandboxRequest proto.InternalMessageInfo

func (m *StopPodSandboxRequest) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

type StopPodSandboxResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopPodSandboxResponse) Reset()         { *m = StopPodSandboxResponse{} }
func (m *StopPodSandboxResponse) String() string { return proto.CompactTextString(m) }
func (*StopPodSandboxResponse) ProtoMessage()    {}
func (*StopPodSandboxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{14}
}
func (m *StopPodSandboxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopPodSandboxResponse.Unmarshal(m, b)
}
func (m *StopPodSandboxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopPodSandboxResponse.Marshal(b, m, deterministic)
}
func (dst *StopPodSandboxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopPodSandboxResponse.Merge(dst, src)
}
func (m *StopPodSandboxResponse) XXX_Size() int {
	return xxx_messageInfo_StopPodSandboxResponse.Size(m)
}
func (m *StopPodSandboxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopPodSandboxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopPodSandboxResponse proto.InternalMessageInfo

type RemovePodSandboxRequest struct {
	// ID of the PodSandbox to remove.
	PodSandboxId         string   `protobuf:"bytes,1,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePodSandboxRequest) Reset()         { *m = RemovePodSandboxRequest{} }
func (m *RemovePodSandboxRequest) String() string { return proto.CompactTextString(m) }
func (*RemovePodSandboxRequest) ProtoMessage()    {}
func (*RemovePodSandboxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{15}
}
func (m *RemovePodSandboxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePodSandboxRequest.Unmarshal(m, b)
}
func (m *RemovePodSandboxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePodSandboxRequest.Marshal(b, m, deterministic)
}
func (dst *RemovePodSandboxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePodSandboxRequest.Merge(dst, src)
}
func (m *RemovePodSandboxRequest) XXX_Size() int {
	return xxx_messageInfo_RemovePodSandboxRequest.Size(m)
}
func (m *RemovePodSandboxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePodSandboxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePodSandboxRequest proto.InternalMessageInfo

func (m *RemovePodSandboxRequest) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

type RemovePodSandboxResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePodSandboxResponse) Reset()         { *m = RemovePodSandboxResponse{} }
func (m *RemovePodSandboxResponse) String() string { return proto.CompactTextString(m) }
func (*RemovePodSandboxResponse) ProtoMessage()    {}
func (*RemovePodSandboxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{16}
}
func (m *RemovePodSandboxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePodSandboxResponse.Unmarshal(m, b)
}
func (m *RemovePodSandboxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePodSandboxResponse.Marshal(b, m, deterministic)
}
func (dst *RemovePodSandboxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePodSandboxResponse.Merge(dst, src)
}
func (m *RemovePodSandboxResponse) XXX_Size() int {
	return xxx_messageInfo_RemovePodSandboxResponse.Size(m)
}
func (m *RemovePodSandboxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePodSandboxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePodSandboxResponse proto.InternalMessageInfo

type PodSandboxStatusRequest struct {
	// ID of the PodSandbox for which to retrieve status.
	PodSandboxId string `protobuf:"bytes,1,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	// Verbose indicates whether to return extra information about the pod sandbox.
	Verbose              bool     `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodSandboxStatusRequest) Reset()         { *m = PodSandboxStatusRequest{} }
func (m *PodSandboxStatusRequest) String() string { return proto.CompactTextString(m) }
func (*PodSandboxStatusRequest) ProtoMessage()    {}
func (*PodSandboxStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{17}
}
func (m *PodSandboxStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxStatusRequest.Unmarshal(m, b)
}
func (m *PodSandboxStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxStatusRequest.Marshal(b, m, deterministic)
}
func (dst *PodSandboxStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxStatusRequest.Merge(dst, src)
}
func (m *PodSandboxStatusRequest) XXX_Size() int {
	return xxx_messageInfo_PodSandboxStatusRequest.Size(m)
}
func (m *PodSandboxStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxStatusRequest proto.InternalMessageInfo

func (m *PodSandboxStatusRequest) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

func (m *PodSandboxStatusRequest) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

// PodIP represents an ip of a Pod
type PodIP struct {
	// an ip is a string representation of an IPv4 or an IPv6
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodIP) Reset()         { *m = PodIP{} }
func (m *PodIP) String() string { return proto.CompactTextString(m) }
func (*PodIP) ProtoMessage()    {}
func (*PodIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{18}
}
func (m *PodIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodIP.Unmarshal(m, b)
}
func (m *PodIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodIP.Marshal(b, m, deterministic)
}
func (dst *PodIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodIP.Merge(dst, src)
}
func (m *PodIP) XXX_Size() int {
	return xxx_messageInfo_PodIP.Size(m)
}
func (m *PodIP) XXX_DiscardUnknown() {
	xxx_messageInfo_PodIP.DiscardUnknown(m)
}

var xxx_messageInfo_PodIP proto.InternalMessageInfo

func (m *PodIP) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// PodSandboxNetworkStatus is the status of the network for a PodSandbox.
type PodSandboxNetworkStatus struct {
	// IP address of the PodSandbox.
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	// list of additional ips (not inclusive of PodSandboxNetworkStatus.Ip) of the PodSandBoxNetworkStatus
	AdditionalIps        []*PodIP `protobuf:"bytes,2,rep,name=additional_ips,json=additionalIps,proto3" json:"additional_ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodSandboxNetworkStatus) Reset()         { *m = PodSandboxNetworkStatus{} }
func (m *PodSandboxNetworkStatus) String() string { return proto.CompactTextString(m) }
func (*PodSandboxNetworkStatus) ProtoMessage()    {}
func (*PodSandboxNetworkStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{19}
}
func (m *PodSandboxNetworkStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxNetworkStatus.Unmarshal(m, b)
}
func (m *PodSandboxNetworkStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxNetworkStatus.Marshal(b, m, deterministic)
}
func (dst *PodSandboxNetworkStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxNetworkStatus.Merge(dst, src)
}
func (m *PodSandboxNetworkStatus) XXX_Size() int {
	return xxx_messageInfo_PodSandboxNetworkStatus.Size(m)
}
func (m *PodSandboxNetworkStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxNetworkStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxNetworkStatus proto.InternalMessageInfo

func (m *PodSandboxNetworkStatus) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PodSandboxNetworkStatus) GetAdditionalIps() []*PodIP {
	if m != nil {
		return m.AdditionalIps
	}
	return nil
}

// Namespace contains paths to the namespaces.
type Namespace struct {
	// Namespace options for Linux namespaces.
	Options              *NamespaceOption `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{20}
}
func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (dst *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(dst, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetOptions() *NamespaceOption {
	if m != nil {
		return m.Options
	}
	return nil
}

// LinuxSandboxStatus contains status specific to Linux sandboxes.
type LinuxPodSandboxStatus struct {
	// Paths to the sandbox's namespaces.
	Namespaces           *Namespace `protobuf:"bytes,1,opt,name=namespaces,proto3" json:"namespaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LinuxPodSandboxStatus) Reset()         { *m = LinuxPodSandboxStatus{} }
func (m *LinuxPodSandboxStatus) String() string { return proto.CompactTextString(m) }
func (*LinuxPodSandboxStatus) ProtoMessage()    {}
func (*LinuxPodSandboxStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{21}
}
func (m *LinuxPodSandboxStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxPodSandboxStatus.Unmarshal(m, b)
}
func (m *LinuxPodSandboxStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxPodSandboxStatus.Marshal(b, m, deterministic)
}
func (dst *LinuxPodSandboxStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxPodSandboxStatus.Merge(dst, src)
}
func (m *LinuxPodSandboxStatus) XXX_Size() int {
	return xxx_messageInfo_LinuxPodSandboxStatus.Size(m)
}
func (m *LinuxPodSandboxStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxPodSandboxStatus.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxPodSandboxStatus proto.InternalMessageInfo

func (m *LinuxPodSandboxStatus) GetNamespaces() *Namespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

// PodSandboxStatus contains the status of the PodSandbox.
type PodSandboxStatus struct {
	// ID of the sandbox.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata of the sandbox.
	Metadata *PodSandboxMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// State of the sandbox.
	State PodSandboxState `protobuf:"varint,3,opt,name=state,proto3,enum=runtime.v1alpha2.PodSandboxState" json:"state,omitempty"`
	// Creation timestamp of the sandbox in nanoseconds. Must be > 0.
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Network contains network status if network is handled by the runtime.
	Network *PodSandboxNetworkStatus `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	// Linux-specific status to a pod sandbox.
	Linux *LinuxPodSandboxStatus `protobuf:"bytes,6,opt,name=linux,proto3" json:"linux,omitempty"`
	// Labels are key-value pairs that may be used to scope and select individual resources.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Unstructured key-value map holding arbitrary metadata.
	// Annotations MUST NOT be altered by the runtime; the value of this field
	// MUST be identical to that of the corresponding PodSandboxConfig used to
	// instantiate the pod sandbox this status represents.
	Annotations map[string]string `protobuf:"bytes,8,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// runtime configuration used for this PodSandbox.
	RuntimeHandler       string   `protobuf:"bytes,9,opt,name=runtime_handler,json=runtimeHandler,proto3" json:"runtime_handler,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodSandboxStatus) Reset()         { *m = PodSandboxStatus{} }
func (m *PodSandboxStatus) String() string { return proto.CompactTextString(m) }
func (*PodSandboxStatus) ProtoMessage()    {}
func (*PodSandboxStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{22}
}
func (m *PodSandboxStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxStatus.Unmarshal(m, b)
}
func (m *PodSandboxStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxStatus.Marshal(b, m, deterministic)
}
func (dst *PodSandboxStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxStatus.Merge(dst, src)
}
func (m *PodSandboxStatus) XXX_Size() int {
	return xxx_messageInfo_PodSandboxStatus.Size(m)
}
func (m *PodSandboxStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxStatus proto.InternalMessageInfo

func (m *PodSandboxStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PodSandboxStatus) GetMetadata() *PodSandboxMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *PodSandboxStatus) GetState() PodSandboxState {
	if m != nil {
		return m.State
	}
	return PodSandboxState_SANDBOX_READY
}

func (m *PodSandboxStatus) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *PodSandboxStatus) GetNetwork() *PodSandboxNetworkStatus {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *PodSandboxStatus) GetLinux() *LinuxPodSandboxStatus {
	if m != nil {
		return m.Linux
	}
	return nil
}

func (m *PodSandboxStatus) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *PodSandboxStatus) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *PodSandboxStatus) GetRuntimeHandler() string {
	if m != nil {
		return m.RuntimeHandler
	}
	return ""
}

type PodSandboxStatusResponse struct {
	// Status of the PodSandbox.
	Status *PodSandboxStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Info is extra information of the PodSandbox. The key could be arbitrary string, and
	// value should be in json format. The information could include anything useful for
	// debug, e.g. network namespace for linux container based container runtime.
	// It should only be returned non-empty when Verbose is true.
	Info                 map[string]string `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PodSandboxStatusResponse) Reset()         { *m = PodSandboxStatusResponse{} }
func (m *PodSandboxStatusResponse) String() string { return proto.CompactTextString(m) }
func (*PodSandboxStatusResponse) ProtoMessage()    {}
func (*PodSandboxStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{23}
}
func (m *PodSandboxStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxStatusResponse.Unmarshal(m, b)
}
func (m *PodSandboxStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxStatusResponse.Marshal(b, m, deterministic)
}
func (dst *PodSandboxStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxStatusResponse.Merge(dst, src)
}
func (m *PodSandboxStatusResponse) XXX_Size() int {
	return xxx_messageInfo_PodSandboxStatusResponse.Size(m)
}
func (m *PodSandboxStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxStatusResponse proto.InternalMessageInfo

func (m *PodSandboxStatusResponse) GetStatus() *PodSandboxStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PodSandboxStatusResponse) GetInfo() map[string]string {
	if m != nil {
		return m.Info
	}
	return nil
}

// PodSandboxStateValue is the wrapper of PodSandboxState.
type PodSandboxStateValue struct {
	// State of the sandbox.
	State                PodSandboxState `protobuf:"varint,1,opt,name=state,proto3,enum=runtime.v1alpha2.PodSandboxState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PodSandboxStateValue) Reset()         { *m = PodSandboxStateValue{} }
func (m *PodSandboxStateValue) String() string { return proto.CompactTextString(m) }
func (*PodSandboxStateValue) ProtoMessage()    {}
func (*PodSandboxStateValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{24}
}
func (m *PodSandboxStateValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxStateValue.Unmarshal(m, b)
}
func (m *PodSandboxStateValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxStateValue.Marshal(b, m, deterministic)
}
func (dst *PodSandboxStateValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxStateValue.Merge(dst, src)
}
func (m *PodSandboxStateValue) XXX_Size() int {
	return xxx_messageInfo_PodSandboxStateValue.Size(m)
}
func (m *PodSandboxStateValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxStateValue.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxStateValue proto.InternalMessageInfo

func (m *PodSandboxStateValue) GetState() PodSandboxState {
	if m != nil {
		return m.State
	}
	return PodSandboxState_SANDBOX_READY
}

// PodSandboxFilter is used to filter a list of PodSandboxes.
// All those fields are combined with 'AND'
type PodSandboxFilter struct {
	// ID of the sandbox.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// State of the sandbox.
	State *PodSandboxStateValue `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// LabelSelector to select matches.
	// Only api.MatchLabels is supported for now and the requirements
	// are ANDed. MatchExpressions is not supported yet.
	LabelSelector        map[string]string `protobuf:"bytes,3,rep,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PodSandboxFilter) Reset()         { *m = PodSandboxFilter{} }
func (m *PodSandboxFilter) String() string { return proto.CompactTextString(m) }
func (*PodSandboxFilter) ProtoMessage()    {}
func (*PodSandboxFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{25}
}
func (m *PodSandboxFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandboxFilter.Unmarshal(m, b)
}
func (m *PodSandboxFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandboxFilter.Marshal(b, m, deterministic)
}
func (dst *PodSandboxFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandboxFilter.Merge(dst, src)
}
func (m *PodSandboxFilter) XXX_Size() int {
	return xxx_messageInfo_PodSandboxFilter.Size(m)
}
func (m *PodSandboxFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandboxFilter.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandboxFilter proto.InternalMessageInfo

func (m *PodSandboxFilter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PodSandboxFilter) GetState() *PodSandboxStateValue {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *PodSandboxFilter) GetLabelSelector() map[string]string {
	if m != nil {
		return m.LabelSelector
	}
	return nil
}

type ListPodSandboxRequest struct {
	// PodSandboxFilter to filter a list of PodSandboxes.
	Filter               *PodSandboxFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListPodSandboxRequest) Reset()         { *m = ListPodSandboxRequest{} }
func (m *ListPodSandboxRequest) String() string { return proto.CompactTextString(m) }
func (*ListPodSandboxRequest) ProtoMessage()    {}
func (*ListPodSandboxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{26}
}
func (m *ListPodSandboxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPodSandboxRequest.Unmarshal(m, b)
}
func (m *ListPodSandboxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPodSandboxRequest.Marshal(b, m, deterministic)
}
func (dst *ListPodSandboxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPodSandboxRequest.Merge(dst, src)
}
func (m *ListPodSandboxRequest) XXX_Size() int {
	return xxx_messageInfo_ListPodSandboxRequest.Size(m)
}
func (m *ListPodSandboxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPodSandboxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPodSandboxRequest proto.InternalMessageInfo

func (m *ListPodSandboxRequest) GetFilter() *PodSandboxFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// PodSandbox contains minimal information about a sandbox.
type PodSandbox struct {
	// ID of the PodSandbox.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata of the PodSandbox.
	Metadata *PodSandboxMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// State of the PodSandbox.
	State PodSandboxState `protobuf:"varint,3,opt,name=state,proto3,enum=runtime.v1alpha2.PodSandboxState" json:"state,omitempty"`
	// Creation timestamps of the PodSandbox in nanoseconds. Must be > 0.
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Labels of the PodSandbox.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Unstructured key-value map holding arbitrary metadata.
	// Annotations MUST NOT be altered by the runtime; the value of this field
	// MUST be identical to that of the corresponding PodSandboxConfig used to
	// instantiate this PodSandbox.
	Annotations map[string]string `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// runtime configuration used for this PodSandbox.
	RuntimeHandler       string   `protobuf:"bytes,7,opt,name=runtime_handler,json=runtimeHandler,proto3" json:"runtime_handler,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodSandbox) Reset()         { *m = PodSandbox{} }
func (m *PodSandbox) String() string { return proto.CompactTextString(m) }
func (*PodSandbox) ProtoMessage()    {}
func (*PodSandbox) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{27}
}
func (m *PodSandbox) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSandbox.Unmarshal(m, b)
}
func (m *PodSandbox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSandbox.Marshal(b, m, deterministic)
}
func (dst *PodSandbox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSandbox.Merge(dst, src)
}
func (m *PodSandbox) XXX_Size() int {
	return xxx_messageInfo_PodSandbox.Size(m)
}
func (m *PodSandbox) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSandbox.DiscardUnknown(m)
}

var xxx_messageInfo_PodSandbox proto.InternalMessageInfo

func (m *PodSandbox) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PodSandbox) GetMetadata() *PodSandboxMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *PodSandbox) GetState() PodSandboxState {
	if m != nil {
		return m.State
	}
	return PodSandboxState_SANDBOX_READY
}

func (m *PodSandbox) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *PodSandbox) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *PodSandbox) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *PodSandbox) GetRuntimeHandler() string {
	if m != nil {
		return m.RuntimeHandler
	}
	return ""
}

type ListPodSandboxResponse struct {
	// List of PodSandboxes.
	Items                []*PodSandbox `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListPodSandboxResponse) Reset()         { *m = ListPodSandboxResponse{} }
func (m *ListPodSandboxResponse) String() string { return proto.CompactTextString(m) }
func (*ListPodSandboxResponse) ProtoMessage()    {}
func (*ListPodSandboxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{28}
}
func (m *ListPodSandboxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPodSandboxResponse.Unmarshal(m, b)
}
func (m *ListPodSandboxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPodSandboxResponse.Marshal(b, m, deterministic)
}
func (dst *ListPodSandboxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPodSandboxResponse.Merge(dst, src)
}
func (m *ListPodSandboxResponse) XXX_Size() int {
	return xxx_messageInfo_ListPodSandboxResponse.Size(m)
}
func (m *ListPodSandboxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPodSandboxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPodSandboxResponse proto.InternalMessageInfo

func (m *ListPodSandboxResponse) GetItems() []*PodSandbox {
	if m != nil {
		return m.Items
	}
	return nil
}

// ImageSpec is an internal representation of an image.
type ImageSpec struct {
	// Container's Image field (e.g. imageID or imageDigest).
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Unstructured key-value map holding arbitrary metadata.
	// ImageSpec Annotations can be used to help the runtime target specific
	// images in multi-arch images.
	Annotations          map[string]string `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ImageSpec) Reset()         { *m = ImageSpec{} }
func (m *ImageSpec) String() string { return proto.CompactTextString(m) }
func (*ImageSpec) ProtoMessage()    {}
func (*ImageSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{29}
}
func (m *ImageSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageSpec.Unmarshal(m, b)
}
func (m *ImageSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageSpec.Marshal(b, m, deterministic)
}
func (dst *ImageSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageSpec.Merge(dst, src)
}
func (m *ImageSpec) XXX_Size() int {
	return xxx_messageInfo_ImageSpec.Size(m)
}
func (m *ImageSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ImageSpec proto.InternalMessageInfo

func (m *ImageSpec) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ImageSpec) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{30}
}
func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (dst *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(dst, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// LinuxContainerResources specifies Linux specific configuration for
// resources.
// TODO: Consider using Resources from opencontainers/runtime-spec/specs-go
// directly.
type LinuxContainerResources struct {
	// CPU CFS (Completely Fair Scheduler) period. Default: 0 (not specified).
	CpuPeriod int64 `protobuf:"varint,1,opt,name=cpu_period,json=cpuPeriod,proto3" json:"cpu_period,omitempty"`
	// CPU CFS (Completely Fair Scheduler) quota. Default: 0 (not specified).
	CpuQuota int64 `protobuf:"varint,2,opt,name=cpu_quota,json=cpuQuota,proto3" json:"cpu_quota,omitempty"`
	// CPU shares (relative weight vs. other containers). Default: 0 (not specified).
	CpuShares int64 `protobuf:"varint,3,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	// Memory limit in bytes. Default: 0 (not specified).
	MemoryLimitInBytes int64 `protobuf:"varint,4,opt,name=memory_limit_in_bytes,json=memoryLimitInBytes,proto3" json:"memory_limit_in_bytes,omitempty"`
	// OOMScoreAdj adjusts the oom-killer score. Default: 0 (not specified).
	OomScoreAdj int64 `protobuf:"varint,5,opt,name=oom_score_adj,json=oomScoreAdj,proto3" json:"oom_score_adj,omitempty"`
	// CpusetCpus constrains the allowed set of logical CPUs. Default: "" (not specified).
	CpusetCpus string `protobuf:"bytes,6,opt,name=cpuset_cpus,json=cpusetCpus,proto3" json:"cpuset_cpus,omitempty"`
	// CpusetMems constrains the allowed set of memory nodes. Default: "" (not specified).
	CpusetMems string `protobuf:"bytes,7,opt,name=cpuset_mems,json=cpusetMems,proto3" json:"cpuset_mems,omitempty"`
	// List of HugepageLimits to limit the HugeTLB usage of container per page size. Default: nil (not specified).
	HugepageLimits       []*HugepageLimit `protobuf:"bytes,8,rep,name=hugepage_limits,json=hugepageLimits,proto3" json:"hugepage_limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LinuxContainerResources) Reset()         { *m = LinuxContainerResources{} }
func (m *LinuxContainerResources) String() string { return proto.CompactTextString(m) }
func (*LinuxContainerResources) ProtoMessage()    {}
func (*LinuxContainerResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{31}
}
func (m *LinuxContainerResources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxContainerResources.Unmarshal(m, b)
}
func (m *LinuxContainerResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxContainerResources.Marshal(b, m, deterministic)
}
func (dst *LinuxContainerResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxContainerResources.Merge(dst, src)
}
func (m *LinuxContainerResources) XXX_Size() int {
	return xxx_messageInfo_LinuxContainerResources.Size(m)
}
func (m *LinuxContainerResources) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxContainerResources.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxContainerResources proto.InternalMessageInfo

func (m *LinuxContainerResources) GetCpuPeriod() int64 {
	if m != nil {
		return m.CpuPeriod
	}
	return 0
}

func (m *LinuxContainerResources) GetCpuQuota() int64 {
	if m != nil {
		return m.CpuQuota
	}
	return 0
}

func (m *LinuxContainerResources) GetCpuShares() int64 {
	if m != nil {
		return m.CpuShares
	}
	return 0
}

func (m *LinuxContainerResources) GetMemoryLimitInBytes() int64 {
	if m != nil {
		return m.MemoryLimitInBytes
	}
	return 0
}

func (m *LinuxContainerResources) GetOomScoreAdj() int64 {
	if m != nil {
		return m.OomScoreAdj
	}
	return 0
}

func (m *LinuxContainerResources) GetCpusetCpus() string {
	if m != nil {
		return m.CpusetCpus
	}
	return ""
}

func (m *LinuxContainerResources) GetCpusetMems() string {
	if m != nil {
		return m.CpusetMems
	}
	return ""
}

func (m *LinuxContainerResources) GetHugepageLimits() []*HugepageLimit {
	if m != nil {
		return m.HugepageLimits
	}
	return nil
}

// HugepageLimit corresponds to the file`hugetlb.<hugepagesize>.limit_in_byte` in container level cgroup.
// For example, `PageSize=1GB`, `Limit=1073741824` means setting `1073741824` bytes to hugetlb.1GB.limit_in_bytes.
type HugepageLimit struct {
	// The value of PageSize has the format <size><unit-prefix>B (2MB, 1GB),
	// and must match the <hugepagesize> of the corresponding control file found in `hugetlb.<hugepagesize>.limit_in_bytes`.
	// The values of <unit-prefix> are intended to be parsed using base 1024("1KB" = 1024, "1MB" = 1048576, etc).
	PageSize string `protobuf:"bytes,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// limit in bytes of hugepagesize HugeTLB usage.
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HugepageLimit) Reset()         { *m = HugepageLimit{} }
func (m *HugepageLimit) String() string { return proto.CompactTextString(m) }
func (*HugepageLimit) ProtoMessage()    {}
func (*HugepageLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{32}
}
func (m *HugepageLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HugepageLimit.Unmarshal(m, b)
}
func (m *HugepageLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HugepageLimit.Marshal(b, m, deterministic)
}
func (dst *HugepageLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HugepageLimit.Merge(dst, src)
}
func (m *HugepageLimit) XXX_Size() int {
	return xxx_messageInfo_HugepageLimit.Size(m)
}
func (m *HugepageLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_HugepageLimit.DiscardUnknown(m)
}

var xxx_messageInfo_HugepageLimit proto.InternalMessageInfo

func (m *HugepageLimit) GetPageSize() string {
	if m != nil {
		return m.PageSize
	}
	return ""
}

func (m *HugepageLimit) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// SELinuxOption are the labels to be applied to the container.
type SELinuxOption struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Role                 string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Level                string   `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SELinuxOption) Reset()         { *m = SELinuxOption{} }
func (m *SELinuxOption) String() string { return proto.CompactTextString(m) }
func (*SELinuxOption) ProtoMessage()    {}
func (*SELinuxOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{33}
}
func (m *SELinuxOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SELinuxOption.Unmarshal(m, b)
}
func (m *SELinuxOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SELinuxOption.Marshal(b, m, deterministic)
}
func (dst *SELinuxOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SELinuxOption.Merge(dst, src)
}
func (m *SELinuxOption) XXX_Size() int {
	return xxx_messageInfo_SELinuxOption.Size(m)
}
func (m *SELinuxOption) XXX_DiscardUnknown() {
	xxx_messageInfo_SELinuxOption.DiscardUnknown(m)
}

var xxx_messageInfo_SELinuxOption proto.InternalMessageInfo

func (m *SELinuxOption) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SELinuxOption) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *SELinuxOption) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SELinuxOption) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

// Capability contains the container capabilities to add or drop
type Capability struct {
	// List of capabilities to add.
	AddCapabilities []string `protobuf:"bytes,1,rep,name=add_capabilities,json=addCapabilities,proto3" json:"add_capabilities,omitempty"`
	// List of capabilities to drop.
	DropCapabilities     []string `protobuf:"bytes,2,rep,name=drop_capabilities,json=dropCapabilities,proto3" json:"drop_capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Capability) Reset()         { *m = Capability{} }
func (m *Capability) String() string { return proto.CompactTextString(m) }
func (*Capability) ProtoMessage()    {}
func (*Capability) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{34}
}
func (m *Capability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Capability.Unmarshal(m, b)
}
func (m *Capability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Capability.Marshal(b, m, deterministic)
}
func (dst *Capability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Capability.Merge(dst, src)
}
func (m *Capability) XXX_Size() int {
	return xxx_messageInfo_Capability.Size(m)
}
func (m *Capability) XXX_DiscardUnknown() {
	xxx_messageInfo_Capability.DiscardUnknown(m)
}

var xxx_messageInfo_Capability proto.InternalMessageInfo

func (m *Capability) GetAddCapabilities() []string {
	if m != nil {
		return m.AddCapabilities
	}
	return nil
}

func (m *Capability) GetDropCapabilities() []string {
	if m != nil {
		return m.DropCapabilities
	}
	return nil
}

// LinuxContainerSecurityContext holds linux security configuration that will be applied to a container.
type LinuxContainerSecurityContext struct {
	// Capabilities to add or drop.
	Capabilities *Capability `protobuf:"bytes,1,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	// If set, run container in privileged mode.
	// Privileged mode is incompatible with the following options. If
	// privileged is set, the following features MAY have no effect:
	// 1. capabilities
	// 2. selinux_options
	// 4. seccomp
	// 5. apparmor
	//
	// Privileged mode implies the following specific options are applied:
	// 1. All capabilities are added.
	// 2. Sensitive paths, such as kernel module paths within sysfs, are not masked.
	// 3. Any sysfs and procfs mounts are mounted RW.
	// 4. Apparmor confinement is not applied.
	// 5. Seccomp restrictions are not applied.
	// 6. The device cgroup does not restrict access to any devices.
	// 7. All devices from the host's /dev are available within the container.
	// 8. SELinux restrictions are not applied (e.g. label=disabled).
	Privileged bool `protobuf:"varint,2,opt,name=privileged,proto3" json:"privileged,omitempty"`
	// Configurations for the container's namespaces.
	// Only used if the container uses namespace for isolation.
	NamespaceOptions *NamespaceOption `protobuf:"bytes,3,opt,name=namespace_options,json=namespaceOptions,proto3" json:"namespace_options,omitempty"`
	// SELinux context to be optionally applied.
	SelinuxOptions *SELinuxOption `protobuf:"bytes,4,opt,name=selinux_options,json=selinuxOptions,proto3" json:"selinux_options,omitempty"`
	// UID to run the container process as. Only one of run_as_user and
	// run_as_username can be specified at a time.
	RunAsUser *Int64Value `protobuf:"bytes,5,opt,name=run_as_user,json=runAsUser,proto3" json:"run_as_user,omitempty"`
	// GID to run the container process as. run_as_group should only be specified
	// when run_as_user or run_as_username is specified; otherwise, the runtime
	// MUST error.
	RunAsGroup *Int64Value `protobuf:"bytes,12,opt,name=run_as_group,json=runAsGroup,proto3" json:"run_as_group,omitempty"`
	// User name to run the container process as. If specified, the user MUST
	// exist in the container image (i.e. in the /etc/passwd inside the image),
	// and be resolved there by the runtime; otherwise, the runtime MUST error.
	RunAsUsername string `protobuf:"bytes,6,opt,name=run_as_username,json=runAsUsername,proto3" json:"run_as_username,omitempty"`
	// If set, the root filesystem of the container is read-only.
	ReadonlyRootfs bool `protobuf:"varint,7,opt,name=readonly_rootfs,json=readonlyRootfs,proto3" json:"readonly_rootfs,omitempty"`
	// List of groups applied to the first process run in the container, in
	// addition to the container's primary GID.
	SupplementalGroups []int64 `protobuf:"varint,8,rep,packed,name=supplemental_groups,json=supplementalGroups,proto3" json:"supplemental_groups,omitempty"`
	// AppArmor profile for the container, candidate values are:
	// * runtime/default: equivalent to not specifying a profile.
	// * unconfined: no profiles are loaded
	// * localhost/<profile_name>: profile loaded on the node
	//    (localhost) by name. The possible profile names are detailed at
	//    http://wiki.apparmor.net/index.php/AppArmor_Core_Policy_Reference
	ApparmorProfile string `protobuf:"bytes,9,opt,name=apparmor_profile,json=apparmorProfile,proto3" json:"apparmor_profile,omitempty"`
	// Seccomp profile for the container, candidate values are:
	// * runtime/default: the default profile for the container runtime
	// * unconfined: unconfined profile, ie, no seccomp sandboxing
	// * localhost/<full-path-to-profile>: the profile installed on the node.
	//   <full-path-to-profile> is the full path of the profile.
	// Default: "", which is identical with unconfined.
	SeccompProfilePath string `protobuf:"bytes,10,opt,name=seccomp_profile_path,json=seccompProfilePath,proto3" json:"seccomp_profile_path,omitempty"`
	// no_new_privs defines if the flag for no_new_privs should be set on the
	// container.
	NoNewPrivs bool `protobuf:"varint,11,opt,name=no_new_privs,json=noNewPrivs,proto3" json:"no_new_privs,omitempty"`
	// masked_paths is a slice of paths that should be masked by the container
	// runtime, this can be passed directly to the OCI spec.
	MaskedPaths []string `protobuf:"bytes,13,rep,name=masked_paths,json=maskedPaths,proto3" json:"masked_paths,omitempty"`
	// readonly_paths is a slice of paths that should be set as readonly by the
	// container runtime, this can be passed directly to the OCI spec.
	ReadonlyPaths        []string `protobuf:"bytes,14,rep,name=readonly_paths,json=readonlyPaths,proto3" json:"readonly_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinuxContainerSecurityContext) Reset()         { *m = LinuxContainerSecurityContext{} }
func (m *LinuxContainerSecurityContext) String() string { return proto.CompactTextString(m) }
func (*LinuxContainerSecurityContext) ProtoMessage()    {}
func (*LinuxContainerSecurityContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{35}
}
func (m *LinuxContainerSecurityContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxContainerSecurityContext.Unmarshal(m, b)
}
func (m *LinuxContainerSecurityContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxContainerSecurityContext.Marshal(b, m, deterministic)
}
func (dst *LinuxContainerSecurityContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxContainerSecurityContext.Merge(dst, src)
}
func (m *LinuxContainerSecurityContext) XXX_Size() int {
	return xxx_messageInfo_LinuxContainerSecurityContext.Size(m)
}
func (m *LinuxContainerSecurityContext) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxContainerSecurityContext.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxContainerSecurityContext proto.InternalMessageInfo

func (m *LinuxContainerSecurityContext) GetCapabilities() *Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *LinuxContainerSecurityContext) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *LinuxContainerSecurityContext) GetNamespaceOptions() *NamespaceOption {
	if m != nil {
		return m.NamespaceOptions
	}
	return nil
}

func (m *LinuxContainerSecurityContext) GetSelinuxOptions() *SELinuxOption {
	if m != nil {
		return m.SelinuxOptions
	}
	return nil
}

func (m *LinuxContainerSecurityContext) GetRunAsUser() *Int64Value {
	if m != nil {
		return m.RunAsUser
	}
	return nil
}

func (m *LinuxContainerSecurityContext) GetRunAsGroup() *Int64Value {
	if m != nil {
		return m.RunAsGroup
	}
	return nil
}

func (m *LinuxContainerSecurityContext) GetRunAsUsername() string {
	if m != nil {
		return m.RunAsUsername
	}
	return ""
}

func (m *LinuxContainerSecurityContext) GetReadonlyRootfs() bool {
	if m != nil {
		return m.ReadonlyRootfs
	}
	return false
}

func (m *LinuxContainerSecurityContext) GetSupplementalGroups() []int64 {
	if m != nil {
		return m.SupplementalGroups
	}
	return nil
}

func (m *LinuxContainerSecurityContext) GetApparmorProfile() string {
	if m != nil {
		return m.ApparmorProfile
	}
	return ""
}

func (m *LinuxContainerSecurityContext) GetSeccompProfilePath() string {
	if m != nil {
		return m.SeccompProfilePath
	}
	return ""
}

func (m *LinuxContainerSecurityContext) GetNoNewPrivs() bool {
	if m != nil {
		return m.NoNewPrivs
	}
	return false
}

func (m *LinuxContainerSecurityContext) GetMaskedPaths() []string {
	if m != nil {
		return m.MaskedPaths
	}
	return nil
}

func (m *LinuxContainerSecurityContext) GetReadonlyPaths() []string {
	if m != nil {
		return m.ReadonlyPaths
	}
	return nil
}

// LinuxContainerConfig contains platform-specific configuration for
// Linux-based containers.
type LinuxContainerConfig struct {
	// Resources specification for the container.
	Resources *LinuxContainerResources `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	// LinuxContainerSecurityContext configuration for the container.
	SecurityContext      *LinuxContainerSecurityContext `protobuf:"bytes,2,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *LinuxContainerConfig) Reset()         { *m = LinuxContainerConfig{} }
func (m *LinuxContainerConfig) String() string { return proto.CompactTextString(m) }
func (*LinuxContainerConfig) ProtoMessage()    {}
func (*LinuxContainerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{36}
}
func (m *LinuxContainerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxContainerConfig.Unmarshal(m, b)
}
func (m *LinuxContainerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxContainerConfig.Marshal(b, m, deterministic)
}
func (dst *LinuxContainerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxContainerConfig.Merge(dst, src)
}
func (m *LinuxContainerConfig) XXX_Size() int {
	return xxx_messageInfo_LinuxContainerConfig.Size(m)
}
func (m *LinuxContainerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxContainerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxContainerConfig proto.InternalMessageInfo

func (m *LinuxContainerConfig) GetResources() *LinuxContainerResources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *LinuxContainerConfig) GetSecurityContext() *LinuxContainerSecurityContext {
	if m != nil {
		return m.SecurityContext
	}
	return nil
}

// WindowsContainerSecurityContext holds windows security configuration that will be applied to a container.
type WindowsContainerSecurityContext struct {
	// User name to run the container process as. If specified, the user MUST
	// exist in the container image and be resolved there by the runtime;
	// otherwise, the runtime MUST return error.
	RunAsUsername string `protobuf:"bytes,1,opt,name=run_as_username,json=runAsUsername,proto3" json:"run_as_username,omitempty"`
	// The contents of the GMSA credential spec to use to run this container.
	CredentialSpec       string   `protobuf:"bytes,2,opt,name=credential_spec,json=credentialSpec,proto3" json:"credential_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowsContainerSecurityContext) Reset()         { *m = WindowsContainerSecurityContext{} }
func (m *WindowsContainerSecurityContext) String() string { return proto.CompactTextString(m) }
func (*WindowsContainerSecurityContext) ProtoMessage()    {}
func (*WindowsContainerSecurityContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{37}
}
func (m *WindowsContainerSecurityContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowsContainerSecurityContext.Unmarshal(m, b)
}
func (m *WindowsContainerSecurityContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowsContainerSecurityContext.Marshal(b, m, deterministic)
}
func (dst *WindowsContainerSecurityContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowsContainerSecurityContext.Merge(dst, src)
}
func (m *WindowsContainerSecurityContext) XXX_Size() int {
	return xxx_messageInfo_WindowsContainerSecurityContext.Size(m)
}
func (m *WindowsContainerSecurityContext) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowsContainerSecurityContext.DiscardUnknown(m)
}

var xxx_messageInfo_WindowsContainerSecurityContext proto.InternalMessageInfo

func (m *WindowsContainerSecurityContext) GetRunAsUsername() string {
	if m != nil {
		return m.RunAsUsername
	}
	return ""
}

func (m *WindowsContainerSecurityContext) GetCredentialSpec() string {
	if m != nil {
		return m.CredentialSpec
	}
	return ""
}

// WindowsContainerConfig contains platform-specific configuration for
// Windows-based containers.
type WindowsContainerConfig struct {
	// Resources specification for the container.
	Resources *WindowsContainerResources `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	// WindowsContainerSecurityContext configuration for the container.
	SecurityContext      *WindowsContainerSecurityContext `protobuf:"bytes,2,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *WindowsContainerConfig) Reset()         { *m = WindowsContainerConfig{} }
func (m *WindowsContainerConfig) String() string { return proto.CompactTextString(m) }
func (*WindowsContainerConfig) ProtoMessage()    {}
func (*WindowsContainerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{38}
}
func (m *WindowsContainerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowsContainerConfig.Unmarshal(m, b)
}
func (m *WindowsContainerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowsContainerConfig.Marshal(b, m, deterministic)
}
func (dst *WindowsContainerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowsContainerConfig.Merge(dst, src)
}
func (m *WindowsContainerConfig) XXX_Size() int {
	return xxx_messageInfo_WindowsContainerConfig.Size(m)
}
func (m *WindowsContainerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowsContainerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_WindowsContainerConfig proto.InternalMessageInfo

func (m *WindowsContainerConfig) GetResources() *WindowsContainerResources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *WindowsContainerConfig) GetSecurityContext() *WindowsContainerSecurityContext {
	if m != nil {
		return m.SecurityContext
	}
	return nil
}

// WindowsContainerResources specifies Windows specific configuration for
// resources.
type WindowsContainerResources struct {
	// CPU shares (relative weight vs. other containers). Default: 0 (not specified).
	CpuShares int64 `protobuf:"varint,1,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	// Number of CPUs available to the container. Default: 0 (not specified).
	CpuCount int64 `protobuf:"varint,2,opt,name=cpu_count,json=cpuCount,proto3" json:"cpu_count,omitempty"`
	// Specifies the portion of processor cycles that this container can use as a percentage times 100.
	CpuMaximum int64 `protobuf:"varint,3,opt,name=cpu_maximum,json=cpuMaximum,proto3" json:"cpu_maximum,omitempty"`
	// Memory limit in bytes. Default: 0 (not specified).
	MemoryLimitInBytes   int64    `protobuf:"varint,4,opt,name=memory_limit_in_bytes,json=memoryLimitInBytes,proto3" json:"memory_limit_in_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowsContainerResources) Reset()         { *m = WindowsContainerResources{} }
func (m *WindowsContainerResources) String() string { return proto.CompactTextString(m) }
func (*WindowsContainerResources) ProtoMessage()    {}
func (*WindowsContainerResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{39}
}
func (m *WindowsContainerResources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowsContainerResources.Unmarshal(m, b)
}
func (m *WindowsContainerResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowsContainerResources.Marshal(b, m, deterministic)
}
func (dst *WindowsContainerResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowsContainerResources.Merge(dst, src)
}
func (m *WindowsContainerResources) XXX_Size() int {
	return xxx_messageInfo_WindowsContainerResources.Size(m)
}
func (m *WindowsContainerResources) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowsContainerResources.DiscardUnknown(m)
}

var xxx_messageInfo_WindowsContainerResources proto.InternalMessageInfo

func (m *WindowsContainerResources) GetCpuShares() int64 {
	if m != nil {
		return m.CpuShares
	}
	return 0
}

func (m *WindowsContainerResources) GetCpuCount() int64 {
	if m != nil {
		return m.CpuCount
	}
	return 0
}

func (m *WindowsContainerResources) GetCpuMaximum() int64 {
	if m != nil {
		return m.CpuMaximum
	}
	return 0
}

func (m *WindowsContainerResources) GetMemoryLimitInBytes() int64 {
	if m != nil {
		return m.MemoryLimitInBytes
	}
	return 0
}

// ContainerMetadata holds all necessary information for building the container
// name. The container runtime is encouraged to expose the metadata in its user
// interface for better user experience. E.g., runtime can construct a unique
// container name based on the metadata. Note that (name, attempt) is unique
// within a sandbox for the entire lifetime of the sandbox.
type ContainerMetadata struct {
	// Name of the container. Same as the container name in the PodSpec.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Attempt number of creating the container. Default: 0.
	Attempt              uint32   `protobuf:"varint,2,opt,name=attempt,proto3" json:"attempt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerMetadata) Reset()         { *m = ContainerMetadata{} }
func (m *ContainerMetadata) String() string { return proto.CompactTextString(m) }
func (*ContainerMetadata) ProtoMessage()    {}
func (*ContainerMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{40}
}
func (m *ContainerMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMetadata.Unmarshal(m, b)
}
func (m *ContainerMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMetadata.Marshal(b, m, deterministic)
}
func (dst *ContainerMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMetadata.Merge(dst, src)
}
func (m *ContainerMetadata) XXX_Size() int {
	return xxx_messageInfo_ContainerMetadata.Size(m)
}
func (m *ContainerMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMetadata proto.InternalMessageInfo

func (m *ContainerMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerMetadata) GetAttempt() uint32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

// Device specifies a host device to mount into a container.
type Device struct {
	// Path of the device within the container.
	ContainerPath string `protobuf:"bytes,1,opt,name=container_path,json=containerPath,proto3" json:"container_path,omitempty"`
	// Path of the device on the host.
	HostPath string `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	// Cgroups permissions of the device, candidates are one or more of
	// * r - allows container to read from the specified device.
	// * w - allows container to write to the specified device.
	// * m - allows container to create device files that do not yet exist.
	Permissions          string   `protobuf:"bytes,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{41}
}
func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (dst *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(dst, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetContainerPath() string {
	if m != nil {
		return m.ContainerPath
	}
	return ""
}

func (m *Device) GetHostPath() string {
	if m != nil {
		return m.HostPath
	}
	return ""
}

func (m *Device) GetPermissions() string {
	if m != nil {
		return m.Permissions
	}
	return ""
}

// ContainerConfig holds all the required and optional fields for creating a
// container.
type ContainerConfig struct {
	// Metadata of the container. This information will uniquely identify the
	// container, and the runtime should leverage this to ensure correct
	// operation. The runtime may also use this information to improve UX, such
	// as by constructing a readable name.
	Metadata *ContainerMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Image to use.
	Image *ImageSpec `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// Command to execute (i.e., entrypoint for docker)
	Command []string `protobuf:"bytes,3,rep,name=command,proto3" json:"command,omitempty"`
	// Args for the Command (i.e., command for docker)
	Args []string `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	// Current working directory of the command.
	WorkingDir string `protobuf:"bytes,5,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	// List of environment variable to set in the container.
	Envs []*KeyValue `protobuf:"bytes,6,rep,name=envs,proto3" json:"envs,omitempty"`
	// Mounts for the container.
	Mounts []*Mount `protobuf:"bytes,7,rep,name=mounts,proto3" json:"mounts,omitempty"`
	// Devices for the container.
	Devices []*Device `protobuf:"bytes,8,rep,name=devices,proto3" json:"devices,omitempty"`
	// Key-value pairs that may be used to scope and select individual resources.
	// Label keys are of the form:
	//     label-key ::= prefixed-name | name
	//     prefixed-name ::= prefix '/' name
	//     prefix ::= DNS_SUBDOMAIN
	//     name ::= DNS_LABEL
	Labels map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Unstructured key-value map that may be used by the kubelet to store and
	// retrieve arbitrary metadata.
	//
	// Annotations MUST NOT be altered by the runtime; the annotations stored
	// here MUST be returned in the ContainerStatus associated with the container
	// this ContainerConfig creates.
	//
	// In general, in order to preserve a well-defined interface between the
	// kubelet and the container runtime, annotations SHOULD NOT influence
	// runtime behaviour.
	Annotations map[string]string `protobuf:"bytes,10,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Path relative to PodSandboxConfig.LogDirectory for container to store
	// the log (STDOUT and STDERR) on the host.
	// E.g.,
	//     PodSandboxConfig.LogDirectory = `/var/log/pods/<podUID>/`
	//     ContainerConfig.LogPath = `containerName/Instance#.log`
	//
	// WARNING: Log management and how kubelet should interface with the
	// container logs are under active discussion in
	// https://issues.k8s.io/24677. There *may* be future change of direction
	// for logging as the discussion carries on.
	LogPath string `protobuf:"bytes,11,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	// Variables for interactive containers, these have very specialized
	// use-cases (e.g. debugging).
	// TODO: Determine if we need to continue supporting these fields that are
	// part of Kubernetes's Container Spec.
	Stdin     bool `protobuf:"varint,12,opt,name=stdin,proto3" json:"stdin,omitempty"`
	StdinOnce bool `protobuf:"varint,13,opt,name=stdin_once,json=stdinOnce,proto3" json:"stdin_once,omitempty"`
	Tty       bool `protobuf:"varint,14,opt,name=tty,proto3" json:"tty,omitempty"`
	// Configuration specific to Linux containers.
	Linux *LinuxContainerConfig `protobuf:"bytes,15,opt,name=linux,proto3" json:"linux,omitempty"`
	// Configuration specific to Windows containers.
	Windows              *WindowsContainerConfig `protobuf:"bytes,16,opt,name=windows,proto3" json:"windows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ContainerConfig) Reset()         { *m = ContainerConfig{} }
func (m *ContainerConfig) String() string { return proto.CompactTextString(m) }
func (*ContainerConfig) ProtoMessage()    {}
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{42}
}
func (m *ContainerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerConfig.Unmarshal(m, b)
}
func (m *ContainerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerConfig.Marshal(b, m, deterministic)
}
func (dst *ContainerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerConfig.Merge(dst, src)
}
func (m *ContainerConfig) XXX_Size() int {
	return xxx_messageInfo_ContainerConfig.Size(m)
}
func (m *ContainerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerConfig proto.InternalMessageInfo

func (m *ContainerConfig) GetMetadata() *ContainerMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ContainerConfig) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ContainerConfig) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *ContainerConfig) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ContainerConfig) GetWorkingDir() string {
	if m != nil {
		return m.WorkingDir
	}
	return ""
}

func (m *ContainerConfig) GetEnvs() []*KeyValue {
	if m != nil {
		return m.Envs
	}
	return nil
}

func (m *ContainerConfig) GetMounts() []*Mount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *ContainerConfig) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *ContainerConfig) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ContainerConfig) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ContainerConfig) GetLogPath() string {
	if m != nil {
		return m.LogPath
	}
	return ""
}

func (m *ContainerConfig) GetStdin() bool {
	if m != nil {
		return m.Stdin
	}
	return false
}

func (m *ContainerConfig) GetStdinOnce() bool {
	if m != nil {
		return m.StdinOnce
	}
	return false
}

func (m *ContainerConfig) GetTty() bool {
	if m != nil {
		return m.Tty
	}
	return false
}

func (m *ContainerConfig) GetLinux() *LinuxContainerConfig {
	if m != nil {
		return m.Linux
	}
	return nil
}

func (m *ContainerConfig) GetWindows() *WindowsContainerConfig {
	if m != nil {
		return m.Windows
	}
	return nil
}

type CreateContainerRequest struct {
	// ID of the PodSandbox in which the container should be created.
	PodSandboxId string `protobuf:"bytes,1,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	// Config of the container.
	Config *ContainerConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Config of the PodSandbox. This is the same config that was passed
	// to RunPodSandboxRequest to create the PodSandbox. It is passed again
	// here just for easy reference. The PodSandboxConfig is immutable and
	// remains the same throughout the lifetime of the pod.
	SandboxConfig        *PodSandboxConfig `protobuf:"bytes,3,opt,name=sandbox_config,json=sandboxConfig,proto3" json:"sandbox_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateContainerRequest) Reset()         { *m = CreateContainerRequest{} }
func (m *CreateContainerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContainerRequest) ProtoMessage()    {}
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{43}
}
func (m *CreateContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateContainerRequest.Unmarshal(m, b)
}
func (m *CreateContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateContainerRequest.Marshal(b, m, deterministic)
}
func (dst *CreateContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateContainerRequest.Merge(dst, src)
}
func (m *CreateContainerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateContainerRequest.Size(m)
}
func (m *CreateContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateContainerRequest proto.InternalMessageInfo

func (m *CreateContainerRequest) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

func (m *CreateContainerRequest) GetConfig() *ContainerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CreateContainerRequest) GetSandboxConfig() *PodSandboxConfig {
	if m != nil {
		return m.SandboxConfig
	}
	return nil
}

type CreateContainerResponse struct {
	// ID of the created container.
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateContainerResponse) Reset()         { *m = CreateContainerResponse{} }
func (m *CreateContainerResponse) String() string { return proto.CompactTextString(m) }
func (*CreateContainerResponse) ProtoMessage()    {}
func (*CreateContainerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{44}
}
func (m *CreateContainerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateContainerResponse.Unmarshal(m, b)
}
func (m *CreateContainerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateContainerResponse.Marshal(b, m, deterministic)
}
func (dst *CreateContainerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateContainerResponse.Merge(dst, src)
}
func (m *CreateContainerResponse) XXX_Size() int {
	return xxx_messageInfo_CreateContainerResponse.Size(m)
}
func (m *CreateContainerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateContainerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateContainerResponse proto.InternalMessageInfo

func (m *CreateContainerResponse) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type StartContainerRequest struct {
	// ID of the container to start.
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartContainerRequest) Reset()         { *m = StartContainerRequest{} }
func (m *StartContainerRequest) String() string { return proto.CompactTextString(m) }
func (*StartContainerRequest) ProtoMessage()    {}
func (*StartContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{45}
}
func (m *StartContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartContainerRequest.Unmarshal(m, b)
}
func (m *StartContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartContainerRequest.Marshal(b, m, deterministic)
}
func (dst *StartContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartContainerRequest.Merge(dst, src)
}
func (m *StartContainerRequest) XXX_Size() int {
	return xxx_messageInfo_StartContainerRequest.Size(m)
}
func (m *StartContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartContainerRequest proto.InternalMessageInfo

func (m *StartContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type StartContainerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartContainerResponse) Reset()         { *m = StartContainerResponse{} }
func (m *StartContainerResponse) String() string { return proto.CompactTextString(m) }
func (*StartContainerResponse) ProtoMessage()    {}
func (*StartContainerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{46}
}
func (m *StartContainerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartContainerResponse.Unmarshal(m, b)
}
func (m *StartContainerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartContainerResponse.Marshal(b, m, deterministic)
}
func (dst *StartContainerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartContainerResponse.Merge(dst, src)
}
func (m *StartContainerResponse) XXX_Size() int {
	return xxx_messageInfo_StartContainerResponse.Size(m)
}
func (m *StartContainerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartContainerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartContainerResponse proto.InternalMessageInfo

type StopContainerRequest struct {
	// ID of the container to stop.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Timeout in seconds to wait for the container to stop before forcibly
	// terminating it. Default: 0 (forcibly terminate the container immediately)
	Timeout              int64    `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopContainerRequest) Reset()         { *m = StopContainerRequest{} }
func (m *StopContainerRequest) String() string { return proto.CompactTextString(m) }
func (*StopContainerRequest) ProtoMessage()    {}
func (*StopContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{47}
}
func (m *StopContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopContainerRequest.Unmarshal(m, b)
}
func (m *StopContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopContainerRequest.Marshal(b, m, deterministic)
}
func (dst *StopContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopContainerRequest.Merge(dst, src)
}
func (m *StopContainerRequest) XXX_Size() int {
	return xxx_messageInfo_StopContainerRequest.Size(m)
}
func (m *StopContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopContainerRequest proto.InternalMessageInfo

func (m *StopContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *StopContainerRequest) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type StopContainerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopContainerResponse) Reset()         { *m = StopContainerResponse{} }
func (m *StopContainerResponse) String() string { return proto.CompactTextString(m) }
func (*StopContainerResponse) ProtoMessage()    {}
func (*StopContainerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{48}
}
func (m *StopContainerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopContainerResponse.Unmarshal(m, b)
}
func (m *StopContainerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopContainerResponse.Marshal(b, m, deterministic)
}
func (dst *StopContainerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopContainerResponse.Merge(dst, src)
}
func (m *StopContainerResponse) XXX_Size() int {
	return xxx_messageInfo_StopContainerResponse.Size(m)
}
func (m *StopContainerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopContainerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopContainerResponse proto.InternalMessageInfo

type RemoveContainerRequest struct {
	// ID of the container to remove.
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveContainerRequest) Reset()         { *m = RemoveContainerRequest{} }
func (m *RemoveContainerRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveContainerRequest) ProtoMessage()    {}
func (*RemoveContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{49}
}
func (m *RemoveContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveContainerRequest.Unmarshal(m, b)
}
func (m *RemoveContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveContainerRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveContainerRequest.Merge(dst, src)
}
func (m *RemoveContainerRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveContainerRequest.Size(m)
}
func (m *RemoveContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveContainerRequest proto.InternalMessageInfo

func (m *RemoveContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type RemoveContainerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveContainerResponse) Reset()         { *m = RemoveContainerResponse{} }
func (m *RemoveContainerResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveContainerResponse) ProtoMessage()    {}
func (*RemoveContainerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{50}
}
func (m *RemoveContainerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveContainerResponse.Unmarshal(m, b)
}
func (m *RemoveContainerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveContainerResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveContainerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveContainerResponse.Merge(dst, src)
}
func (m *RemoveContainerResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveContainerResponse.Size(m)
}
func (m *RemoveContainerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveContainerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveContainerResponse proto.InternalMessageInfo

// ContainerStateValue is the wrapper of ContainerState.
type ContainerStateValue struct {
	// State of the container.
	State                ContainerState `protobuf:"varint,1,opt,name=state,proto3,enum=runtime.v1alpha2.ContainerState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ContainerStateValue) Reset()         { *m = ContainerStateValue{} }
func (m *ContainerStateValue) String() string { return proto.CompactTextString(m) }
func (*ContainerStateValue) ProtoMessage()    {}
func (*ContainerStateValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{51}
}
func (m *ContainerStateValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStateValue.Unmarshal(m, b)
}
func (m *ContainerStateValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStateValue.Marshal(b, m, deterministic)
}
func (dst *ContainerStateValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStateValue.Merge(dst, src)
}
func (m *ContainerStateValue) XXX_Size() int {
	return xxx_messageInfo_ContainerStateValue.Size(m)
}
func (m *ContainerStateValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStateValue.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStateValue proto.InternalMessageInfo

func (m *ContainerStateValue) GetState() ContainerState {
	if m != nil {
		return m.State
	}
	return ContainerState_CONTAINER_CREATED
}

// ContainerFilter is used to filter containers.
// All those fields are combined with 'AND'
type ContainerFilter struct {
	// ID of the container.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// State of the container.
	State *ContainerStateValue `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// ID of the PodSandbox.
	PodSandboxId string `protobuf:"bytes,3,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	// LabelSelector to select matches.
	// Only api.MatchLabels is supported for now and the requirements
	// are ANDed. MatchExpressions is not supported yet.
	LabelSelector        map[string]string `protobuf:"bytes,4,rep,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContainerFilter) Reset()         { *m = ContainerFilter{} }
func (m *ContainerFilter) String() string { return proto.CompactTextString(m) }
func (*ContainerFilter) ProtoMessage()    {}
func (*ContainerFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{52}
}
func (m *ContainerFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerFilter.Unmarshal(m, b)
}
func (m *ContainerFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerFilter.Marshal(b, m, deterministic)
}
func (dst *ContainerFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerFilter.Merge(dst, src)
}
func (m *ContainerFilter) XXX_Size() int {
	return xxx_messageInfo_ContainerFilter.Size(m)
}
func (m *ContainerFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerFilter proto.InternalMessageInfo

func (m *ContainerFilter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContainerFilter) GetState() *ContainerStateValue {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ContainerFilter) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

func (m *ContainerFilter) GetLabelSelector() map[string]string {
	if m != nil {
		return m.LabelSelector
	}
	return nil
}

type ListContainersRequest struct {
	Filter               *ContainerFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListContainersRequest) Reset()         { *m = ListContainersRequest{} }
func (m *ListContainersRequest) String() string { return proto.CompactTextString(m) }
func (*ListContainersRequest) ProtoMessage()    {}
func (*ListContainersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{53}
}
func (m *ListContainersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContainersRequest.Unmarshal(m, b)
}
func (m *ListContainersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContainersRequest.Marshal(b, m, deterministic)
}
func (dst *ListContainersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContainersRequest.Merge(dst, src)
}
func (m *ListContainersRequest) XXX_Size() int {
	return xxx_messageInfo_ListContainersRequest.Size(m)
}
func (m *ListContainersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContainersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListContainersRequest proto.InternalMessageInfo

func (m *ListContainersRequest) GetFilter() *ContainerFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// Container provides the runtime information for a container, such as ID, hash,
// state of the container.
type Container struct {
	// ID of the container, used by the container runtime to identify
	// a container.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the sandbox to which this container belongs.
	PodSandboxId string `protobuf:"bytes,2,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	// Metadata of the container.
	Metadata *ContainerMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Spec of the image.
	Image *ImageSpec `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// Reference to the image in use. For most runtimes, this should be an
	// image ID.
	ImageRef string `protobuf:"bytes,5,opt,name=image_ref,json=imageRef,proto3" json:"image_ref,omitempty"`
	// State of the container.
	State ContainerState `protobuf:"varint,6,opt,name=state,proto3,enum=runtime.v1alpha2.ContainerState" json:"state,omitempty"`
	// Creation time of the container in nanoseconds.
	CreatedAt int64 `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Key-value pairs that may be used to scope and select individual resources.
	Labels map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Unstructured key-value map holding arbitrary metadata.
	// Annotations MUST NOT be altered by the runtime; the value of this field
	// MUST be identical to that of the corresponding ContainerConfig used to
	// instantiate this Container.
	Annotations          map[string]string `protobuf:"bytes,9,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{54}
}
func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (dst *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(dst, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Container) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

func (m *Container) GetMetadata() *ContainerMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Container) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Container) GetImageRef() string {
	if m != nil {
		return m.ImageRef
	}
	return ""
}

func (m *Container) GetState() ContainerState {
	if m != nil {
		return m.State
	}
	return ContainerState_CONTAINER_CREATED
}

func (m *Container) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Container) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Container) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type ListContainersResponse struct {
	// List of containers.
	Containers           []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListContainersResponse) Reset()         { *m = ListContainersResponse{} }
func (m *ListContainersResponse) String() string { return proto.CompactTextString(m) }
func (*ListContainersResponse) ProtoMessage()    {}
func (*ListContainersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{55}
}
func (m *ListContainersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContainersResponse.Unmarshal(m, b)
}
func (m *ListContainersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContainersResponse.Marshal(b, m, deterministic)
}
func (dst *ListContainersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContainersResponse.Merge(dst, src)
}
func (m *ListContainersResponse) XXX_Size() int {
	return xxx_messageInfo_ListContainersResponse.Size(m)
}
func (m *ListContainersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContainersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListContainersResponse proto.InternalMessageInfo

func (m *ListContainersResponse) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type ContainerStatusRequest struct {
	// ID of the container for which to retrieve status.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Verbose indicates whether to return extra information about the container.
	Verbose              bool     `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerStatusRequest) Reset()         { *m = ContainerStatusRequest{} }
func (m *ContainerStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerStatusRequest) ProtoMessage()    {}
func (*ContainerStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{56}
}
func (m *ContainerStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStatusRequest.Unmarshal(m, b)
}
func (m *ContainerStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStatusRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStatusRequest.Merge(dst, src)
}
func (m *ContainerStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerStatusRequest.Size(m)
}
func (m *ContainerStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStatusRequest proto.InternalMessageInfo

func (m *ContainerStatusRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ContainerStatusRequest) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

// ContainerStatus represents the status of a container.
type ContainerStatus struct {
	// ID of the container.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata of the container.
	Metadata *ContainerMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Status of the container.
	State ContainerState `protobuf:"varint,3,opt,name=state,proto3,enum=runtime.v1alpha2.ContainerState" json:"state,omitempty"`
	// Creation time of the container in nanoseconds.
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Start time of the container in nanoseconds. Default: 0 (not specified).
	StartedAt int64 `protobuf:"varint,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Finish time of the container in nanoseconds. Default: 0 (not specified).
	FinishedAt int64 `protobuf:"varint,6,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Exit code of the container. Only required when finished_at != 0. Default: 0.
	ExitCode int32 `protobuf:"varint,7,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Spec of the image.
	Image *ImageSpec `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	// Reference to the image in use. For most runtimes, this should be an
	// image ID
	ImageRef string `protobuf:"bytes,9,opt,name=image_ref,json=imageRef,proto3" json:"image_ref,omitempty"`
	// Brief CamelCase string explaining why container is in its current state.
	Reason string `protobuf:"bytes,10,opt,name=reason,proto3" json:"reason,omitempty"`
	// Human-readable message indicating details about why container is in its
	// current state.
	Message string `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
	// Key-value pairs that may be used to scope and select individual resources.
	Labels map[string]string `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Unstructured key-value map holding arbitrary metadata.
	// Annotations MUST NOT be altered by the runtime; the value of this field
	// MUST be identical to that of the corresponding ContainerConfig used to
	// instantiate the Container this status represents.
	Annotations map[string]string `protobuf:"bytes,13,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Mounts for the container.
	Mounts []*Mount `protobuf:"bytes,14,rep,name=mounts,proto3" json:"mounts,omitempty"`
	// Log path of container.
	LogPath              string   `protobuf:"bytes,15,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerStatus) Reset()         { *m = ContainerStatus{} }
func (m *ContainerStatus) String() string { return proto.CompactTextString(m) }
func (*ContainerStatus) ProtoMessage()    {}
func (*ContainerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{57}
}
func (m *ContainerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStatus.Unmarshal(m, b)
}
func (m *ContainerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStatus.Marshal(b, m, deterministic)
}
func (dst *ContainerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStatus.Merge(dst, src)
}
func (m *ContainerStatus) XXX_Size() int {
	return xxx_messageInfo_ContainerStatus.Size(m)
}
func (m *ContainerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStatus proto.InternalMessageInfo

func (m *ContainerStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContainerStatus) GetMetadata() *ContainerMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ContainerStatus) GetState() ContainerState {
	if m != nil {
		return m.State
	}
	return ContainerState_CONTAINER_CREATED
}

func (m *ContainerStatus) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ContainerStatus) GetStartedAt() int64 {
	if m != nil {
		return m.StartedAt
	}
	return 0
}

func (m *ContainerStatus) GetFinishedAt() int64 {
	if m != nil {
		return m.FinishedAt
	}
	return 0
}

func (m *ContainerStatus) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *ContainerStatus) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ContainerStatus) GetImageRef() string {
	if m != nil {
		return m.ImageRef
	}
	return ""
}

func (m *ContainerStatus) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *ContainerStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ContainerStatus) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ContainerStatus) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ContainerStatus) GetMounts() []*Mount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *ContainerStatus) GetLogPath() string {
	if m != nil {
		return m.LogPath
	}
	return ""
}

type ContainerStatusResponse struct {
	// Status of the container.
	Status *ContainerStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Info is extra information of the Container. The key could be arbitrary string, and
	// value should be in json format. The information could include anything useful for
	// debug, e.g. pid for linux container based container runtime.
	// It should only be returned non-empty when Verbose is true.
	Info                 map[string]string `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContainerStatusResponse) Reset()         { *m = ContainerStatusResponse{} }
func (m *ContainerStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerStatusResponse) ProtoMessage()    {}
func (*ContainerStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{58}
}
func (m *ContainerStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStatusResponse.Unmarshal(m, b)
}
func (m *ContainerStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStatusResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStatusResponse.Merge(dst, src)
}
func (m *ContainerStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerStatusResponse.Size(m)
}
func (m *ContainerStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStatusResponse proto.InternalMessageInfo

func (m *ContainerStatusResponse) GetStatus() *ContainerStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ContainerStatusResponse) GetInfo() map[string]string {
	if m != nil {
		return m.Info
	}
	return nil
}

type UpdateContainerResourcesRequest struct {
	// ID of the container to update.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Resource configuration specific to Linux containers.
	Linux                *LinuxContainerResources `protobuf:"bytes,2,opt,name=linux,proto3" json:"linux,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UpdateContainerResourcesRequest) Reset()         { *m = UpdateContainerResourcesRequest{} }
func (m *UpdateContainerResourcesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateContainerResourcesRequest) ProtoMessage()    {}
func (*UpdateContainerResourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{59}
}
func (m *UpdateContainerResourcesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateContainerResourcesRequest.Unmarshal(m, b)
}
func (m *UpdateContainerResourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateContainerResourcesRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateContainerResourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateContainerResourcesRequest.Merge(dst, src)
}
func (m *UpdateContainerResourcesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateContainerResourcesRequest.Size(m)
}
func (m *UpdateContainerResourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateContainerResourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateContainerResourcesRequest proto.InternalMessageInfo

func (m *UpdateContainerResourcesRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *UpdateContainerResourcesRequest) GetLinux() *LinuxContainerResources {
	if m != nil {
		return m.Linux
	}
	return nil
}

type UpdateContainerResourcesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateContainerResourcesResponse) Reset()         { *m = UpdateContainerResourcesResponse{} }
func (m *UpdateContainerResourcesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateContainerResourcesResponse) ProtoMessage()    {}
func (*UpdateContainerResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{60}
}
func (m *UpdateContainerResourcesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateContainerResourcesResponse.Unmarshal(m, b)
}
func (m *UpdateContainerResourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateContainerResourcesResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateContainerResourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateContainerResourcesResponse.Merge(dst, src)
}
func (m *UpdateContainerResourcesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateContainerResourcesResponse.Size(m)
}
func (m *UpdateContainerResourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateContainerResourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateContainerResourcesResponse proto.InternalMessageInfo

type ExecSyncRequest struct {
	// ID of the container.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Command to execute.
	Cmd []string `protobuf:"bytes,2,rep,name=cmd,proto3" json:"cmd,omitempty"`
	// Timeout in seconds to stop the command. Default: 0 (run forever).
	Timeout              int64    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecSyncRequest) Reset()         { *m = ExecSyncRequest{} }
func (m *ExecSyncRequest) String() string { return proto.CompactTextString(m) }
func (*ExecSyncRequest) ProtoMessage()    {}
func (*ExecSyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{61}
}
func (m *ExecSyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecSyncRequest.Unmarshal(m, b)
}
func (m *ExecSyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecSyncRequest.Marshal(b, m, deterministic)
}
func (dst *ExecSyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecSyncRequest.Merge(dst, src)
}
func (m *ExecSyncRequest) XXX_Size() int {
	return xxx_messageInfo_ExecSyncRequest.Size(m)
}
func (m *ExecSyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecSyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecSyncRequest proto.InternalMessageInfo

func (m *ExecSyncRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ExecSyncRequest) GetCmd() []string {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *ExecSyncRequest) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type ExecSyncResponse struct {
	// Captured command stdout output.
	Stdout []byte `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// Captured command stderr output.
	Stderr []byte `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	// Exit code the command finished with. Default: 0 (success).
	ExitCode             int32    `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecSyncResponse) Reset()         { *m = ExecSyncResponse{} }
func (m *ExecSyncResponse) String() string { return proto.CompactTextString(m) }
func (*ExecSyncResponse) ProtoMessage()    {}
func (*ExecSyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{62}
}
func (m *ExecSyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecSyncResponse.Unmarshal(m, b)
}
func (m *ExecSyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecSyncResponse.Marshal(b, m, deterministic)
}
func (dst *ExecSyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecSyncResponse.Merge(dst, src)
}
func (m *ExecSyncResponse) XXX_Size() int {
	return xxx_messageInfo_ExecSyncResponse.Size(m)
}
func (m *ExecSyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecSyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecSyncResponse proto.InternalMessageInfo

func (m *ExecSyncResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *ExecSyncResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *ExecSyncResponse) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

type ExecRequest struct {
	// ID of the container in which to execute the command.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Command to execute.
	Cmd []string `protobuf:"bytes,2,rep,name=cmd,proto3" json:"cmd,omitempty"`
	// Whether to exec the command in a TTY.
	Tty bool `protobuf:"varint,3,opt,name=tty,proto3" json:"tty,omitempty"`
	// Whether to stream stdin.
	// One of `stdin`, `stdout`, and `stderr` MUST be true.
	Stdin bool `protobuf:"varint,4,opt,name=stdin,proto3" json:"stdin,omitempty"`
	// Whether to stream stdout.
	// One of `stdin`, `stdout`, and `stderr` MUST be true.
	Stdout bool `protobuf:"varint,5,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// Whether to stream stderr.
	// One of `stdin`, `stdout`, and `stderr` MUST be true.
	// If `tty` is true, `stderr` MUST be false. Multiplexing is not supported
	// in this case. The output of stdout and stderr will be combined to a
	// single stream.
	Stderr               bool     `protobuf:"varint,6,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecRequest) Reset()         { *m = ExecRequest{} }
func (m *ExecRequest) String() string { return proto.CompactTextString(m) }
func (*ExecRequest) ProtoMessage()    {}
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{63}
}
func (m *ExecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecRequest.Unmarshal(m, b)
}
func (m *ExecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecRequest.Marshal(b, m, deterministic)
}
func (dst *ExecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecRequest.Merge(dst, src)
}
func (m *ExecRequest) XXX_Size() int {
	return xxx_messageInfo_ExecRequest.Size(m)
}
func (m *ExecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecRequest proto.InternalMessageInfo

func (m *ExecRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ExecRequest) GetCmd() []string {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *ExecRequest) GetTty() bool {
	if m != nil {
		return m.Tty
	}
	return false
}

func (m *ExecRequest) GetStdin() bool {
	if m != nil {
		return m.Stdin
	}
	return false
}

func (m *ExecRequest) GetStdout() bool {
	if m != nil {
		return m.Stdout
	}
	return false
}

func (m *ExecRequest) GetStderr() bool {
	if m != nil {
		return m.Stderr
	}
	return false
}

type ExecResponse struct {
	// Fully qualified URL of the exec streaming server.
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecResponse) Reset()         { *m = ExecResponse{} }
func (m *ExecResponse) String() string { return proto.CompactTextString(m) }
func (*ExecResponse) ProtoMessage()    {}
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{64}
}
func (m *ExecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecResponse.Unmarshal(m, b)
}
func (m *ExecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecResponse.Marshal(b, m, deterministic)
}
func (dst *ExecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecResponse.Merge(dst, src)
}
func (m *ExecResponse) XXX_Size() int {
	return xxx_messageInfo_ExecResponse.Size(m)
}
func (m *ExecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecResponse proto.InternalMessageInfo

func (m *ExecResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type AttachRequest struct {
	// ID of the container to which to attach.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Whether to stream stdin.
	// One of `stdin`, `stdout`, and `stderr` MUST be true.
	Stdin bool `protobuf:"varint,2,opt,name=stdin,proto3" json:"stdin,omitempty"`
	// Whether the process being attached is running in a TTY.
	// This must match the TTY setting in the ContainerConfig.
	Tty bool `protobuf:"varint,3,opt,name=tty,proto3" json:"tty,omitempty"`
	// Whether to stream stdout.
	// One of `stdin`, `stdout`, and `stderr` MUST be true.
	Stdout bool `protobuf:"varint,4,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// Whether to stream stderr.
	// One of `stdin`, `stdout`, and `stderr` MUST be true.
	// If `tty` is true, `stderr` MUST be false. Multiplexing is not supported
	// in this case. The output of stdout and stderr will be combined to a
	// single stream.
	Stderr               bool     `protobuf:"varint,5,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachRequest) Reset()         { *m = AttachRequest{} }
func (m *AttachRequest) String() string { return proto.CompactTextString(m) }
func (*AttachRequest) ProtoMessage()    {}
func (*AttachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{65}
}
func (m *AttachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachRequest.Unmarshal(m, b)
}
func (m *AttachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachRequest.Marshal(b, m, deterministic)
}
func (dst *AttachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachRequest.Merge(dst, src)
}
func (m *AttachRequest) XXX_Size() int {
	return xxx_messageInfo_AttachRequest.Size(m)
}
func (m *AttachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttachRequest proto.InternalMessageInfo

func (m *AttachRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *AttachRequest) GetStdin() bool {
	if m != nil {
		return m.Stdin
	}
	return false
}

func (m *AttachRequest) GetTty() bool {
	if m != nil {
		return m.Tty
	}
	return false
}

func (m *AttachRequest) GetStdout() bool {
	if m != nil {
		return m.Stdout
	}
	return false
}

func (m *AttachRequest) GetStderr() bool {
	if m != nil {
		return m.Stderr
	}
	return false
}

type AttachResponse struct {
	// Fully qualified URL of the attach streaming server.
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachResponse) Reset()         { *m = AttachResponse{} }
func (m *AttachResponse) String() string { return proto.CompactTextString(m) }
func (*AttachResponse) ProtoMessage()    {}
func (*AttachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{66}
}
func (m *AttachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachResponse.Unmarshal(m, b)
}
func (m *AttachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachResponse.Marshal(b, m, deterministic)
}
func (dst *AttachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachResponse.Merge(dst, src)
}
func (m *AttachResponse) XXX_Size() int {
	return xxx_messageInfo_AttachResponse.Size(m)
}
func (m *AttachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttachResponse proto.InternalMessageInfo

func (m *AttachResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type PortForwardRequest struct {
	// ID of the container to which to forward the port.
	PodSandboxId string `protobuf:"bytes,1,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	// Port to forward.
	Port                 []int32  `protobuf:"varint,2,rep,packed,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortForwardRequest) Reset()         { *m = PortForwardRequest{} }
func (m *PortForwardRequest) String() string { return proto.CompactTextString(m) }
func (*PortForwardRequest) ProtoMessage()    {}
func (*PortForwardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{67}
}
func (m *PortForwardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortForwardRequest.Unmarshal(m, b)
}
func (m *PortForwardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortForwardRequest.Marshal(b, m, deterministic)
}
func (dst *PortForwardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortForwardRequest.Merge(dst, src)
}
func (m *PortForwardRequest) XXX_Size() int {
	return xxx_messageInfo_PortForwardRequest.Size(m)
}
func (m *PortForwardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PortForwardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PortForwardRequest proto.InternalMessageInfo

func (m *PortForwardRequest) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

func (m *PortForwardRequest) GetPort() []int32 {
	if m != nil {
		return m.Port
	}
	return nil
}

type PortForwardResponse struct {
	// Fully qualified URL of the port-forward streaming server.
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortForwardResponse) Reset()         { *m = PortForwardResponse{} }
func (m *PortForwardResponse) String() string { return proto.CompactTextString(m) }
func (*PortForwardResponse) ProtoMessage()    {}
func (*PortForwardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{68}
}
func (m *PortForwardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortForwardResponse.Unmarshal(m, b)
}
func (m *PortForwardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortForwardResponse.Marshal(b, m, deterministic)
}
func (dst *PortForwardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortForwardResponse.Merge(dst, src)
}
func (m *PortForwardResponse) XXX_Size() int {
	return xxx_messageInfo_PortForwardResponse.Size(m)
}
func (m *PortForwardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PortForwardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PortForwardResponse proto.InternalMessageInfo

func (m *PortForwardResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ImageFilter struct {
	// Spec of the image.
	Image                *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImageFilter) Reset()         { *m = ImageFilter{} }
func (m *ImageFilter) String() string { return proto.CompactTextString(m) }
func (*ImageFilter) ProtoMessage()    {}
func (*ImageFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{69}
}
func (m *ImageFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFilter.Unmarshal(m, b)
}
func (m *ImageFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFilter.Marshal(b, m, deterministic)
}
func (dst *ImageFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFilter.Merge(dst, src)
}
func (m *ImageFilter) XXX_Size() int {
	return xxx_messageInfo_ImageFilter.Size(m)
}
func (m *ImageFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFilter proto.InternalMessageInfo

func (m *ImageFilter) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

type ListImagesRequest struct {
	// Filter to list images.
	Filter               *ImageFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListImagesRequest) Reset()         { *m = ListImagesRequest{} }
func (m *ListImagesRequest) String() string { return proto.CompactTextString(m) }
func (*ListImagesRequest) ProtoMessage()    {}
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{70}
}
func (m *ListImagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListImagesRequest.Unmarshal(m, b)
}
func (m *ListImagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListImagesRequest.Marshal(b, m, deterministic)
}
func (dst *ListImagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListImagesRequest.Merge(dst, src)
}
func (m *ListImagesRequest) XXX_Size() int {
	return xxx_messageInfo_ListImagesRequest.Size(m)
}
func (m *ListImagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListImagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListImagesRequest proto.InternalMessageInfo

func (m *ListImagesRequest) GetFilter() *ImageFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// Basic information about a container image.
type Image struct {
	// ID of the image.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Other names by which this image is known.
	RepoTags []string `protobuf:"bytes,2,rep,name=repo_tags,json=repoTags,proto3" json:"repo_tags,omitempty"`
	// Digests by which this image is known.
	RepoDigests []string `protobuf:"bytes,3,rep,name=repo_digests,json=repoDigests,proto3" json:"repo_digests,omitempty"`
	// Size of the image in bytes. Must be > 0.
	Size uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// UID that will run the command(s). This is used as a default if no user is
	// specified when creating the container. UID and the following user name
	// are mutually exclusive.
	Uid *Int64Value `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	// User name that will run the command(s). This is used if UID is not set
	// and no user is specified when creating container.
	Username string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	// ImageSpec for image which includes annotations
	Spec                 *ImageSpec `protobuf:"bytes,7,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{71}
}
func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (dst *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(dst, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Image) GetRepoTags() []string {
	if m != nil {
		return m.RepoTags
	}
	return nil
}

func (m *Image) GetRepoDigests() []string {
	if m != nil {
		return m.RepoDigests
	}
	return nil
}

func (m *Image) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Image) GetUid() *Int64Value {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *Image) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Image) GetSpec() *ImageSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type ListImagesResponse struct {
	// List of images.
	Images               []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListImagesResponse) Reset()         { *m = ListImagesResponse{} }
func (m *ListImagesResponse) String() string { return proto.CompactTextString(m) }
func (*ListImagesResponse) ProtoMessage()    {}
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{72}
}
func (m *ListImagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListImagesResponse.Unmarshal(m, b)
}
func (m *ListImagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListImagesResponse.Marshal(b, m, deterministic)
}
func (dst *ListImagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListImagesResponse.Merge(dst, src)
}
func (m *ListImagesResponse) XXX_Size() int {
	return xxx_messageInfo_ListImagesResponse.Size(m)
}
func (m *ListImagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListImagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListImagesResponse proto.InternalMessageInfo

func (m *ListImagesResponse) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

type ImageStatusRequest struct {
	// Spec of the image.
	Image *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Verbose indicates whether to return extra information about the image.
	Verbose              bool     `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageStatusRequest) Reset()         { *m = ImageStatusRequest{} }
func (m *ImageStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ImageStatusRequest) ProtoMessage()    {}
func (*ImageStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{73}
}
func (m *ImageStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageStatusRequest.Unmarshal(m, b)
}
func (m *ImageStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageStatusRequest.Marshal(b, m, deterministic)
}
func (dst *ImageStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageStatusRequest.Merge(dst, src)
}
func (m *ImageStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ImageStatusRequest.Size(m)
}
func (m *ImageStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageStatusRequest proto.InternalMessageInfo

func (m *ImageStatusRequest) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ImageStatusRequest) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

type ImageStatusResponse struct {
	// Status of the image.
	Image *Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Info is extra information of the Image. The key could be arbitrary string, and
	// value should be in json format. The information could include anything useful
	// for debug, e.g. image config for oci image based container runtime.
	// It should only be returned non-empty when Verbose is true.
	Info                 map[string]string `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ImageStatusResponse) Reset()         { *m = ImageStatusResponse{} }
func (m *ImageStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ImageStatusResponse) ProtoMessage()    {}
func (*ImageStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{74}
}
func (m *ImageStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageStatusResponse.Unmarshal(m, b)
}
func (m *ImageStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageStatusResponse.Marshal(b, m, deterministic)
}
func (dst *ImageStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageStatusResponse.Merge(dst, src)
}
func (m *ImageStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ImageStatusResponse.Size(m)
}
func (m *ImageStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageStatusResponse proto.InternalMessageInfo

func (m *ImageStatusResponse) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ImageStatusResponse) GetInfo() map[string]string {
	if m != nil {
		return m.Info
	}
	return nil
}

// AuthConfig contains authorization information for connecting to a registry.
type AuthConfig struct {
	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Auth          string `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	ServerAddress string `protobuf:"bytes,4,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	// IdentityToken is used to authenticate the user and get
	// an access token for the registry.
	IdentityToken string `protobuf:"bytes,5,opt,name=identity_token,json=identityToken,proto3" json:"identity_token,omitempty"`
	// RegistryToken is a bearer token to be sent to a registry
	RegistryToken        string   `protobuf:"bytes,6,opt,name=registry_token,json=registryToken,proto3" json:"registry_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthConfig) Reset()         { *m = AuthConfig{} }
func (m *AuthConfig) String() string { return proto.CompactTextString(m) }
func (*AuthConfig) ProtoMessage()    {}
func (*AuthConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{75}
}
func (m *AuthConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthConfig.Unmarshal(m, b)
}
func (m *AuthConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthConfig.Marshal(b, m, deterministic)
}
func (dst *AuthConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthConfig.Merge(dst, src)
}
func (m *AuthConfig) XXX_Size() int {
	return xxx_messageInfo_AuthConfig.Size(m)
}
func (m *AuthConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AuthConfig proto.InternalMessageInfo

func (m *AuthConfig) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthConfig) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

func (m *AuthConfig) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *AuthConfig) GetIdentityToken() string {
	if m != nil {
		return m.IdentityToken
	}
	return ""
}

func (m *AuthConfig) GetRegistryToken() string {
	if m != nil {
		return m.RegistryToken
	}
	return ""
}

type PullImageRequest struct {
	// Spec of the image.
	Image *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Authentication configuration for pulling the image.
	Auth *AuthConfig `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	// Config of the PodSandbox, which is used to pull image in PodSandbox context.
	SandboxConfig        *PodSandboxConfig `protobuf:"bytes,3,opt,name=sandbox_config,json=sandboxConfig,proto3" json:"sandbox_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PullImageRequest) Reset()         { *m = PullImageRequest{} }
func (m *PullImageRequest) String() string { return proto.CompactTextString(m) }
func (*PullImageRequest) ProtoMessage()    {}
func (*PullImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{76}
}
func (m *PullImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullImageRequest.Unmarshal(m, b)
}
func (m *PullImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullImageRequest.Marshal(b, m, deterministic)
}
func (dst *PullImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullImageRequest.Merge(dst, src)
}
func (m *PullImageRequest) XXX_Size() int {
	return xxx_messageInfo_PullImageRequest.Size(m)
}
func (m *PullImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullImageRequest proto.InternalMessageInfo

func (m *PullImageRequest) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *PullImageRequest) GetAuth() *AuthConfig {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *PullImageRequest) GetSandboxConfig() *PodSandboxConfig {
	if m != nil {
		return m.SandboxConfig
	}
	return nil
}

type PullImageResponse struct {
	// Reference to the image in use. For most runtimes, this should be an
	// image ID or digest.
	ImageRef             string   `protobuf:"bytes,1,opt,name=image_ref,json=imageRef,proto3" json:"image_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullImageResponse) Reset()         { *m = PullImageResponse{} }
func (m *PullImageResponse) String() string { return proto.CompactTextString(m) }
func (*PullImageResponse) ProtoMessage()    {}
func (*PullImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{77}
}
func (m *PullImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullImageResponse.Unmarshal(m, b)
}
func (m *PullImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullImageResponse.Marshal(b, m, deterministic)
}
func (dst *PullImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullImageResponse.Merge(dst, src)
}
func (m *PullImageResponse) XXX_Size() int {
	return xxx_messageInfo_PullImageResponse.Size(m)
}
func (m *PullImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullImageResponse proto.InternalMessageInfo

func (m *PullImageResponse) GetImageRef() string {
	if m != nil {
		return m.ImageRef
	}
	return ""
}

type RemoveImageRequest struct {
	// Spec of the image to remove.
	Image                *ImageSpec `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RemoveImageRequest) Reset()         { *m = RemoveImageRequest{} }
func (m *RemoveImageRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveImageRequest) ProtoMessage()    {}
func (*RemoveImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{78}
}
func (m *RemoveImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveImageRequest.Unmarshal(m, b)
}
func (m *RemoveImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveImageRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveImageRequest.Merge(dst, src)
}
func (m *RemoveImageRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveImageRequest.Size(m)
}
func (m *RemoveImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveImageRequest proto.InternalMessageInfo

func (m *RemoveImageRequest) GetImage() *ImageSpec {
	if m != nil {
		return m.Image
	}
	return nil
}

type RemoveImageResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveImageResponse) Reset()         { *m = RemoveImageResponse{} }
func (m *RemoveImageResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveImageResponse) ProtoMessage()    {}
func (*RemoveImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{79}
}
func (m *RemoveImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveImageResponse.Unmarshal(m, b)
}
func (m *RemoveImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveImageResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveImageResponse.Merge(dst, src)
}
func (m *RemoveImageResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveImageResponse.Size(m)
}
func (m *RemoveImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveImageResponse proto.InternalMessageInfo

type NetworkConfig struct {
	// CIDR to use for pod IP addresses. If the CIDR is empty, runtimes
	// should omit it.
	PodCidr              string   `protobuf:"bytes,1,opt,name=pod_cidr,json=podCidr,proto3" json:"pod_cidr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkConfig) Reset()         { *m = NetworkConfig{} }
func (m *NetworkConfig) String() string { return proto.CompactTextString(m) }
func (*NetworkConfig) ProtoMessage()    {}
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{80}
}
func (m *NetworkConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkConfig.Unmarshal(m, b)
}
func (m *NetworkConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkConfig.Marshal(b, m, deterministic)
}
func (dst *NetworkConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkConfig.Merge(dst, src)
}
func (m *NetworkConfig) XXX_Size() int {
	return xxx_messageInfo_NetworkConfig.Size(m)
}
func (m *NetworkConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkConfig proto.InternalMessageInfo

func (m *NetworkConfig) GetPodCidr() string {
	if m != nil {
		return m.PodCidr
	}
	return ""
}

type RuntimeConfig struct {
	NetworkConfig        *NetworkConfig `protobuf:"bytes,1,opt,name=network_config,json=networkConfig,proto3" json:"network_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RuntimeConfig) Reset()         { *m = RuntimeConfig{} }
func (m *RuntimeConfig) String() string { return proto.CompactTextString(m) }
func (*RuntimeConfig) ProtoMessage()    {}
func (*RuntimeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{81}
}
func (m *RuntimeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeConfig.Unmarshal(m, b)
}
func (m *RuntimeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeConfig.Marshal(b, m, deterministic)
}
func (dst *RuntimeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeConfig.Merge(dst, src)
}
func (m *RuntimeConfig) XXX_Size() int {
	return xxx_messageInfo_RuntimeConfig.Size(m)
}
func (m *RuntimeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeConfig proto.InternalMessageInfo

func (m *RuntimeConfig) GetNetworkConfig() *NetworkConfig {
	if m != nil {
		return m.NetworkConfig
	}
	return nil
}

type UpdateRuntimeConfigRequest struct {
	RuntimeConfig        *RuntimeConfig `protobuf:"bytes,1,opt,name=runtime_config,json=runtimeConfig,proto3" json:"runtime_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateRuntimeConfigRequest) Reset()         { *m = UpdateRuntimeConfigRequest{} }
func (m *UpdateRuntimeConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRuntimeConfigRequest) ProtoMessage()    {}
func (*UpdateRuntimeConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{82}
}
func (m *UpdateRuntimeConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRuntimeConfigRequest.Unmarshal(m, b)
}
func (m *UpdateRuntimeConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRuntimeConfigRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRuntimeConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRuntimeConfigRequest.Merge(dst, src)
}
func (m *UpdateRuntimeConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRuntimeConfigRequest.Size(m)
}
func (m *UpdateRuntimeConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRuntimeConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRuntimeConfigRequest proto.InternalMessageInfo

func (m *UpdateRuntimeConfigRequest) GetRuntimeConfig() *RuntimeConfig {
	if m != nil {
		return m.RuntimeConfig
	}
	return nil
}

type UpdateRuntimeConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRuntimeConfigResponse) Reset()         { *m = UpdateRuntimeConfigResponse{} }
func (m *UpdateRuntimeConfigResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRuntimeConfigResponse) ProtoMessage()    {}
func (*UpdateRuntimeConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{83}
}
func (m *UpdateRuntimeConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRuntimeConfigResponse.Unmarshal(m, b)
}
func (m *UpdateRuntimeConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRuntimeConfigResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateRuntimeConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRuntimeConfigResponse.Merge(dst, src)
}
func (m *UpdateRuntimeConfigResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRuntimeConfigResponse.Size(m)
}
func (m *UpdateRuntimeConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRuntimeConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRuntimeConfigResponse proto.InternalMessageInfo

// RuntimeCondition contains condition information for the runtime.
// There are 2 kinds of runtime conditions:
// 1. Required conditions: Conditions are required for kubelet to work
// properly. If any required condition is unmet, the node will be not ready.
// The required conditions include:
//   * RuntimeReady: RuntimeReady means the runtime is up and ready to accept
//   basic containers e.g. container only needs host network.
//   * NetworkReady: NetworkReady means the runtime network is up and ready to
//   accept containers which require container network.
// 2. Optional conditions: Conditions are informative to the user, but kubelet
// will not rely on. Since condition type is an arbitrary string, all conditions
// not required are optional. These conditions will be exposed to users to help
// them understand the status of the system.
type RuntimeCondition struct {
	// Type of runtime condition.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Status of the condition, one of true/false. Default: false.
	Status bool `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// Brief CamelCase string containing reason for the condition's last transition.
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// Human-readable message indicating details about last transition.
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeCondition) Reset()         { *m = RuntimeCondition{} }
func (m *RuntimeCondition) String() string { return proto.CompactTextString(m) }
func (*RuntimeCondition) ProtoMessage()    {}
func (*RuntimeCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{84}
}
func (m *RuntimeCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeCondition.Unmarshal(m, b)
}
func (m *RuntimeCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeCondition.Marshal(b, m, deterministic)
}
func (dst *RuntimeCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeCondition.Merge(dst, src)
}
func (m *RuntimeCondition) XXX_Size() int {
	return xxx_messageInfo_RuntimeCondition.Size(m)
}
func (m *RuntimeCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeCondition.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeCondition proto.InternalMessageInfo

func (m *RuntimeCondition) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RuntimeCondition) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *RuntimeCondition) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *RuntimeCondition) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// RuntimeStatus is information about the current status of the runtime.
type RuntimeStatus struct {
	// List of current observed runtime conditions.
	Conditions           []*RuntimeCondition `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RuntimeStatus) Reset()         { *m = RuntimeStatus{} }
func (m *RuntimeStatus) String() string { return proto.CompactTextString(m) }
func (*RuntimeStatus) ProtoMessage()    {}
func (*RuntimeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{85}
}
func (m *RuntimeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeStatus.Unmarshal(m, b)
}
func (m *RuntimeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeStatus.Marshal(b, m, deterministic)
}
func (dst *RuntimeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeStatus.Merge(dst, src)
}
func (m *RuntimeStatus) XXX_Size() int {
	return xxx_messageInfo_RuntimeStatus.Size(m)
}
func (m *RuntimeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeStatus proto.InternalMessageInfo

func (m *RuntimeStatus) GetConditions() []*RuntimeCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

type StatusRequest struct {
	// Verbose indicates whether to return extra information about the runtime.
	Verbose              bool     `protobuf:"varint,1,opt,name=verbose,proto3" json:"verbose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{86}
}
func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (dst *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(dst, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

func (m *StatusRequest) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

type StatusResponse struct {
	// Status of the Runtime.
	Status *RuntimeStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Info is extra information of the Runtime. The key could be arbitrary string, and
	// value should be in json format. The information could include anything useful for
	// debug, e.g. plugins used by the container runtime.
	// It should only be returned non-empty when Verbose is true.
	Info                 map[string]string `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{87}
}
func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (dst *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(dst, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatus() *RuntimeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StatusResponse) GetInfo() map[string]string {
	if m != nil {
		return m.Info
	}
	return nil
}

type ImageFsInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageFsInfoRequest) Reset()         { *m = ImageFsInfoRequest{} }
func (m *ImageFsInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ImageFsInfoRequest) ProtoMessage()    {}
func (*ImageFsInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{88}
}
func (m *ImageFsInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFsInfoRequest.Unmarshal(m, b)
}
func (m *ImageFsInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFsInfoRequest.Marshal(b, m, deterministic)
}
func (dst *ImageFsInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFsInfoRequest.Merge(dst, src)
}
func (m *ImageFsInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ImageFsInfoRequest.Size(m)
}
func (m *ImageFsInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFsInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFsInfoRequest proto.InternalMessageInfo

// UInt64Value is the wrapper of uint64.
type UInt64Value struct {
	// The value.
	Value                uint64   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UInt64Value) Reset()         { *m = UInt64Value{} }
func (m *UInt64Value) String() string { return proto.CompactTextString(m) }
func (*UInt64Value) ProtoMessage()    {}
func (*UInt64Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{89}
}
func (m *UInt64Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UInt64Value.Unmarshal(m, b)
}
func (m *UInt64Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UInt64Value.Marshal(b, m, deterministic)
}
func (dst *UInt64Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UInt64Value.Merge(dst, src)
}
func (m *UInt64Value) XXX_Size() int {
	return xxx_messageInfo_UInt64Value.Size(m)
}
func (m *UInt64Value) XXX_DiscardUnknown() {
	xxx_messageInfo_UInt64Value.DiscardUnknown(m)
}

var xxx_messageInfo_UInt64Value proto.InternalMessageInfo

func (m *UInt64Value) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// FilesystemIdentifier uniquely identify the filesystem.
type FilesystemIdentifier struct {
	// Mountpoint of a filesystem.
	Mountpoint           string   `protobuf:"bytes,1,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilesystemIdentifier) Reset()         { *m = FilesystemIdentifier{} }
func (m *FilesystemIdentifier) String() string { return proto.CompactTextString(m) }
func (*FilesystemIdentifier) ProtoMessage()    {}
func (*FilesystemIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{90}
}
func (m *FilesystemIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesystemIdentifier.Unmarshal(m, b)
}
func (m *FilesystemIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesystemIdentifier.Marshal(b, m, deterministic)
}
func (dst *FilesystemIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesystemIdentifier.Merge(dst, src)
}
func (m *FilesystemIdentifier) XXX_Size() int {
	return xxx_messageInfo_FilesystemIdentifier.Size(m)
}
func (m *FilesystemIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesystemIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_FilesystemIdentifier proto.InternalMessageInfo

func (m *FilesystemIdentifier) GetMountpoint() string {
	if m != nil {
		return m.Mountpoint
	}
	return ""
}

// FilesystemUsage provides the filesystem usage information.
type FilesystemUsage struct {
	// Timestamp in nanoseconds at which the information were collected. Must be > 0.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The unique identifier of the filesystem.
	FsId *FilesystemIdentifier `protobuf:"bytes,2,opt,name=fs_id,json=fsId,proto3" json:"fs_id,omitempty"`
	// UsedBytes represents the bytes used for images on the filesystem.
	// This may differ from the total bytes used on the filesystem and may not
	// equal CapacityBytes - AvailableBytes.
	UsedBytes *UInt64Value `protobuf:"bytes,3,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	// InodesUsed represents the inodes used by the images.
	// This may not equal InodesCapacity - InodesAvailable because the underlying
	// filesystem may also be used for purposes other than storing images.
	InodesUsed           *UInt64Value `protobuf:"bytes,4,opt,name=inodes_used,json=inodesUsed,proto3" json:"inodes_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FilesystemUsage) Reset()         { *m = FilesystemUsage{} }
func (m *FilesystemUsage) String() string { return proto.CompactTextString(m) }
func (*FilesystemUsage) ProtoMessage()    {}
func (*FilesystemUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{91}
}
func (m *FilesystemUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesystemUsage.Unmarshal(m, b)
}
func (m *FilesystemUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesystemUsage.Marshal(b, m, deterministic)
}
func (dst *FilesystemUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesystemUsage.Merge(dst, src)
}
func (m *FilesystemUsage) XXX_Size() int {
	return xxx_messageInfo_FilesystemUsage.Size(m)
}
func (m *FilesystemUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesystemUsage.DiscardUnknown(m)
}

var xxx_messageInfo_FilesystemUsage proto.InternalMessageInfo

func (m *FilesystemUsage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *FilesystemUsage) GetFsId() *FilesystemIdentifier {
	if m != nil {
		return m.FsId
	}
	return nil
}

func (m *FilesystemUsage) GetUsedBytes() *UInt64Value {
	if m != nil {
		return m.UsedBytes
	}
	return nil
}

func (m *FilesystemUsage) GetInodesUsed() *UInt64Value {
	if m != nil {
		return m.InodesUsed
	}
	return nil
}

type ImageFsInfoResponse struct {
	// Information of image filesystem(s).
	ImageFilesystems     []*FilesystemUsage `protobuf:"bytes,1,rep,name=image_filesystems,json=imageFilesystems,proto3" json:"image_filesystems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ImageFsInfoResponse) Reset()         { *m = ImageFsInfoResponse{} }
func (m *ImageFsInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ImageFsInfoResponse) ProtoMessage()    {}
func (*ImageFsInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{92}
}
func (m *ImageFsInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFsInfoResponse.Unmarshal(m, b)
}
func (m *ImageFsInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFsInfoResponse.Marshal(b, m, deterministic)
}
func (dst *ImageFsInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFsInfoResponse.Merge(dst, src)
}
func (m *ImageFsInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ImageFsInfoResponse.Size(m)
}
func (m *ImageFsInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFsInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFsInfoResponse proto.InternalMessageInfo

func (m *ImageFsInfoResponse) GetImageFilesystems() []*FilesystemUsage {
	if m != nil {
		return m.ImageFilesystems
	}
	return nil
}

type ContainerStatsRequest struct {
	// ID of the container for which to retrieve stats.
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerStatsRequest) Reset()         { *m = ContainerStatsRequest{} }
func (m *ContainerStatsRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerStatsRequest) ProtoMessage()    {}
func (*ContainerStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{93}
}
func (m *ContainerStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStatsRequest.Unmarshal(m, b)
}
func (m *ContainerStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStatsRequest.Marshal(b, m, deterministic)
}
func (dst *ContainerStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStatsRequest.Merge(dst, src)
}
func (m *ContainerStatsRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerStatsRequest.Size(m)
}
func (m *ContainerStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStatsRequest proto.InternalMessageInfo

func (m *ContainerStatsRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type ContainerStatsResponse struct {
	// Stats of the container.
	Stats                *ContainerStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ContainerStatsResponse) Reset()         { *m = ContainerStatsResponse{} }
func (m *ContainerStatsResponse) String() string { return proto.CompactTextString(m) }
func (*ContainerStatsResponse) ProtoMessage()    {}
func (*ContainerStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{94}
}
func (m *ContainerStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStatsResponse.Unmarshal(m, b)
}
func (m *ContainerStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStatsResponse.Marshal(b, m, deterministic)
}
func (dst *ContainerStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStatsResponse.Merge(dst, src)
}
func (m *ContainerStatsResponse) XXX_Size() int {
	return xxx_messageInfo_ContainerStatsResponse.Size(m)
}
func (m *ContainerStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStatsResponse proto.InternalMessageInfo

func (m *ContainerStatsResponse) GetStats() *ContainerStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type ListContainerStatsRequest struct {
	// Filter for the list request.
	Filter               *ContainerStatsFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListContainerStatsRequest) Reset()         { *m = ListContainerStatsRequest{} }
func (m *ListContainerStatsRequest) String() string { return proto.CompactTextString(m) }
func (*ListContainerStatsRequest) ProtoMessage()    {}
func (*ListContainerStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{95}
}
func (m *ListContainerStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContainerStatsRequest.Unmarshal(m, b)
}
func (m *ListContainerStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContainerStatsRequest.Marshal(b, m, deterministic)
}
func (dst *ListContainerStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContainerStatsRequest.Merge(dst, src)
}
func (m *ListContainerStatsRequest) XXX_Size() int {
	return xxx_messageInfo_ListContainerStatsRequest.Size(m)
}
func (m *ListContainerStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContainerStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListContainerStatsRequest proto.InternalMessageInfo

func (m *ListContainerStatsRequest) GetFilter() *ContainerStatsFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// ContainerStatsFilter is used to filter containers.
// All those fields are combined with 'AND'
type ContainerStatsFilter struct {
	// ID of the container.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the PodSandbox.
	PodSandboxId string `protobuf:"bytes,2,opt,name=pod_sandbox_id,json=podSandboxId,proto3" json:"pod_sandbox_id,omitempty"`
	// LabelSelector to select matches.
	// Only api.MatchLabels is supported for now and the requirements
	// are ANDed. MatchExpressions is not supported yet.
	LabelSelector        map[string]string `protobuf:"bytes,3,rep,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContainerStatsFilter) Reset()         { *m = ContainerStatsFilter{} }
func (m *ContainerStatsFilter) String() string { return proto.CompactTextString(m) }
func (*ContainerStatsFilter) ProtoMessage()    {}
func (*ContainerStatsFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{96}
}
func (m *ContainerStatsFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStatsFilter.Unmarshal(m, b)
}
func (m *ContainerStatsFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStatsFilter.Marshal(b, m, deterministic)
}
func (dst *ContainerStatsFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStatsFilter.Merge(dst, src)
}
func (m *ContainerStatsFilter) XXX_Size() int {
	return xxx_messageInfo_ContainerStatsFilter.Size(m)
}
func (m *ContainerStatsFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStatsFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStatsFilter proto.InternalMessageInfo

func (m *ContainerStatsFilter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContainerStatsFilter) GetPodSandboxId() string {
	if m != nil {
		return m.PodSandboxId
	}
	return ""
}

func (m *ContainerStatsFilter) GetLabelSelector() map[string]string {
	if m != nil {
		return m.LabelSelector
	}
	return nil
}

type ListContainerStatsResponse struct {
	// Stats of the container.
	Stats                []*ContainerStats `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListContainerStatsResponse) Reset()         { *m = ListContainerStatsResponse{} }
func (m *ListContainerStatsResponse) String() string { return proto.CompactTextString(m) }
func (*ListContainerStatsResponse) ProtoMessage()    {}
func (*ListContainerStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{97}
}
func (m *ListContainerStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContainerStatsResponse.Unmarshal(m, b)
}
func (m *ListContainerStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContainerStatsResponse.Marshal(b, m, deterministic)
}
func (dst *ListContainerStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContainerStatsResponse.Merge(dst, src)
}
func (m *ListContainerStatsResponse) XXX_Size() int {
	return xxx_messageInfo_ListContainerStatsResponse.Size(m)
}
func (m *ListContainerStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContainerStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListContainerStatsResponse proto.InternalMessageInfo

func (m *ListContainerStatsResponse) GetStats() []*ContainerStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

// ContainerAttributes provides basic information of the container.
type ContainerAttributes struct {
	// ID of the container.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata of the container.
	Metadata *ContainerMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Key-value pairs that may be used to scope and select individual resources.
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Unstructured key-value map holding arbitrary metadata.
	// Annotations MUST NOT be altered by the runtime; the value of this field
	// MUST be identical to that of the corresponding ContainerConfig used to
	// instantiate the Container this status represents.
	Annotations          map[string]string `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContainerAttributes) Reset()         { *m = ContainerAttributes{} }
func (m *ContainerAttributes) String() string { return proto.CompactTextString(m) }
func (*ContainerAttributes) ProtoMessage()    {}
func (*ContainerAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{98}
}
func (m *ContainerAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerAttributes.Unmarshal(m, b)
}
func (m *ContainerAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerAttributes.Marshal(b, m, deterministic)
}
func (dst *ContainerAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerAttributes.Merge(dst, src)
}
func (m *ContainerAttributes) XXX_Size() int {
	return xxx_messageInfo_ContainerAttributes.Size(m)
}
func (m *ContainerAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerAttributes proto.InternalMessageInfo

func (m *ContainerAttributes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContainerAttributes) GetMetadata() *ContainerMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ContainerAttributes) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ContainerAttributes) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

// ContainerStats provides the resource usage statistics for a container.
type ContainerStats struct {
	// Information of the container.
	Attributes *ContainerAttributes `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// CPU usage gathered from the container.
	Cpu *CpuUsage `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	// Memory usage gathered from the container.
	Memory *MemoryUsage `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	// Usage of the writable layer.
	WritableLayer        *FilesystemUsage `protobuf:"bytes,4,opt,name=writable_layer,json=writableLayer,proto3" json:"writable_layer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ContainerStats) Reset()         { *m = ContainerStats{} }
func (m *ContainerStats) String() string { return proto.CompactTextString(m) }
func (*ContainerStats) ProtoMessage()    {}
func (*ContainerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{99}
}
func (m *ContainerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStats.Unmarshal(m, b)
}
func (m *ContainerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStats.Marshal(b, m, deterministic)
}
func (dst *ContainerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStats.Merge(dst, src)
}
func (m *ContainerStats) XXX_Size() int {
	return xxx_messageInfo_ContainerStats.Size(m)
}
func (m *ContainerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStats.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStats proto.InternalMessageInfo

func (m *ContainerStats) GetAttributes() *ContainerAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ContainerStats) GetCpu() *CpuUsage {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ContainerStats) GetMemory() *MemoryUsage {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ContainerStats) GetWritableLayer() *FilesystemUsage {
	if m != nil {
		return m.WritableLayer
	}
	return nil
}

// CpuUsage provides the CPU usage information.
type CpuUsage struct {
	// Timestamp in nanoseconds at which the information were collected. Must be > 0.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Cumulative CPU usage (sum across all cores) since object creation.
	UsageCoreNanoSeconds *UInt64Value `protobuf:"bytes,2,opt,name=usage_core_nano_seconds,json=usageCoreNanoSeconds,proto3" json:"usage_core_nano_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CpuUsage) Reset()         { *m = CpuUsage{} }
func (m *CpuUsage) String() string { return proto.CompactTextString(m) }
func (*CpuUsage) ProtoMessage()    {}
func (*CpuUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{100}
}
func (m *CpuUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CpuUsage.Unmarshal(m, b)
}
func (m *CpuUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CpuUsage.Marshal(b, m, deterministic)
}
func (dst *CpuUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CpuUsage.Merge(dst, src)
}
func (m *CpuUsage) XXX_Size() int {
	return xxx_messageInfo_CpuUsage.Size(m)
}
func (m *CpuUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_CpuUsage.DiscardUnknown(m)
}

var xxx_messageInfo_CpuUsage proto.InternalMessageInfo

func (m *CpuUsage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CpuUsage) GetUsageCoreNanoSeconds() *UInt64Value {
	if m != nil {
		return m.UsageCoreNanoSeconds
	}
	return nil
}

// MemoryUsage provides the memory usage information.
type MemoryUsage struct {
	// Timestamp in nanoseconds at which the information were collected. Must be > 0.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The amount of working set memory in bytes.
	WorkingSetBytes      *UInt64Value `protobuf:"bytes,2,opt,name=working_set_bytes,json=workingSetBytes,proto3" json:"working_set_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MemoryUsage) Reset()         { *m = MemoryUsage{} }
func (m *MemoryUsage) String() string { return proto.CompactTextString(m) }
func (*MemoryUsage) ProtoMessage()    {}
func (*MemoryUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{101}
}
func (m *MemoryUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemoryUsage.Unmarshal(m, b)
}
func (m *MemoryUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemoryUsage.Marshal(b, m, deterministic)
}
func (dst *MemoryUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemoryUsage.Merge(dst, src)
}
func (m *MemoryUsage) XXX_Size() int {
	return xxx_messageInfo_MemoryUsage.Size(m)
}
func (m *MemoryUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_MemoryUsage.DiscardUnknown(m)
}

var xxx_messageInfo_MemoryUsage proto.InternalMessageInfo

func (m *MemoryUsage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MemoryUsage) GetWorkingSetBytes() *UInt64Value {
	if m != nil {
		return m.WorkingSetBytes
	}
	return nil
}

type ReopenContainerLogRequest struct {
	// ID of the container for which to reopen the log.
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReopenContainerLogRequest) Reset()         { *m = ReopenContainerLogRequest{} }
func (m *ReopenContainerLogRequest) String() string { return proto.CompactTextString(m) }
func (*ReopenContainerLogRequest) ProtoMessage()    {}
func (*ReopenContainerLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{102}
}
func (m *ReopenContainerLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReopenContainerLogRequest.Unmarshal(m, b)
}
func (m *ReopenContainerLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReopenContainerLogRequest.Marshal(b, m, deterministic)
}
func (dst *ReopenContainerLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReopenContainerLogRequest.Merge(dst, src)
}
func (m *ReopenContainerLogRequest) XXX_Size() int {
	return xxx_messageInfo_ReopenContainerLogRequest.Size(m)
}
func (m *ReopenContainerLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReopenContainerLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReopenContainerLogRequest proto.InternalMessageInfo

func (m *ReopenContainerLogRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type ReopenContainerLogResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReopenContainerLogResponse) Reset()         { *m = ReopenContainerLogResponse{} }
func (m *ReopenContainerLogResponse) String() string { return proto.CompactTextString(m) }
func (*ReopenContainerLogResponse) ProtoMessage()    {}
func (*ReopenContainerLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_2d6fcaab405de5a7, []int{103}
}
func (m *ReopenContainerLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReopenContainerLogResponse.Unmarshal(m, b)
}
func (m *ReopenContainerLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReopenContainerLogResponse.Marshal(b, m, deterministic)
}
func (dst *ReopenContainerLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReopenContainerLogResponse.Merge(dst, src)
}
func (m *ReopenContainerLogResponse) XXX_Size() int {
	return xxx_messageInfo_ReopenContainerLogResponse.Size(m)
}
func (m *ReopenContainerLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReopenContainerLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReopenContainerLogResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*VersionRequest)(nil), "runtime.v1alpha2.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "runtime.v1alpha2.VersionResponse")
	proto.RegisterType((*DNSConfig)(nil), "runtime.v1alpha2.DNSConfig")
	proto.RegisterType((*PortMapping)(nil), "runtime.v1alpha2.PortMapping")
	proto.RegisterType((*Mount)(nil), "runtime.v1alpha2.Mount")
	proto.RegisterType((*NamespaceOption)(nil), "runtime.v1alpha2.NamespaceOption")
	proto.RegisterType((*Int64Value)(nil), "runtime.v1alpha2.Int64Value")
	proto.RegisterType((*LinuxSandboxSecurityContext)(nil), "runtime.v1alpha2.LinuxSandboxSecurityContext")
	proto.RegisterType((*LinuxPodSandboxConfig)(nil), "runtime.v1alpha2.LinuxPodSandboxConfig")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.LinuxPodSandboxConfig.SysctlsEntry")
	proto.RegisterType((*PodSandboxMetadata)(nil), "runtime.v1alpha2.PodSandboxMetadata")
	proto.RegisterType((*PodSandboxConfig)(nil), "runtime.v1alpha2.PodSandboxConfig")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.PodSandboxConfig.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.PodSandboxConfig.LabelsEntry")
	proto.RegisterType((*RunPodSandboxRequest)(nil), "runtime.v1alpha2.RunPodSandboxRequest")
	proto.RegisterType((*RunPodSandboxResponse)(nil), "runtime.v1alpha2.RunPodSandboxResponse")
	proto.RegisterType((*StopPodSandboxRequest)(nil), "runtime.v1alpha2.StopPodSandboxRequest")
	proto.RegisterType((*StopPodSandboxResponse)(nil), "runtime.v1alpha2.StopPodSandboxResponse")
	proto.RegisterType((*RemovePodSandboxRequest)(nil), "runtime.v1alpha2.RemovePodSandboxRequest")
	proto.RegisterType((*RemovePodSandboxResponse)(nil), "runtime.v1alpha2.RemovePodSandboxResponse")
	proto.RegisterType((*PodSandboxStatusRequest)(nil), "runtime.v1alpha2.PodSandboxStatusRequest")
	proto.RegisterType((*PodIP)(nil), "runtime.v1alpha2.PodIP")
	proto.RegisterType((*PodSandboxNetworkStatus)(nil), "runtime.v1alpha2.PodSandboxNetworkStatus")
	proto.RegisterType((*Namespace)(nil), "runtime.v1alpha2.Namespace")
	proto.RegisterType((*LinuxPodSandboxStatus)(nil), "runtime.v1alpha2.LinuxPodSandboxStatus")
	proto.RegisterType((*PodSandboxStatus)(nil), "runtime.v1alpha2.PodSandboxStatus")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.PodSandboxStatus.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.PodSandboxStatus.LabelsEntry")
	proto.RegisterType((*PodSandboxStatusResponse)(nil), "runtime.v1alpha2.PodSandboxStatusResponse")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.PodSandboxStatusResponse.InfoEntry")
	proto.RegisterType((*PodSandboxStateValue)(nil), "runtime.v1alpha2.PodSandboxStateValue")
	proto.RegisterType((*PodSandboxFilter)(nil), "runtime.v1alpha2.PodSandboxFilter")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.PodSandboxFilter.LabelSelectorEntry")
	proto.RegisterType((*ListPodSandboxRequest)(nil), "runtime.v1alpha2.ListPodSandboxRequest")
	proto.RegisterType((*PodSandbox)(nil), "runtime.v1alpha2.PodSandbox")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.PodSandbox.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.PodSandbox.LabelsEntry")
	proto.RegisterType((*ListPodSandboxResponse)(nil), "runtime.v1alpha2.ListPodSandboxResponse")
	proto.RegisterType((*ImageSpec)(nil), "runtime.v1alpha2.ImageSpec")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ImageSpec.AnnotationsEntry")
	proto.RegisterType((*KeyValue)(nil), "runtime.v1alpha2.KeyValue")
	proto.RegisterType((*LinuxContainerResources)(nil), "runtime.v1alpha2.LinuxContainerResources")
	proto.RegisterType((*HugepageLimit)(nil), "runtime.v1alpha2.HugepageLimit")
	proto.RegisterType((*SELinuxOption)(nil), "runtime.v1alpha2.SELinuxOption")
	proto.RegisterType((*Capability)(nil), "runtime.v1alpha2.Capability")
	proto.RegisterType((*LinuxContainerSecurityContext)(nil), "runtime.v1alpha2.LinuxContainerSecurityContext")
	proto.RegisterType((*LinuxContainerConfig)(nil), "runtime.v1alpha2.LinuxContainerConfig")
	proto.RegisterType((*WindowsContainerSecurityContext)(nil), "runtime.v1alpha2.WindowsContainerSecurityContext")
	proto.RegisterType((*WindowsContainerConfig)(nil), "runtime.v1alpha2.WindowsContainerConfig")
	proto.RegisterType((*WindowsContainerResources)(nil), "runtime.v1alpha2.WindowsContainerResources")
	proto.RegisterType((*ContainerMetadata)(nil), "runtime.v1alpha2.ContainerMetadata")
	proto.RegisterType((*Device)(nil), "runtime.v1alpha2.Device")
	proto.RegisterType((*ContainerConfig)(nil), "runtime.v1alpha2.ContainerConfig")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerConfig.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerConfig.LabelsEntry")
	proto.RegisterType((*CreateContainerRequest)(nil), "runtime.v1alpha2.CreateContainerRequest")
	proto.RegisterType((*CreateContainerResponse)(nil), "runtime.v1alpha2.CreateContainerResponse")
	proto.RegisterType((*StartContainerRequest)(nil), "runtime.v1alpha2.StartContainerRequest")
	proto.RegisterType((*StartContainerResponse)(nil), "runtime.v1alpha2.StartContainerResponse")
	proto.RegisterType((*StopContainerRequest)(nil), "runtime.v1alpha2.StopContainerRequest")
	proto.RegisterType((*StopContainerResponse)(nil), "runtime.v1alpha2.StopContainerResponse")
	proto.RegisterType((*RemoveContainerRequest)(nil), "runtime.v1alpha2.RemoveContainerRequest")
	proto.RegisterType((*RemoveContainerResponse)(nil), "runtime.v1alpha2.RemoveContainerResponse")
	proto.RegisterType((*ContainerStateValue)(nil), "runtime.v1alpha2.ContainerStateValue")
	proto.RegisterType((*ContainerFilter)(nil), "runtime.v1alpha2.ContainerFilter")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerFilter.LabelSelectorEntry")
	proto.RegisterType((*ListContainersRequest)(nil), "runtime.v1alpha2.ListContainersRequest")
	proto.RegisterType((*Container)(nil), "runtime.v1alpha2.Container")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.Container.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.Container.LabelsEntry")
	proto.RegisterType((*ListContainersResponse)(nil), "runtime.v1alpha2.ListContainersResponse")
	proto.RegisterType((*ContainerStatusRequest)(nil), "runtime.v1alpha2.ContainerStatusRequest")
	proto.RegisterType((*ContainerStatus)(nil), "runtime.v1alpha2.ContainerStatus")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerStatus.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerStatus.LabelsEntry")
	proto.RegisterType((*ContainerStatusResponse)(nil), "runtime.v1alpha2.ContainerStatusResponse")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerStatusResponse.InfoEntry")
	proto.RegisterType((*UpdateContainerResourcesRequest)(nil), "runtime.v1alpha2.UpdateContainerResourcesRequest")
	proto.RegisterType((*UpdateContainerResourcesResponse)(nil), "runtime.v1alpha2.UpdateContainerResourcesResponse")
	proto.RegisterType((*ExecSyncRequest)(nil), "runtime.v1alpha2.ExecSyncRequest")
	proto.RegisterType((*ExecSyncResponse)(nil), "runtime.v1alpha2.ExecSyncResponse")
	proto.RegisterType((*ExecRequest)(nil), "runtime.v1alpha2.ExecRequest")
	proto.RegisterType((*ExecResponse)(nil), "runtime.v1alpha2.ExecResponse")
	proto.RegisterType((*AttachRequest)(nil), "runtime.v1alpha2.AttachRequest")
	proto.RegisterType((*AttachResponse)(nil), "runtime.v1alpha2.AttachResponse")
	proto.RegisterType((*PortForwardRequest)(nil), "runtime.v1alpha2.PortForwardRequest")
	proto.RegisterType((*PortForwardResponse)(nil), "runtime.v1alpha2.PortForwardResponse")
	proto.RegisterType((*ImageFilter)(nil), "runtime.v1alpha2.ImageFilter")
	proto.RegisterType((*ListImagesRequest)(nil), "runtime.v1alpha2.ListImagesRequest")
	proto.RegisterType((*Image)(nil), "runtime.v1alpha2.Image")
	proto.RegisterType((*ListImagesResponse)(nil), "runtime.v1alpha2.ListImagesResponse")
	proto.RegisterType((*ImageStatusRequest)(nil), "runtime.v1alpha2.ImageStatusRequest")
	proto.RegisterType((*ImageStatusResponse)(nil), "runtime.v1alpha2.ImageStatusResponse")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ImageStatusResponse.InfoEntry")
	proto.RegisterType((*AuthConfig)(nil), "runtime.v1alpha2.AuthConfig")
	proto.RegisterType((*PullImageRequest)(nil), "runtime.v1alpha2.PullImageRequest")
	proto.RegisterType((*PullImageResponse)(nil), "runtime.v1alpha2.PullImageResponse")
	proto.RegisterType((*RemoveImageRequest)(nil), "runtime.v1alpha2.RemoveImageRequest")
	proto.RegisterType((*RemoveImageResponse)(nil), "runtime.v1alpha2.RemoveImageResponse")
	proto.RegisterType((*NetworkConfig)(nil), "runtime.v1alpha2.NetworkConfig")
	proto.RegisterType((*RuntimeConfig)(nil), "runtime.v1alpha2.RuntimeConfig")
	proto.RegisterType((*UpdateRuntimeConfigRequest)(nil), "runtime.v1alpha2.UpdateRuntimeConfigRequest")
	proto.RegisterType((*UpdateRuntimeConfigResponse)(nil), "runtime.v1alpha2.UpdateRuntimeConfigResponse")
	proto.RegisterType((*RuntimeCondition)(nil), "runtime.v1alpha2.RuntimeCondition")
	proto.RegisterType((*RuntimeStatus)(nil), "runtime.v1alpha2.RuntimeStatus")
	proto.RegisterType((*StatusRequest)(nil), "runtime.v1alpha2.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "runtime.v1alpha2.StatusResponse")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.StatusResponse.InfoEntry")
	proto.RegisterType((*ImageFsInfoRequest)(nil), "runtime.v1alpha2.ImageFsInfoRequest")
	proto.RegisterType((*UInt64Value)(nil), "runtime.v1alpha2.UInt64Value")
	proto.RegisterType((*FilesystemIdentifier)(nil), "runtime.v1alpha2.FilesystemIdentifier")
	proto.RegisterType((*FilesystemUsage)(nil), "runtime.v1alpha2.FilesystemUsage")
	proto.RegisterType((*ImageFsInfoResponse)(nil), "runtime.v1alpha2.ImageFsInfoResponse")
	proto.RegisterType((*ContainerStatsRequest)(nil), "runtime.v1alpha2.ContainerStatsRequest")
	proto.RegisterType((*ContainerStatsResponse)(nil), "runtime.v1alpha2.ContainerStatsResponse")
	proto.RegisterType((*ListContainerStatsRequest)(nil), "runtime.v1alpha2.ListContainerStatsRequest")
	proto.RegisterType((*ContainerStatsFilter)(nil), "runtime.v1alpha2.ContainerStatsFilter")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerStatsFilter.LabelSelectorEntry")
	proto.RegisterType((*ListContainerStatsResponse)(nil), "runtime.v1alpha2.ListContainerStatsResponse")
	proto.RegisterType((*ContainerAttributes)(nil), "runtime.v1alpha2.ContainerAttributes")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerAttributes.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "runtime.v1alpha2.ContainerAttributes.LabelsEntry")
	proto.RegisterType((*ContainerStats)(nil), "runtime.v1alpha2.ContainerStats")
	proto.RegisterType((*CpuUsage)(nil), "runtime.v1alpha2.CpuUsage")
	proto.RegisterType((*MemoryUsage)(nil), "runtime.v1alpha2.MemoryUsage")
	proto.RegisterType((*ReopenContainerLogRequest)(nil), "runtime.v1alpha2.ReopenContainerLogRequest")
	proto.RegisterType((*ReopenContainerLogResponse)(nil), "runtime.v1alpha2.ReopenContainerLogResponse")
	proto.RegisterEnum("runtime.v1alpha2.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("runtime.v1alpha2.MountPropagation", MountPropagation_name, MountPropagation_value)
	proto.RegisterEnum("runtime.v1alpha2.NamespaceMode", NamespaceMode_name, NamespaceMode_value)
	proto.RegisterEnum("runtime.v1alpha2.PodSandboxState", PodSandboxState_name, PodSandboxState_value)
	proto.RegisterEnum("runtime.v1alpha2.ContainerState", ContainerState_name, ContainerState_value)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_2d6fcaab405de5a7) }

var fileDescriptor_api_2d6fcaab405de5a7 = []byte{
	// 4815 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x7c, 0x4b, 0x73, 0x1c, 0x47,
	0x72, 0x3f, 0xe7, 0x05, 0xcc, 0xe4, 0x60, 0x06, 0x83, 0x22, 0x48, 0x0c, 0x87, 0xa2, 0x44, 0xb4,
	0x44, 0xf1, 0x21, 0x09, 0x14, 0x21, 0x2d, 0xf5, 0x27, 0x29, 0x51, 0x1a, 0x02, 0x20, 0x39, 0xff,
	0x25, 0x07, 0xe3, 0x1e, 0x40, 0x8f, 0x95, 0x22, 0x7a, 0x9b, 0xd3, 0x85, 0x41, 0x2f, 0x67, 0xba,
	0x5b, 0x5d, 0x3d, 0x24, 0xb1, 0x8e, 0x70, 0x38, 0x62, 0xc3, 0x7b, 0xf0, 0x47, 0xf0, 0x71, 0x7d,
	0xf0, 0xc1, 0x27, 0x1f, 0x7c, 0xf2, 0x69, 0x1d, 0xbe, 0x3a, 0x7c, 0x5b, 0x87, 0xc3, 0x27, 0x47,
	0xd8, 0x11, 0x0e, 0x47, 0xd8, 0xe1, 0x0f, 0xe0, 0x83, 0xa3, 0x5e, 0xfd, 0xee, 0x79, 0x90, 0xdc,
	0xd5, 0xfa, 0x84, 0xa9, 0xec, 0xcc, 0xac, 0xec, 0xac, 0xac, 0xac, 0xac, 0x5f, 0x55, 0x03, 0x2a,
	0xba, 0x63, 0x6e, 0x39, 0xae, 0xed, 0xd9, 0xa8, 0xe1, 0x4e, 0x2c, 0xcf, 0x1c, 0xe3, 0xad, 0x67,
	0x37, 0xf4, 0x91, 0x73, 0xac, 0x6f, 0x2b, 0xd7, 0xa0, 0xfe, 0x25, 0x76, 0x89, 0x69, 0x5b, 0x2a,
	0xfe, 0x7e, 0x82, 0x89, 0x87, 0x9a, 0xb0, 0xfc, 0x8c, 0x53, 0x9a, 0xb9, 0x8b, 0xb9, 0x2b, 0x15,
	0x55, 0x36, 0x95, 0xbf, 0xc8, 0xc1, 0xaa, 0xcf, 0x4c, 0x1c, 0xdb, 0x22, 0x38, 0x9b, 0x1b, 0x6d,
	0xc2, 0x8a, 0xe8, 0x4d, 0xb3, 0xf4, 0x31, 0x6e, 0xe6, 0xd9, 0xe3, 0xaa, 0xa0, 0x75, 0xf5, 0x31,
	0x46, 0x97, 0x61, 0x55, 0xb2, 0x48, 0x25, 0x05, 0xc6, 0x55, 0x17, 0x64, 0xd1, 0x1b, 0xda, 0x82,
	0xd3, 0x92, 0x51, 0x77, 0x4c, 0x9f, 0xb9, 0xc8, 0x98, 0xd7, 0xc4, 0xa3, 0xb6, 0x63, 0x0a, 0x7e,
	0xe5, 0x5b, 0xa8, 0xec, 0x76, 0xfb, 0x3b, 0xb6, 0x75, 0x64, 0x0e, 0xa9, 0x89, 0x04, 0xbb, 0x54,
	0xa6, 0x99, 0xbb, 0x58, 0xa0, 0x26, 0x8a, 0x26, 0x6a, 0x41, 0x99, 0x60, 0xdd, 0x1d, 0x1c, 0x63,
	0xd2, 0xcc, 0xb3, 0x47, 0x7e, 0x9b, 0x4a, 0xd9, 0x8e, 0x67, 0xda, 0x16, 0x69, 0x16, 0xb8, 0x94,
	0x68, 0x2a, 0xbf, 0xca, 0x41, 0xb5, 0x67, 0xbb, 0xde, 0x63, 0xdd, 0x71, 0x4c, 0x6b, 0x88, 0x6e,
	0x42, 0x99, 0x79, 0x77, 0x60, 0x8f, 0x98, 0x0f, 0xea, 0xdb, 0xad, 0xad, 0xb8, 0x9f, 0xb7, 0x7a,
	0x82, 0x43, 0xf5, 0x79, 0xd1, 0x25, 0xa8, 0x0f, 0x6c, 0xcb, 0xd3, 0x4d, 0x0b, 0xbb, 0x9a, 0x63,
	0xbb, 0x1e, 0x73, 0x51, 0x49, 0xad, 0xf9, 0x54, 0xda, 0x0b, 0x3a, 0x0f, 0x95, 0x63, 0x9b, 0x78,
	0x9c, 0xa3, 0xc0, 0x38, 0xca, 0x94, 0xc0, 0x1e, 0x6e, 0xc0, 0x32, 0x7b, 0x68, 0x3a, 0xc2, 0x19,
	0x4b, 0xb4, 0xd9, 0x71, 0x94, 0xdf, 0xe4, 0xa0, 0xf4, 0xd8, 0x9e, 0x58, 0x5e, 0xac, 0x1b, 0xdd,
	0x3b, 0x16, 0x03, 0x15, 0xea, 0x46, 0xf7, 0x8e, 0x83, 0x6e, 0x28, 0x07, 0x1f, 0x2b, 0xde, 0x0d,
	0x7d, 0xd8, 0x82, 0xb2, 0x8b, 0x75, 0xc3, 0xb6, 0x46, 0x27, 0xcc, 0x84, 0xb2, 0xea, 0xb7, 0xe9,
	0x20, 0x12, 0x3c, 0x32, 0xad, 0xc9, 0x0b, 0xcd, 0xc5, 0x23, 0xfd, 0x09, 0x1e, 0x31, 0x53, 0xca,
	0x6a, 0x5d, 0x90, 0x55, 0x4e, 0x45, 0xbb, 0x50, 0x75, 0x5c, 0xdb, 0xd1, 0x87, 0x3a, 0xf5, 0x63,
	0xb3, 0xc4, 0x5c, 0xa5, 0x24, 0x5d, 0xc5, 0xcc, 0xee, 0x05, 0x9c, 0x6a, 0x58, 0x4c, 0xf9, 0x87,
	0x1c, 0xac, 0xd2, 0xe0, 0x21, 0x8e, 0x3e, 0xc0, 0xfb, 0x6c, 0x48, 0xd0, 0x2d, 0x58, 0xb6, 0xb0,
	0xf7, 0xdc, 0x76, 0x9f, 0x8a, 0x01, 0x78, 0x2b, 0xa9, 0xd5, 0x97, 0x79, 0x6c, 0x1b, 0x58, 0x95,
	0xfc, 0xe8, 0x06, 0x14, 0x1c, 0xd3, 0x60, 0x2f, 0x3c, 0x87, 0x18, 0xe5, 0xa5, 0x22, 0xa6, 0x33,
	0x60, 0x7e, 0x98, 0x47, 0xc4, 0x74, 0x06, 0xd4, 0xb9, 0x9e, 0xee, 0x0e, 0xb1, 0xa7, 0x99, 0x86,
	0x18, 0xa8, 0x32, 0x27, 0x74, 0x0c, 0x45, 0x01, 0xe8, 0x58, 0xde, 0xcd, 0x8f, 0xbf, 0xd4, 0x47,
	0x13, 0x8c, 0xd6, 0xa1, 0xf4, 0x8c, 0xfe, 0x60, 0x6f, 0x52, 0x50, 0x79, 0x43, 0xf9, 0x97, 0x02,
	0x9c, 0x7f, 0x44, 0x9d, 0xd9, 0xd7, 0x2d, 0xe3, 0x89, 0xfd, 0xa2, 0x8f, 0x07, 0x13, 0xd7, 0xf4,
	0x4e, 0x76, 0x6c, 0xcb, 0xc3, 0x2f, 0x3c, 0xd4, 0x85, 0x35, 0x4b, 0x76, 0xab, 0xc9, 0xb8, 0xa5,
	0x1a, 0xaa, 0xdb, 0x9b, 0x53, 0x2c, 0xe4, 0xfe, 0x53, 0x1b, 0x56, 0x94, 0x40, 0xd0, 0xc3, 0x60,
	0x50, 0xa5, 0xb6, 0x3c, 0xd3, 0x96, 0xf2, 0xbe, 0xfd, 0x3d, 0x66, 0x99, 0xd0, 0x25, 0x47, 0x5d,
	0x6a, 0xfa, 0x14, 0xe8, 0x94, 0xd7, 0x74, 0xa2, 0x4d, 0x08, 0x76, 0x99, 0xd7, 0xaa, 0xdb, 0x6f,
	0x24, 0xb5, 0x04, 0x2e, 0x50, 0x2b, 0xee, 0xc4, 0x6a, 0x93, 0x43, 0x82, 0x5d, 0x74, 0x97, 0x25,
	0x11, 0x2a, 0x3d, 0x74, 0xed, 0x89, 0xd3, 0x2c, 0xcf, 0x21, 0x0e, 0x4c, 0xfc, 0x01, 0xe5, 0x67,
	0x19, 0x46, 0x04, 0xaa, 0xe6, 0xda, 0xb6, 0x77, 0x44, 0x64, 0x70, 0x4a, 0xb2, 0xca, 0xa8, 0xe8,
	0x3a, 0x9c, 0x26, 0x13, 0xc7, 0x19, 0xe1, 0x31, 0xb6, 0x3c, 0x7d, 0xc4, 0xbb, 0x23, 0xcd, 0xd2,
	0xc5, 0xc2, 0x95, 0x82, 0x8a, 0xc2, 0x8f, 0x98, 0x62, 0x82, 0xde, 0x04, 0x70, 0x5c, 0xf3, 0x99,
	0x39, 0xc2, 0x43, 0x6c, 0x34, 0x97, 0x98, 0xd2, 0x10, 0x05, 0x7d, 0x08, 0xeb, 0x04, 0x0f, 0x06,
	0xf6, 0xd8, 0xd1, 0x1c, 0xd7, 0x3e, 0x32, 0x47, 0x98, 0x4f, 0xad, 0x65, 0x36, 0xfa, 0x48, 0x3c,
	0xeb, 0xf1, 0x47, 0x74, 0x92, 0x29, 0xbf, 0xca, 0xc3, 0x19, 0xe6, 0xc9, 0x9e, 0x6d, 0x88, 0x61,
	0x16, 0x19, 0xec, 0x6d, 0xa8, 0x0d, 0x98, 0x41, 0x9a, 0xa3, 0xbb, 0xd8, 0xf2, 0xc4, 0x0c, 0x5e,
	0xe1, 0xc4, 0x1e, 0xa3, 0xa1, 0xaf, 0xa1, 0x41, 0x44, 0x54, 0x68, 0x03, 0x1e, 0x16, 0x62, 0xcc,
	0x3e, 0x48, 0xba, 0x6b, 0x4a, 0x2c, 0xa9, 0xab, 0x24, 0x11, 0x5c, 0xcb, 0xe4, 0x84, 0x0c, 0xbc,
	0x11, 0x4f, 0x85, 0xd5, 0xed, 0x8f, 0x33, 0x14, 0xc6, 0x0d, 0xdf, 0xea, 0x73, 0xb1, 0x3d, 0xcb,
	0x73, 0x4f, 0x54, 0xa9, 0xa4, 0x75, 0x1b, 0x56, 0xc2, 0x0f, 0x50, 0x03, 0x0a, 0x4f, 0xf1, 0x89,
	0x78, 0x29, 0xfa, 0x33, 0x98, 0x04, 0x3c, 0x11, 0xf1, 0xc6, 0xed, 0xfc, 0xff, 0xcb, 0x29, 0x2e,
	0xa0, 0xa0, 0x97, 0xc7, 0xd8, 0xd3, 0x0d, 0xdd, 0xd3, 0x11, 0x82, 0x22, 0x5b, 0x63, 0xb8, 0x0a,
	0xf6, 0x9b, 0x6a, 0x9d, 0x88, 0x99, 0x5d, 0x51, 0xe9, 0x4f, 0xf4, 0x06, 0x54, 0xfc, 0x40, 0x17,
	0x0b, 0x4d, 0x40, 0xa0, 0x09, 0x5f, 0xf7, 0x3c, 0x3c, 0x76, 0x3c, 0x16, 0x22, 0x35, 0x55, 0x36,
	0x95, 0xff, 0x2a, 0x42, 0x23, 0x31, 0x26, 0x5f, 0x40, 0x79, 0x2c, 0xba, 0x17, 0x13, 0xed, 0x9d,
	0x94, 0xac, 0x9f, 0x30, 0x55, 0xf5, 0xa5, 0x68, 0x52, 0xa5, 0x09, 0x36, 0xb4, 0x38, 0xfa, 0x6d,
	0x3a, 0xe2, 0x23, 0x7b, 0xa8, 0x19, 0xa6, 0x8b, 0x07, 0x9e, 0xed, 0x9e, 0x08, 0x73, 0x57, 0x46,
	0xf6, 0x70, 0x57, 0xd2, 0xd0, 0x6d, 0x00, 0xc3, 0x22, 0x74, 0xb0, 0x8f, 0xcc, 0x21, 0x33, 0xba,
	0xba, 0x7d, 0x3e, 0x69, 0x84, 0xbf, 0x12, 0xaa, 0x15, 0xc3, 0x22, 0xc2, 0xfc, 0x7b, 0x50, 0xa3,
	0x0b, 0x8a, 0x36, 0xe6, 0x8b, 0x18, 0x8f, 0xf4, 0xea, 0xf6, 0x85, 0xb4, 0x77, 0xf0, 0x97, 0x3a,
	0x75, 0xc5, 0x09, 0x1a, 0x04, 0xdd, 0x87, 0x25, 0x96, 0xd9, 0x49, 0x73, 0x89, 0x09, 0x6f, 0x4d,
	0x73, 0x80, 0x88, 0x88, 0x47, 0x4c, 0x80, 0x07, 0x84, 0x90, 0x46, 0x87, 0x50, 0xd5, 0x2d, 0xcb,
	0xf6, 0x74, 0x9e, 0x68, 0x96, 0x99, 0xb2, 0x8f, 0xe6, 0x50, 0xd6, 0x0e, 0xa4, 0xb8, 0xc6, 0xb0,
	0x1e, 0xf4, 0x19, 0x94, 0x58, 0x26, 0x12, 0x49, 0xe3, 0xf2, 0x9c, 0x41, 0xab, 0x72, 0xa9, 0xd6,
	0x2d, 0xa8, 0x86, 0x8c, 0x5d, 0x24, 0x48, 0x5b, 0x77, 0xa1, 0x11, 0x37, 0x6d, 0xa1, 0x20, 0xff,
	0x43, 0x58, 0x57, 0x27, 0x56, 0x60, 0x98, 0x2c, 0xcd, 0x6e, 0xc3, 0x92, 0x18, 0x6c, 0x1e, 0x71,
	0xca, 0x6c, 0x1f, 0xa9, 0x42, 0x22, 0x5c, 0x6b, 0x1d, 0xeb, 0x96, 0x31, 0xc2, 0xae, 0xe8, 0x57,
	0xd6, 0x5a, 0x0f, 0x39, 0x55, 0xf9, 0x0c, 0xce, 0xc4, 0x3a, 0x17, 0xa5, 0xde, 0x3b, 0x50, 0x77,
	0x6c, 0x43, 0x23, 0x9c, 0x4c, 0x57, 0x32, 0x91, 0x86, 0x1c, 0x9f, 0xb7, 0x63, 0x50, 0xf1, 0xbe,
	0x67, 0x3b, 0x49, 0xe3, 0xe7, 0x13, 0x6f, 0xc2, 0xd9, 0xb8, 0x38, 0xef, 0x5e, 0xf9, 0x1c, 0x36,
	0x54, 0x3c, 0xb6, 0x9f, 0xe1, 0x97, 0x55, 0xdd, 0x82, 0x66, 0x52, 0x81, 0x50, 0xfe, 0x0d, 0x6c,
	0x04, 0xd4, 0xbe, 0xa7, 0x7b, 0x13, 0xb2, 0x90, 0x72, 0x51, 0x07, 0x3f, 0xb1, 0x09, 0x1f, 0xce,
	0xb2, 0x2a, 0x9b, 0xca, 0x06, 0x94, 0x7a, 0xb6, 0xd1, 0xe9, 0xa1, 0x3a, 0xe4, 0x4d, 0x47, 0x08,
	0xe7, 0x4d, 0x47, 0x31, 0xc3, 0x7d, 0x76, 0x79, 0x3d, 0xc2, 0xbb, 0x8e, 0xb3, 0xa2, 0xbb, 0x50,
	0xd7, 0x0d, 0xc3, 0xa4, 0xe1, 0xa4, 0x8f, 0x34, 0xd3, 0xe1, 0xe5, 0x6a, 0x75, 0x7b, 0x23, 0x35,
	0x00, 0x3a, 0x3d, 0xb5, 0x16, 0xb0, 0x77, 0x1c, 0xa2, 0x3c, 0x84, 0x8a, 0xbf, 0xe6, 0xa3, 0x3b,
	0x41, 0x65, 0x9b, 0x9f, 0xb7, 0x42, 0xf0, 0x8b, 0xdf, 0x83, 0xc4, 0x1a, 0x25, 0x4c, 0xbe, 0x03,
	0xe0, 0xe7, 0x52, 0x59, 0x7a, 0x9c, 0x9f, 0xa2, 0x58, 0x0d, 0xb1, 0x2b, 0xbf, 0x28, 0x85, 0x33,
	0x6c, 0xc8, 0x09, 0x86, 0xef, 0x04, 0x23, 0x92, 0x71, 0xf3, 0x2f, 0x95, 0x71, 0x3f, 0x81, 0x12,
	0xf1, 0x74, 0x0f, 0x8b, 0xda, 0x6d, 0x73, 0x9a, 0x38, 0x35, 0x02, 0xab, 0x9c, 0x1f, 0x5d, 0x00,
	0x18, 0xb8, 0x58, 0xf7, 0xb0, 0xa1, 0xe9, 0x7c, 0x79, 0x28, 0xa8, 0x15, 0x41, 0x69, 0x7b, 0x68,
	0x27, 0xa8, 0x3f, 0x4b, 0xcc, 0xb0, 0xab, 0xd3, 0x34, 0x47, 0x86, 0x3a, 0xa8, 0x44, 0xfd, 0x74,
	0xb5, 0x34, 0x67, 0xba, 0x12, 0x0a, 0xb8, 0x54, 0x28, 0x19, 0x2f, 0xcf, 0x4e, 0xc6, 0x5c, 0x74,
	0x9e, 0x64, 0x5c, 0x9e, 0x9d, 0x8c, 0x85, 0xb2, 0xe9, 0xc9, 0x38, 0x25, 0xfd, 0x54, 0xd2, 0xd2,
	0xcf, 0x0f, 0x99, 0x76, 0xff, 0x29, 0x07, 0xcd, 0x64, 0x16, 0x10, 0xd9, 0xef, 0x36, 0x2c, 0x11,
	0x46, 0x99, 0x27, 0xf7, 0x0a, 0x59, 0x21, 0x81, 0x1e, 0x42, 0xd1, 0xb4, 0x8e, 0x6c, 0x31, 0x69,
	0x3f, 0x9e, 0x43, 0x52, 0xf4, 0xba, 0xd5, 0xb1, 0x8e, 0x6c, 0xee, 0x4d, 0xa6, 0xa1, 0xf5, 0x09,
	0x54, 0x7c, 0xd2, 0x42, 0xef, 0xb6, 0x0f, 0xeb, 0xb1, 0xd8, 0xe6, 0xdb, 0x0d, 0x7f, 0x4a, 0xe4,
	0x16, 0x9b, 0x12, 0xca, 0x1f, 0xe7, 0xc3, 0x53, 0xf6, 0xbe, 0x39, 0xf2, 0xb0, 0x9b, 0x98, 0xb2,
	0x9f, 0x4a, 0xed, 0x7c, 0xbe, 0xbe, 0x3b, 0x53, 0x3b, 0xaf, 0xe0, 0xc5, 0xac, 0xfb, 0x0e, 0xea,
	0x2c, 0x28, 0x35, 0x82, 0x47, 0xac, 0xe4, 0x11, 0xe5, 0xe7, 0x8f, 0xa6, 0xa9, 0xe1, 0x96, 0xf0,
	0xd0, 0xee, 0x0b, 0x39, 0xee, 0xc1, 0xda, 0x28, 0x4c, 0x6b, 0x7d, 0x01, 0x28, 0xc9, 0xb4, 0x90,
	0x4f, 0xfb, 0x34, 0x17, 0xd2, 0x8d, 0x78, 0xca, 0x3a, 0x7d, 0xc4, 0xcc, 0x98, 0x27, 0x56, 0xb8,
	0xc1, 0xaa, 0x90, 0x50, 0xfe, 0xb3, 0x00, 0x10, 0x3c, 0xfc, 0x3f, 0x94, 0x04, 0xbf, 0xf0, 0x13,
	0x10, 0x2f, 0x25, 0xaf, 0x4c, 0x53, 0x9c, 0x9a, 0x7a, 0xf6, 0xa3, 0xa9, 0x87, 0x17, 0x95, 0x1f,
	0x4c, 0x55, 0xb3, 0x70, 0xd2, 0x59, 0xfe, 0x7d, 0x4b, 0x3a, 0x8f, 0xe0, 0x6c, 0x3c, 0x88, 0x44,
	0xc6, 0xd9, 0x86, 0x92, 0xe9, 0xe1, 0x31, 0x47, 0xad, 0x52, 0x37, 0xbd, 0x21, 0x21, 0xce, 0xaa,
	0xfc, 0x55, 0x0e, 0x2a, 0x9d, 0xb1, 0x3e, 0xc4, 0x7d, 0x07, 0x0f, 0x68, 0xaf, 0x26, 0x6d, 0x08,
	0x4b, 0x78, 0x03, 0x75, 0xa3, 0x6e, 0xe6, 0x49, 0xe9, 0xfd, 0x94, 0x2d, 0xb5, 0xd4, 0x33, 0xdd,
	0xcb, 0xaf, 0xec, 0x81, 0x6d, 0x28, 0xff, 0x18, 0x9f, 0xf0, 0x74, 0x34, 0xa7, 0x9c, 0xf2, 0x8f,
	0x79, 0xd8, 0x60, 0xcb, 0xe1, 0x8e, 0x04, 0xb1, 0x54, 0x4c, 0xec, 0x89, 0x3b, 0xc0, 0x84, 0xc5,
	0xa9, 0x33, 0xd1, 0x1c, 0xec, 0x9a, 0xb6, 0x21, 0x60, 0x94, 0xca, 0xc0, 0x99, 0xf4, 0x18, 0x01,
	0x9d, 0x07, 0xda, 0xd0, 0xbe, 0x9f, 0xd8, 0x62, 0x0a, 0x15, 0xd4, 0xf2, 0xc0, 0x99, 0xfc, 0x01,
	0x6d, 0x4b, 0x59, 0x72, 0xac, 0xbb, 0x98, 0xb0, 0x19, 0xc2, 0x65, 0xfb, 0x8c, 0x80, 0x6e, 0xc0,
	0x99, 0x31, 0x1e, 0xdb, 0xee, 0x89, 0x36, 0x32, 0xc7, 0xa6, 0xa7, 0x99, 0x96, 0xf6, 0xe4, 0xc4,
	0xc3, 0x44, 0xcc, 0x06, 0xc4, 0x1f, 0x3e, 0xa2, 0xcf, 0x3a, 0xd6, 0x3d, 0xfa, 0x04, 0x29, 0x50,
	0xb3, 0xed, 0xb1, 0x46, 0x06, 0xb6, 0x8b, 0x35, 0xdd, 0xf8, 0x19, 0xab, 0x10, 0x0a, 0x6a, 0xd5,
	0xb6, 0xc7, 0x7d, 0x4a, 0x6b, 0x1b, 0x3f, 0x43, 0x6f, 0x41, 0x75, 0xe0, 0x4c, 0x08, 0xf6, 0x34,
	0xfa, 0x87, 0x15, 0x00, 0x15, 0x15, 0x38, 0x69, 0xc7, 0x99, 0x90, 0x10, 0xc3, 0x98, 0x06, 0xc4,
	0x72, 0x98, 0xe1, 0x31, 0x1e, 0x33, 0xbc, 0xe6, 0x78, 0x32, 0xc4, 0x8e, 0x3e, 0xc4, 0xdc, 0x34,
	0xb9, 0x72, 0xa7, 0xe0, 0x35, 0x0f, 0x05, 0x23, 0x33, 0x53, 0xad, 0x1f, 0x87, 0x9b, 0x44, 0xb9,
	0x07, 0xb5, 0x08, 0x03, 0xf5, 0x17, 0x53, 0x4b, 0xcc, 0x9f, 0xcb, 0x40, 0x2a, 0x53, 0x42, 0xdf,
	0xfc, 0x39, 0x43, 0xab, 0x58, 0x77, 0xcc, 0x91, 0x45, 0x95, 0x37, 0x14, 0x1d, 0x6a, 0x11, 0x50,
	0x88, 0xee, 0xcf, 0x19, 0xfa, 0x23, 0xf6, 0xe7, 0xf4, 0x37, 0xa5, 0xb9, 0xf6, 0x48, 0x8e, 0x2b,
	0xfb, 0x4d, 0x69, 0xde, 0x89, 0x23, 0x37, 0xe7, 0xec, 0x37, 0xeb, 0x02, 0x3f, 0x13, 0xa8, 0x62,
	0x45, 0xe5, 0x0d, 0xc5, 0x00, 0xd8, 0xd1, 0x1d, 0xfd, 0x89, 0x39, 0x32, 0xbd, 0x13, 0x74, 0x15,
	0x1a, 0xba, 0x61, 0x68, 0x03, 0x49, 0x31, 0xb1, 0xc4, 0x7a, 0x57, 0x75, 0xc3, 0xd8, 0x09, 0x91,
	0xd1, 0x7b, 0xb0, 0x66, 0xb8, 0xb6, 0x13, 0xe5, 0xe5, 0xe0, 0x6f, 0x83, 0x3e, 0x08, 0x33, 0x2b,
	0xff, 0x5a, 0x82, 0x0b, 0xd1, 0x30, 0x8b, 0x03, 0x6f, 0x5f, 0xc0, 0x4a, 0xac, 0xd7, 0x0c, 0x80,
	0x2a, 0xb0, 0x56, 0x8d, 0x48, 0xc4, 0x80, 0xa4, 0x7c, 0x02, 0x48, 0x4a, 0x85, 0xf6, 0x0a, 0xaf,
	0x15, 0xda, 0x2b, 0xbe, 0x16, 0x68, 0xaf, 0xf4, 0x6a, 0xd0, 0xde, 0xca, 0x82, 0xd0, 0xde, 0xbb,
	0x2c, 0xb9, 0xcb, 0xde, 0x19, 0x8a, 0xc2, 0x27, 0x4e, 0xcd, 0xef, 0xc3, 0x92, 0x87, 0x0c, 0x31,
	0x08, 0x70, 0x79, 0x11, 0x08, 0xb0, 0x9c, 0x09, 0x01, 0xd2, 0xa8, 0x73, 0x1c, 0xdd, 0x1d, 0xdb,
	0xae, 0xc4, 0xf8, 0x44, 0x51, 0xbb, 0x2a, 0xe9, 0x02, 0xdf, 0xcb, 0x44, 0x03, 0x21, 0x0b, 0x0d,
	0x44, 0x17, 0x61, 0xc5, 0xb2, 0x35, 0x0b, 0x3f, 0xd7, 0x68, 0x2c, 0x90, 0x66, 0x95, 0x07, 0x86,
	0x65, 0x77, 0xf1, 0xf3, 0x1e, 0xa5, 0xa0, 0x4d, 0x58, 0x19, 0xeb, 0xe4, 0x29, 0x36, 0x98, 0x2a,
	0xd2, 0xac, 0xb1, 0x20, 0xae, 0x72, 0x1a, 0xd5, 0x41, 0xd0, 0x25, 0xf0, 0x5f, 0x52, 0x30, 0xd5,
	0x19, 0x53, 0x4d, 0x52, 0x19, 0x9b, 0xf2, 0x37, 0x39, 0x58, 0x8f, 0x86, 0xb9, 0x40, 0x89, 0x1e,
	0x40, 0xc5, 0x95, 0x79, 0x55, 0x84, 0xf6, 0xd5, 0x8c, 0x7d, 0x49, 0x32, 0x11, 0xab, 0x81, 0x2c,
	0xfa, 0x49, 0x26, 0x38, 0x79, 0x7d, 0x96, 0xbe, 0x59, 0xf0, 0xa4, 0xe2, 0xc2, 0x5b, 0x5f, 0x99,
	0x96, 0x61, 0x3f, 0x27, 0x99, 0xb3, 0x34, 0x25, 0x56, 0x72, 0x19, 0xb1, 0x32, 0x70, 0xb1, 0x81,
	0x2d, 0xcf, 0xd4, 0x47, 0x1a, 0x71, 0xf0, 0x40, 0x82, 0x24, 0x01, 0x99, 0xae, 0x88, 0xca, 0xaf,
	0x73, 0x70, 0x36, 0xde, 0xa9, 0xf0, 0x59, 0x27, 0xe9, 0xb3, 0xf7, 0x92, 0xef, 0x18, 0x17, 0x4e,
	0xf5, 0xda, 0x77, 0x99, 0x5e, 0xbb, 0x31, 0x5b, 0xe3, 0x4c, 0xbf, 0xfd, 0x65, 0x0e, 0xce, 0x65,
	0x9a, 0x11, 0x5b, 0x09, 0x73, 0xf1, 0x95, 0x50, 0xac, 0xa2, 0x03, 0x7b, 0x62, 0x79, 0xa1, 0x55,
	0x74, 0x87, 0x1d, 0x39, 0xf1, 0xe5, 0x4a, 0x1b, 0xeb, 0x2f, 0xcc, 0xf1, 0x64, 0x2c, 0x96, 0x51,
	0xaa, 0xee, 0x31, 0xa7, 0xbc, 0xc4, 0x3a, 0xaa, 0xb4, 0x61, 0xcd, 0xb7, 0x72, 0x2a, 0xee, 0x1b,
	0xc2, 0x71, 0xf3, 0x51, 0x1c, 0xd7, 0x82, 0xa5, 0x5d, 0xfc, 0xcc, 0x1c, 0xe0, 0xd7, 0x72, 0x26,
	0x76, 0x11, 0xaa, 0x0e, 0x76, 0xc7, 0x26, 0x21, 0x7e, 0x46, 0xae, 0xa8, 0x61, 0x92, 0xf2, 0x6f,
	0x4b, 0xb0, 0x1a, 0x8f, 0x8e, 0xcf, 0x13, 0xb0, 0xf1, 0xdb, 0x29, 0x6b, 0x45, 0xfc, 0x45, 0x43,
	0xe5, 0xfb, 0x0d, 0x59, 0xd3, 0xe5, 0xb3, 0x20, 0x16, 0xbf, 0x6e, 0x93, 0x05, 0x5f, 0x13, 0x96,
	0x07, 0xf6, 0x78, 0xac, 0x5b, 0x86, 0x3c, 0xca, 0x14, 0x4d, 0xea, 0x3f, 0xdd, 0x1d, 0x52, 0xb7,
	0x53, 0x32, 0xfb, 0x4d, 0x07, 0xef, 0xb9, 0xed, 0x3e, 0x35, 0x2d, 0x06, 0x3f, 0xb3, 0xac, 0x5e,
	0x51, 0x41, 0x90, 0x76, 0x4d, 0x17, 0x6d, 0x41, 0x11, 0x5b, 0xcf, 0x64, 0x7d, 0x9e, 0x72, 0xd6,
	0x29, 0xab, 0x39, 0x95, 0xf1, 0xa1, 0xeb, 0xb0, 0x34, 0xa6, 0x61, 0x21, 0x91, 0x89, 0x8d, 0x8c,
	0x23, 0x3f, 0x55, 0xb0, 0xa1, 0x6d, 0x58, 0x36, 0xd8, 0x38, 0xc9, 0x22, 0xa6, 0x99, 0x02, 0x6a,
	0x33, 0x06, 0x55, 0x32, 0xa2, 0x3d, 0x7f, 0xf7, 0x51, 0xc9, 0xda, 0x36, 0xc4, 0x86, 0x22, 0x75,
	0x0b, 0x72, 0x10, 0xad, 0x8d, 0x81, 0xe9, 0xda, 0x9e, 0xad, 0x6b, 0xfa, 0x3e, 0xe4, 0x1c, 0x94,
	0x47, 0xf6, 0x90, 0x87, 0x51, 0x95, 0x9f, 0x92, 0x8f, 0xec, 0x21, 0x8b, 0xa2, 0x75, 0xba, 0x1b,
	0x33, 0x4c, 0x8b, 0x2d, 0x7f, 0x65, 0x95, 0x37, 0xe8, 0xe4, 0x63, 0x3f, 0x34, 0xdb, 0x1a, 0xe0,
	0x66, 0x8d, 0x3d, 0xaa, 0x30, 0xca, 0xbe, 0x35, 0x60, 0x55, 0xb2, 0xe7, 0x9d, 0x34, 0xeb, 0x8c,
	0x4e, 0x7f, 0xd2, 0x8d, 0x36, 0x07, 0x8f, 0x56, 0xb3, 0x36, 0xda, 0x69, 0xf9, 0x5d, 0x62, 0x47,
	0xf7, 0x60, 0xf9, 0x39, 0x4f, 0x04, 0xcd, 0x06, 0x93, 0xbf, 0x32, 0x3b, 0xbd, 0x08, 0x0d, 0x52,
	0xf0, 0x87, 0xdc, 0x42, 0xfd, 0x5d, 0x0e, 0xce, 0xee, 0xb0, 0x7d, 0x68, 0x28, 0x8f, 0x2d, 0x02,
	0xde, 0xde, 0xf2, 0x71, 0xf5, 0x4c, 0x40, 0x34, 0xfe, 0xde, 0x12, 0x56, 0xef, 0x40, 0x5d, 0x2a,
	0x17, 0x2a, 0x0a, 0x73, 0x43, 0xf3, 0x35, 0x12, 0x6e, 0x2a, 0x9f, 0xc2, 0x46, 0xe2, 0x2d, 0xc4,
	0x56, 0x70, 0x13, 0x56, 0x82, 0x7c, 0xe5, 0xbf, 0x44, 0xd5, 0xa7, 0x75, 0x0c, 0xe5, 0x36, 0x9c,
	0xe9, 0x7b, 0xba, 0xeb, 0x25, 0x5c, 0x30, 0x87, 0x2c, 0x03, 0xdd, 0xa3, 0xb2, 0x02, 0x17, 0xef,
	0xc3, 0x7a, 0xdf, 0xb3, 0x9d, 0x97, 0x50, 0x4a, 0xb3, 0x0e, 0x7d, 0x7f, 0x7b, 0x22, 0xd7, 0x07,
	0xd9, 0x54, 0x36, 0xf8, 0x11, 0x41, 0xb2, 0xb7, 0x3b, 0x70, 0x96, 0x23, 0xf4, 0x2f, 0xf3, 0x12,
	0xe7, 0xe4, 0xf9, 0x40, 0x52, 0xef, 0x63, 0x38, 0x1d, 0x2c, 0x8b, 0x01, 0xf6, 0x75, 0x33, 0x8a,
	0x7d, 0x5d, 0x9c, 0x32, 0xea, 0x11, 0xe8, 0xeb, 0xcf, 0xf3, 0xa1, 0xbc, 0x9e, 0x81, 0x7c, 0xdd,
	0x89, 0x22, 0x5f, 0x97, 0x66, 0xe9, 0x8e, 0x00, 0x5f, 0xc9, 0xa8, 0x2d, 0xa4, 0x44, 0xed, 0xb7,
	0x09, 0x78, 0xac, 0x98, 0x85, 0x2f, 0xc6, 0xac, 0xfd, 0x9d, 0xa0, 0x63, 0x2a, 0x47, 0xc7, 0xfc,
	0xae, 0xfd, 0x03, 0x95, 0x5b, 0x31, 0x74, 0x6c, 0x73, 0xa6, 0xbd, 0x3e, 0x38, 0xf6, 0xd7, 0x45,
	0xa8, 0xf8, 0xcf, 0x12, 0x3e, 0x4f, 0xba, 0x2d, 0x9f, 0xe2, 0xb6, 0xf0, 0x0a, 0x5c, 0x78, 0xa5,
	0x15, 0xb8, 0x38, 0xf7, 0x0a, 0x7c, 0x1e, 0x2a, 0xec, 0x87, 0xe6, 0xe2, 0x23, 0xb1, 0xa2, 0x96,
	0x19, 0x41, 0xc5, 0x47, 0x41, 0x18, 0x2e, 0x2d, 0x14, 0x86, 0x31, 0x3c, 0x6e, 0x39, 0x8e, 0xc7,
	0x7d, 0xee, 0xaf, 0x88, 0x7c, 0x11, 0xbd, 0x3c, 0x45, 0x6f, 0xea, 0x5a, 0x18, 0xc3, 0x89, 0x2a,
	0x59, 0x38, 0x51, 0xa0, 0x65, 0x3a, 0x4e, 0xf4, 0x03, 0xae, 0x10, 0x87, 0x1c, 0x64, 0x0b, 0xc7,
	0xa2, 0xc8, 0xac, 0x77, 0x00, 0xfc, 0x24, 0x22, 0x91, 0xb6, 0xf3, 0x53, 0xde, 0x51, 0x0d, 0xb1,
	0x53, 0xb5, 0x91, 0xa1, 0x09, 0x0e, 0x0d, 0xe7, 0xcb, 0x8f, 0x19, 0x27, 0x86, 0xff, 0x53, 0x0a,
	0xe5, 0x97, 0x8c, 0xc3, 0xb0, 0xcf, 0x13, 0x38, 0xf0, 0x82, 0x51, 0x7c, 0x33, 0x0a, 0x03, 0xbf,
	0x64, 0xd4, 0x25, 0x50, 0x60, 0x56, 0xb9, 0xe8, 0xae, 0x78, 0xcc, 0xb1, 0xae, 0x8a, 0xa0, 0xb4,
	0xd9, 0xce, 0xe0, 0xc8, 0xb4, 0x4c, 0x72, 0xcc, 0x9f, 0x2f, 0xf1, 0x9d, 0x81, 0x24, 0xb5, 0x19,
	0xda, 0x84, 0x5f, 0x98, 0x9e, 0x36, 0xb0, 0x0d, 0xcc, 0x62, 0xba, 0xa4, 0x96, 0x29, 0x61, 0xc7,
	0x36, 0x70, 0x30, 0xf3, 0xca, 0x2f, 0x37, 0xf3, 0x2a, 0xb1, 0x99, 0x77, 0x16, 0x96, 0x5c, 0xac,
	0x13, 0xdb, 0x12, 0xfb, 0x70, 0xd1, 0xa2, 0x43, 0x33, 0xc6, 0x84, 0xd0, 0x9e, 0x44, 0xb9, 0x26,
	0x9a, 0xa1, 0x32, 0x73, 0x65, 0x66, 0x99, 0x39, 0xe5, 0x90, 0x2d, 0x56, 0x66, 0xd6, 0x66, 0x96,
	0x99, 0x73, 0x9d, 0xb1, 0x05, 0x85, 0x76, 0x7d, 0xbe, 0x42, 0x3b, 0x5c, 0x97, 0xae, 0x46, 0xea,
	0xd2, 0x1f, 0x72, 0xb2, 0xfe, 0x26, 0x07, 0x1b, 0x89, 0x69, 0x25, 0xa6, 0xeb, 0xad, 0xd8, 0x29,
	0xdc, 0xe6, 0x4c, 0x9f, 0xf9, 0x87, 0x70, 0x0f, 0x22, 0x87, 0x70, 0x1f, 0xcd, 0x16, 0x7c, 0xed,
	0x67, 0x70, 0x7f, 0x92, 0x83, 0xb7, 0x0e, 0x1d, 0x23, 0x56, 0xe1, 0x89, 0x6d, 0xff, 0xfc, 0x89,
	0xe3, 0x73, 0x59, 0xeb, 0xe7, 0x17, 0x05, 0x64, 0xb8, 0x9c, 0xa2, 0xc0, 0xc5, 0x6c, 0x33, 0x44,
	0xc9, 0xf4, 0x53, 0x58, 0xdd, 0x7b, 0x81, 0x07, 0xfd, 0x13, 0x6b, 0xb0, 0x80, 0x69, 0x0d, 0x28,
	0x0c, 0xc6, 0x86, 0x80, 0x53, 0xe9, 0xcf, 0x70, 0x15, 0x58, 0x88, 0x56, 0x81, 0x1a, 0x34, 0x82,
	0x1e, 0xc4, 0xf0, 0x9e, 0xa5, 0xc3, 0x6b, 0x50, 0x66, 0xaa, 0x7c, 0x45, 0x15, 0x2d, 0x41, 0xc7,
	0x2e, 0xbf, 0xb3, 0xc2, 0xe9, 0xd8, 0x75, 0xa3, 0xd9, 0xa2, 0x10, 0xcd, 0x16, 0xca, 0x9f, 0xe5,
	0xa0, 0x4a, 0x7b, 0x78, 0x25, 0xfb, 0xc5, 0x56, 0xab, 0x10, 0x6c, 0xb5, 0xfc, 0x1d, 0x5b, 0x31,
	0xbc, 0x63, 0x0b, 0x2c, 0x2f, 0x31, 0x72, 0xd2, 0xf2, 0x25, 0x9f, 0x8e, 0x5d, 0x57, 0xb9, 0x08,
	0x2b, 0xdc, 0x36, 0xf1, 0xe6, 0x0d, 0x28, 0x4c, 0xdc, 0x91, 0x8c, 0xa3, 0x89, 0x3b, 0x52, 0xfe,
	0x34, 0x07, 0xb5, 0xb6, 0xe7, 0xe9, 0x83, 0xe3, 0x05, 0x5e, 0xc0, 0x37, 0x2e, 0x1f, 0x36, 0x2e,
	0xf9, 0x12, 0x81, 0xb9, 0xc5, 0x0c, 0x73, 0x4b, 0x11, 0x73, 0x15, 0xa8, 0x4b, 0x5b, 0x32, 0x0d,
	0xee, 0x02, 0xea, 0xd9, 0xae, 0x77, 0xdf, 0x76, 0x9f, 0xeb, 0xae, 0xb1, 0xd8, 0x0e, 0x0c, 0x41,
	0x51, 0xdc, 0x80, 0x2e, 0x5c, 0x29, 0xa9, 0xec, 0xb7, 0x72, 0x19, 0x4e, 0x47, 0xf4, 0x65, 0x76,
	0xfc, 0x05, 0x54, 0x59, 0xde, 0x17, 0xa5, 0xf8, 0x8d, 0xf0, 0xa9, 0xd7, 0x5c, 0xab, 0x84, 0xf2,
	0xff, 0x61, 0x8d, 0xd6, 0x07, 0x8c, 0xee, 0x4f, 0xc5, 0x1f, 0xc5, 0xea, 0xd4, 0x0b, 0x19, 0x8a,
	0x62, 0x35, 0xea, 0xbf, 0xe7, 0xa0, 0xc4, 0xe8, 0x89, 0x35, 0xfb, 0x3c, 0x54, 0x5c, 0xec, 0xd8,
	0x9a, 0xa7, 0x0f, 0xfd, 0xfb, 0xe6, 0x94, 0x70, 0xa0, 0x0f, 0x19, 0x9a, 0xcb, 0x1e, 0x1a, 0xe6,
	0x10, 0x13, 0x4f, 0x5e, 0x3a, 0xaf, 0x52, 0xda, 0x2e, 0x27, 0x51, 0x27, 0xb1, 0x43, 0x98, 0x22,
	0x3b, 0x6b, 0x61, 0xbf, 0xd1, 0x16, 0xbf, 0xe5, 0x38, 0x0f, 0xf6, 0xce, 0xee, 0x40, 0xb6, 0xa0,
	0x1c, 0x83, 0xcb, 0xfd, 0x36, 0xba, 0x0e, 0x45, 0x06, 0x79, 0x2e, 0xcf, 0xf6, 0x1b, 0x63, 0x54,
	0xf6, 0x00, 0x85, 0xdd, 0x26, 0x06, 0xe8, 0x3a, 0x2c, 0x31, 0xaf, 0xca, 0x72, 0x6a, 0x23, 0x43,
	0x91, 0x2a, 0xd8, 0x14, 0x1d, 0x10, 0xd7, 0x1c, 0x29, 0xa1, 0x16, 0x1f, 0xc6, 0x29, 0x25, 0xd5,
	0xdf, 0xe6, 0xe0, 0x74, 0xa4, 0x0f, 0x61, 0xeb, 0x07, 0xd1, 0x4e, 0x32, 0x4d, 0x15, 0x1d, 0xec,
	0x44, 0xd6, 0x90, 0xeb, 0x59, 0x26, 0xfd, 0x96, 0xd6, 0x8f, 0xbf, 0xcf, 0x01, 0xb4, 0x27, 0xde,
	0xb1, 0x80, 0x12, 0xc3, 0x43, 0x99, 0x8b, 0x0d, 0x65, 0x0b, 0xca, 0x8e, 0x4e, 0xc8, 0x73, 0xdb,
	0x95, 0x9b, 0x20, 0xbf, 0xcd, 0x40, 0xbf, 0x89, 0x77, 0x2c, 0x0f, 0xd9, 0xe8, 0x6f, 0x74, 0x09,
	0xea, 0xfc, 0xa3, 0x08, 0x4d, 0x37, 0x0c, 0x17, 0x13, 0x22, 0x4e, 0xdb, 0x6a, 0x9c, 0xda, 0xe6,
	0x44, 0xca, 0x66, 0x32, 0x18, 0xdc, 0x3b, 0xd1, 0x3c, 0xfb, 0x29, 0xb6, 0xc4, 0x66, 0xa6, 0x26,
	0xa9, 0x07, 0x94, 0xc8, 0x8f, 0x1d, 0x86, 0x26, 0xf1, 0x5c, 0xc9, 0x26, 0x4f, 0x66, 0x04, 0x95,
	0xb1, 0xd1, 0x41, 0x69, 0xf4, 0x26, 0xa3, 0x11, 0x77, 0xf1, 0xcb, 0x0f, 0xfb, 0x87, 0xe2, 0x85,
	0xf2, 0x59, 0x93, 0x20, 0x70, 0x9a, 0x78, 0xdd, 0xd7, 0x88, 0xda, 0x7c, 0x08, 0x6b, 0xa1, 0x77,
	0x10, 0x61, 0x15, 0xa9, 0x3a, 0x73, 0xd1, 0xaa, 0x53, 0x79, 0x00, 0x88, 0x03, 0x15, 0xaf, 0xf8,
	0xde, 0xca, 0x19, 0x38, 0x1d, 0x51, 0x24, 0x96, 0xee, 0x6b, 0x50, 0x13, 0x57, 0xcc, 0x44, 0xa0,
	0x9c, 0x83, 0x32, 0x4d, 0xc1, 0x03, 0xd3, 0x90, 0x27, 0xb0, 0xcb, 0x8e, 0x6d, 0xec, 0x98, 0x86,
	0xab, 0x7c, 0x05, 0x35, 0x95, 0xf7, 0x23, 0x78, 0xef, 0x43, 0x5d, 0x5c, 0x48, 0xd3, 0x22, 0x57,
	0x4d, 0xd3, 0xbe, 0x73, 0x08, 0x77, 0xa2, 0xd6, 0xac, 0x70, 0x53, 0x31, 0xa0, 0xc5, 0x6b, 0x8c,
	0x88, 0x7a, 0xf9, 0xb2, 0xf7, 0x41, 0xde, 0xc0, 0x98, 0xd9, 0x4b, 0x54, 0xbe, 0xe6, 0x86, 0x9b,
	0xca, 0x05, 0x38, 0x9f, 0xda, 0x8b, 0xf0, 0x84, 0x03, 0x8d, 0xe0, 0x01, 0xbf, 0x0f, 0xe9, 0x1f,
	0x31, 0xe7, 0x42, 0x47, 0xcc, 0x67, 0xfd, 0xaa, 0x32, 0x2f, 0x57, 0x3d, 0x56, 0x32, 0x06, 0xfb,
	0x83, 0x42, 0xd6, 0xfe, 0xa0, 0x18, 0xd9, 0x1f, 0x28, 0x7d, 0xdf, 0x9f, 0x62, 0xdf, 0x76, 0x8f,
	0xed, 0x2f, 0x79, 0xdf, 0x32, 0x21, 0x2a, 0xd3, 0xde, 0x92, 0xb3, 0xaa, 0x21, 0x29, 0xe5, 0x2a,
	0xd4, 0xa2, 0xa9, 0x31, 0x94, 0xe7, 0x72, 0x89, 0x3c, 0x57, 0x8f, 0xa5, 0xb8, 0x4f, 0x62, 0x25,
	0x73, 0xb6, 0x8f, 0x63, 0x05, 0xf3, 0xdd, 0x48, 0xb2, 0xbb, 0x96, 0x72, 0x3a, 0xfc, 0x5b, 0xca,
	0x73, 0xeb, 0x62, 0x3d, 0xb8, 0x4f, 0xa8, 0xbc, 0x78, 0x69, 0xe5, 0x6d, 0xa8, 0x1e, 0x66, 0x7d,
	0x27, 0x53, 0x94, 0xf7, 0x42, 0x6e, 0xc2, 0xfa, 0x7d, 0x73, 0x84, 0xc9, 0x09, 0xf1, 0xf0, 0xb8,
	0xc3, 0x92, 0xd2, 0x91, 0x89, 0x5d, 0xf4, 0x26, 0x00, 0xdb, 0xf3, 0x38, 0xb6, 0xe9, 0x7f, 0x3e,
	0x11, 0xa2, 0x28, 0xff, 0x91, 0x83, 0xd5, 0x40, 0xf0, 0x90, 0xed, 0xf5, 0xde, 0x80, 0x0a, 0x7d,
	0x5f, 0xe2, 0xe9, 0x63, 0x47, 0x1e, 0x80, 0xf9, 0x04, 0x74, 0x07, 0x4a, 0x47, 0x44, 0x62, 0x4c,
	0xa9, 0x88, 0x7b, 0x9a, 0x21, 0x6a, 0xf1, 0x88, 0x74, 0x0c, 0xf4, 0x29, 0xc0, 0x84, 0x60, 0x43,
	0x1c, 0x7a, 0x15, 0xb2, 0xca, 0x8b, 0xc3, 0xf0, 0xc9, 0x39, 0x15, 0xe0, 0x57, 0x4a, 0xee, 0x42,
	0xd5, 0xb4, 0x6c, 0x03, 0xb3, 0xd3, 0x4c, 0x43, 0xc0, 0x50, 0x33, 0xc4, 0x81, 0x4b, 0x1c, 0x12,
	0x6c, 0x28, 0x58, 0xac, 0x85, 0xd2, 0xbf, 0x22, 0x50, 0xba, 0xb0, 0xc6, 0x93, 0xd6, 0x91, 0x6f,
	0xb8, 0x8c, 0xd8, 0xcd, 0x69, 0x6f, 0xc7, 0xbc, 0xa5, 0x36, 0x4c, 0x51, 0x0b, 0x49, 0x51, 0xe5,
	0x36, 0x9c, 0x89, 0x6c, 0xa9, 0x16, 0xd8, 0xe3, 0x28, 0xbd, 0x18, 0xb2, 0x12, 0x84, 0xb3, 0xc0,
	0x2d, 0x64, 0x34, 0xcf, 0xc2, 0x2d, 0x08, 0xc7, 0x2d, 0x88, 0xf2, 0x2d, 0x9c, 0x8b, 0x40, 0x40,
	0x11, 0x8b, 0xee, 0xc6, 0x4a, 0xbd, 0x77, 0x67, 0x69, 0x8d, 0xd5, 0x7c, 0xff, 0x9d, 0x83, 0xf5,
	0x34, 0x86, 0x97, 0x84, 0x28, 0x7f, 0x9a, 0x71, 0xf1, 0xf1, 0xd6, 0x7c, 0x66, 0xfd, 0x4e, 0xe0,
	0xdd, 0x03, 0x68, 0xa5, 0xf9, 0x33, 0x39, 0x4a, 0x85, 0x45, 0x46, 0xe9, 0x97, 0x85, 0x10, 0x54,
	0xdf, 0xf6, 0x3c, 0xd7, 0x7c, 0x32, 0xa1, 0x21, 0xff, 0xda, 0xe1, 0xaf, 0x8e, 0x0f, 0xe4, 0x70,
	0xd7, 0xde, 0x98, 0x22, 0x1e, 0xd8, 0x91, 0x0a, 0xe6, 0x7c, 0x1d, 0x05, 0x73, 0x38, 0x08, 0x7f,
	0x73, 0x3e, 0x7d, 0xbf, 0xb7, 0x88, 0xe9, 0x2f, 0xf3, 0x50, 0x8f, 0x0e, 0x11, 0xda, 0x03, 0xd0,
	0x7d, 0xcb, 0xc5, 0x44, 0xb9, 0x34, 0xd7, 0x6b, 0xaa, 0x21, 0x41, 0xf4, 0x3e, 0x14, 0x06, 0xce,
	0x44, 0x8c, 0x5a, 0xca, 0xe9, 0xf1, 0x8e, 0x33, 0xe1, 0x19, 0x85, 0xb2, 0xd1, 0x4d, 0x18, 0xbf,
	0x0c, 0x90, 0x9d, 0x25, 0x1f, 0xb3, 0xe7, 0x5c, 0x46, 0x30, 0xa3, 0x87, 0x50, 0x7f, 0xee, 0x9a,
	0x9e, 0xfe, 0x64, 0x84, 0xb5, 0x91, 0x7e, 0x82, 0x5d, 0x91, 0x25, 0xe7, 0x48, 0x64, 0x35, 0x29,
	0xf8, 0x88, 0xca, 0x29, 0x7f, 0x04, 0x65, 0x69, 0xd1, 0x8c, 0x15, 0xe1, 0x00, 0x36, 0x26, 0x94,
	0x4d, 0x63, 0x57, 0xfd, 0x2c, 0xdd, 0xb2, 0x35, 0x82, 0xe9, 0x32, 0x2e, 0xbf, 0xb3, 0x98, 0x91,
	0xa2, 0xd7, 0x99, 0xf4, 0x8e, 0xed, 0xe2, 0xae, 0x6e, 0xd9, 0x7d, 0x2e, 0xaa, 0x3c, 0x83, 0x6a,
	0xe8, 0x05, 0x67, 0x98, 0xd0, 0x81, 0x35, 0x79, 0x76, 0x4f, 0xb0, 0x27, 0x96, 0x97, 0xb9, 0x3a,
	0x5f, 0x15, 0x72, 0x7d, 0xec, 0xf1, 0xfb, 0x16, 0x77, 0xe1, 0x9c, 0x8a, 0x6d, 0x07, 0x5b, 0xfe,
	0x78, 0x3e, 0xb2, 0x87, 0x0b, 0x64, 0xf0, 0x37, 0xa0, 0x95, 0x26, 0xcf, 0xf3, 0xc3, 0xb5, 0x77,
	0xa1, 0x2c, 0xbf, 0x88, 0x46, 0xcb, 0x50, 0x38, 0xd8, 0xe9, 0x35, 0x4e, 0xd1, 0x1f, 0x87, 0xbb,
	0xbd, 0x46, 0x0e, 0x95, 0xa1, 0xd8, 0xdf, 0x39, 0xe8, 0x35, 0xf2, 0xd7, 0xc6, 0xd0, 0x88, 0x7f,
	0x0e, 0x8c, 0x36, 0xe0, 0x74, 0x4f, 0xdd, 0xef, 0xb5, 0x1f, 0xb4, 0x0f, 0x3a, 0xfb, 0x5d, 0xad,
	0xa7, 0x76, 0xbe, 0x6c, 0x1f, 0xec, 0x35, 0x4e, 0xa1, 0x4d, 0xb8, 0x10, 0x7e, 0xf0, 0x70, 0xbf,
	0x7f, 0xa0, 0x1d, 0xec, 0x6b, 0x3b, 0xfb, 0xdd, 0x83, 0x76, 0xa7, 0xbb, 0xa7, 0x36, 0x72, 0xe8,
	0x02, 0x9c, 0x0b, 0xb3, 0xdc, 0xeb, 0xec, 0x76, 0xd4, 0xbd, 0x1d, 0xfa, 0xbb, 0xfd, 0xa8, 0x91,
	0xbf, 0xf6, 0x19, 0xd4, 0x22, 0x5f, 0xef, 0x52, 0x93, 0x7a, 0xfb, 0xbb, 0x8d, 0x53, 0xa8, 0x06,
	0x95, 0xb0, 0x9e, 0x32, 0x14, 0xbb, 0xfb, 0xbb, 0x7b, 0x8d, 0x3c, 0x02, 0x58, 0x3a, 0x68, 0xab,
	0x0f, 0xf6, 0x0e, 0x1a, 0x85, 0x6b, 0xb7, 0x61, 0x35, 0x76, 0x77, 0x1a, 0xad, 0x41, 0xad, 0xdf,
	0xee, 0xee, 0xde, 0xdb, 0xff, 0x5a, 0x53, 0xf7, 0xda, 0xbb, 0xdf, 0x34, 0x4e, 0xa1, 0x75, 0x68,
	0x48, 0x52, 0x77, 0xff, 0x80, 0x53, 0x73, 0xd7, 0x9e, 0xc6, 0xe6, 0x1b, 0x46, 0x67, 0x60, 0xcd,
	0xef, 0x52, 0xdb, 0x51, 0xf7, 0xda, 0x07, 0x7b, 0xd4, 0x92, 0x08, 0x59, 0x3d, 0xec, 0x76, 0x3b,
	0xdd, 0x07, 0x8d, 0x1c, 0xd5, 0x1a, 0x90, 0xf7, 0xbe, 0xee, 0x50, 0xe6, 0x7c, 0x94, 0xf9, 0xb0,
	0xfb, 0xe3, 0xee, 0xfe, 0x57, 0xdd, 0x46, 0x61, 0xfb, 0xd7, 0x6b, 0x50, 0x97, 0x45, 0x1f, 0x76,
	0xd9, 0x95, 0x98, 0x1e, 0x2c, 0xcb, 0xaf, 0xed, 0x53, 0xb2, 0x75, 0xf4, 0x7f, 0x04, 0xb4, 0x36,
	0xa7, 0x70, 0x88, 0xda, 0xfb, 0x14, 0x7a, 0xc2, 0x6a, 0xe1, 0xd0, 0x5d, 0xf6, 0x77, 0x53, 0x2b,
	0xcf, 0xc4, 0xf5, 0xf9, 0xd6, 0xe5, 0x99, 0x7c, 0x7e, 0x1f, 0x98, 0x96, 0xbb, 0xe1, 0xcf, 0xc5,
	0xd0, 0xe5, 0xb4, 0x3a, 0x35, 0xe5, 0x7b, 0xb4, 0xd6, 0x95, 0xd9, 0x8c, 0x7e, 0x37, 0x4f, 0xa1,
	0x11, 0xff, 0x74, 0x0c, 0xa5, 0xe0, 0xae, 0x19, 0xdf, 0xa7, 0xb5, 0xae, 0xcd, 0xc3, 0x1a, 0xee,
	0x2c, 0xf1, 0x2d, 0xd4, 0xd5, 0x79, 0xbe, 0x19, 0xc9, 0xec, 0x2c, 0xeb, 0xf3, 0x12, 0xee, 0xc0,
	0xe8, 0xf5, 0x73, 0x94, 0xfa, 0xe1, 0x51, 0xca, 0x57, 0x0e, 0x69, 0x0e, 0x4c, 0xbf, 0xc9, 0xae,
	0x9c, 0x42, 0xc7, 0xb0, 0x1a, 0xbb, 0xdb, 0x80, 0x52, 0xc4, 0xd3, 0x2f, 0x71, 0xb4, 0xae, 0xce,
	0xc1, 0x19, 0x8d, 0x88, 0xf0, 0x5d, 0x86, 0xf4, 0x88, 0x48, 0xb9, 0x29, 0x91, 0x1e, 0x11, 0xa9,
	0xd7, 0x22, 0x58, 0x70, 0x47, 0xee, 0x30, 0xa4, 0x05, 0x77, 0xda, 0xcd, 0x89, 0xd6, 0xe5, 0x99,
	0x7c, 0x61, 0xa7, 0xc5, 0x6e, 0x34, 0xa4, 0x39, 0x2d, 0xfd, 0xc6, 0x44, 0xeb, 0xea, 0x1c, 0x9c,
	0xf1, 0x28, 0x08, 0xce, 0x47, 0xb3, 0xa2, 0x20, 0x71, 0x9a, 0x9f, 0x15, 0x05, 0xc9, 0xa3, 0x56,
	0x11, 0x05, 0xb1, 0x73, 0xcd, 0x2b, 0x73, 0x9c, 0xc3, 0x64, 0x47, 0x41, 0xfa, 0x89, 0x8d, 0x72,
	0x0a, 0xfd, 0x22, 0x07, 0xcd, 0xac, 0x33, 0x0e, 0x94, 0x52, 0xeb, 0xcd, 0x38, 0x96, 0x69, 0x6d,
	0x2f, 0x22, 0xe2, 0x5b, 0xf1, 0x3d, 0xa0, 0xe4, 0x1a, 0x88, 0xde, 0x4b, 0x1b, 0x99, 0x8c, 0x95,
	0xb6, 0xf5, 0xfe, 0x7c, 0xcc, 0x7e, 0x97, 0x7d, 0x28, 0xcb, 0x53, 0x15, 0x94, 0x92, 0xa5, 0x63,
	0x67, 0x3a, 0x2d, 0x65, 0x1a, 0x8b, 0xaf, 0xf4, 0x01, 0x14, 0x29, 0x15, 0x5d, 0x48, 0xe7, 0x96,
	0xca, 0xde, 0xcc, 0x7a, 0xec, 0x2b, 0x7a, 0x0c, 0x4b, 0xfc, 0x18, 0x01, 0xa5, 0xa0, 0x10, 0x91,
	0xc3, 0x8e, 0xd6, 0xc5, 0x6c, 0x06, 0x5f, 0xdd, 0x77, 0xfc, 0x1f, 0xb1, 0x88, 0x13, 0x02, 0xf4,
	0x4e, 0xfa, 0xc7, 0xeb, 0xd1, 0x03, 0x89, 0xd6, 0xa5, 0x19, 0x5c, 0xe1, 0x49, 0x11, 0xab, 0x80,
	0x2f, 0xcf, 0xdc, 0xc6, 0x64, 0x4f, 0x8a, 0xf4, 0x8d, 0x12, 0x0f, 0x92, 0xe4, 0x46, 0x2a, 0x2d,
	0x48, 0x32, 0xb7, 0xaf, 0x69, 0x41, 0x92, 0xbd, 0x37, 0x53, 0x4e, 0x21, 0x0f, 0x4e, 0xa7, 0xc0,
	0x66, 0xe8, 0xfd, 0xac, 0x20, 0x4f, 0xc3, 0xf0, 0x5a, 0x1f, 0xcc, 0xc9, 0x1d, 0x1e, 0x7c, 0x31,
	0xe9, 0xdf, 0xca, 0xc6, 0x92, 0x32, 0x07, 0x3f, 0x3e, 0xc5, 0xb7, 0xff, 0xb9, 0x00, 0x2b, 0x1c,
	0x12, 0x15, 0x15, 0xcc, 0x37, 0x00, 0xc1, 0x69, 0x04, 0x7a, 0x3b, 0xdd, 0x27, 0x91, 0x23, 0x9e,
	0xd6, 0x3b, 0xd3, 0x99, 0xc2, 0x81, 0x16, 0x42, 0xf6, 0xd3, 0x02, 0x2d, 0x79, 0x80, 0x91, 0x16,
	0x68, 0x29, 0xc7, 0x03, 0xca, 0x29, 0xf4, 0x25, 0x54, 0x7c, 0x08, 0x19, 0xa5, 0x41, 0xd0, 0x31,
	0x8c, 0xbc, 0xf5, 0xf6, 0x54, 0x9e, 0xb0, 0xd5, 0x21, 0x7c, 0x38, 0xcd, 0xea, 0x24, 0x0e, 0x9d,
	0x66, 0x75, 0x1a, 0xc8, 0x1c, 0xf8, 0x84, 0xa3, 0x48, 0x99, 0x3e, 0x89, 0x80, 0x78, 0x99, 0x3e,
	0x89, 0x42, 0x51, 0xca, 0xa9, 0x7b, 0xf0, 0x93, 0xb2, 0xe4, 0x78, 0xb2, 0xc4, 0xfe, 0x65, 0xd2,
	0x47, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x34, 0x5c, 0x26, 0xba, 0xc9, 0x4a, 0x00, 0x00,
}
